
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_cargos
 * 
 */
export type tbl_cargos = $Result.DefaultSelection<Prisma.$tbl_cargosPayload>
/**
 * Model tbl_carrinho
 * 
 */
export type tbl_carrinho = $Result.DefaultSelection<Prisma.$tbl_carrinhoPayload>
/**
 * Model tbl_categorias_produtos
 * 
 */
export type tbl_categorias_produtos = $Result.DefaultSelection<Prisma.$tbl_categorias_produtosPayload>
/**
 * Model tbl_compras
 * 
 */
export type tbl_compras = $Result.DefaultSelection<Prisma.$tbl_comprasPayload>
/**
 * Model tbl_funcionarios
 * 
 */
export type tbl_funcionarios = $Result.DefaultSelection<Prisma.$tbl_funcionariosPayload>
/**
 * Model tbl_pet
 * 
 */
export type tbl_pet = $Result.DefaultSelection<Prisma.$tbl_petPayload>
/**
 * Model tbl_produtos
 * 
 */
export type tbl_produtos = $Result.DefaultSelection<Prisma.$tbl_produtosPayload>
/**
 * Model tbl_servicos
 * 
 */
export type tbl_servicos = $Result.DefaultSelection<Prisma.$tbl_servicosPayload>
/**
 * Model tbl_sexo
 * 
 */
export type tbl_sexo = $Result.DefaultSelection<Prisma.$tbl_sexoPayload>
/**
 * Model tbl_taxonomia
 * 
 */
export type tbl_taxonomia = $Result.DefaultSelection<Prisma.$tbl_taxonomiaPayload>
/**
 * Model tbl_usuario
 * 
 */
export type tbl_usuario = $Result.DefaultSelection<Prisma.$tbl_usuarioPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_cargos
 * const tbl_cargos = await prisma.tbl_cargos.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_cargos
   * const tbl_cargos = await prisma.tbl_cargos.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbl_cargos`: Exposes CRUD operations for the **tbl_cargos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_cargos
    * const tbl_cargos = await prisma.tbl_cargos.findMany()
    * ```
    */
  get tbl_cargos(): Prisma.tbl_cargosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_carrinho`: Exposes CRUD operations for the **tbl_carrinho** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_carrinhos
    * const tbl_carrinhos = await prisma.tbl_carrinho.findMany()
    * ```
    */
  get tbl_carrinho(): Prisma.tbl_carrinhoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_categorias_produtos`: Exposes CRUD operations for the **tbl_categorias_produtos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_categorias_produtos
    * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findMany()
    * ```
    */
  get tbl_categorias_produtos(): Prisma.tbl_categorias_produtosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_compras`: Exposes CRUD operations for the **tbl_compras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_compras
    * const tbl_compras = await prisma.tbl_compras.findMany()
    * ```
    */
  get tbl_compras(): Prisma.tbl_comprasDelegate<ExtArgs>;

  /**
   * `prisma.tbl_funcionarios`: Exposes CRUD operations for the **tbl_funcionarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_funcionarios
    * const tbl_funcionarios = await prisma.tbl_funcionarios.findMany()
    * ```
    */
  get tbl_funcionarios(): Prisma.tbl_funcionariosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_pet`: Exposes CRUD operations for the **tbl_pet** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_pets
    * const tbl_pets = await prisma.tbl_pet.findMany()
    * ```
    */
  get tbl_pet(): Prisma.tbl_petDelegate<ExtArgs>;

  /**
   * `prisma.tbl_produtos`: Exposes CRUD operations for the **tbl_produtos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_produtos
    * const tbl_produtos = await prisma.tbl_produtos.findMany()
    * ```
    */
  get tbl_produtos(): Prisma.tbl_produtosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_servicos`: Exposes CRUD operations for the **tbl_servicos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_servicos
    * const tbl_servicos = await prisma.tbl_servicos.findMany()
    * ```
    */
  get tbl_servicos(): Prisma.tbl_servicosDelegate<ExtArgs>;

  /**
   * `prisma.tbl_sexo`: Exposes CRUD operations for the **tbl_sexo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_sexos
    * const tbl_sexos = await prisma.tbl_sexo.findMany()
    * ```
    */
  get tbl_sexo(): Prisma.tbl_sexoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_taxonomia`: Exposes CRUD operations for the **tbl_taxonomia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_taxonomias
    * const tbl_taxonomias = await prisma.tbl_taxonomia.findMany()
    * ```
    */
  get tbl_taxonomia(): Prisma.tbl_taxonomiaDelegate<ExtArgs>;

  /**
   * `prisma.tbl_usuario`: Exposes CRUD operations for the **tbl_usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_usuarios
    * const tbl_usuarios = await prisma.tbl_usuario.findMany()
    * ```
    */
  get tbl_usuario(): Prisma.tbl_usuarioDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_cargos: 'tbl_cargos',
    tbl_carrinho: 'tbl_carrinho',
    tbl_categorias_produtos: 'tbl_categorias_produtos',
    tbl_compras: 'tbl_compras',
    tbl_funcionarios: 'tbl_funcionarios',
    tbl_pet: 'tbl_pet',
    tbl_produtos: 'tbl_produtos',
    tbl_servicos: 'tbl_servicos',
    tbl_sexo: 'tbl_sexo',
    tbl_taxonomia: 'tbl_taxonomia',
    tbl_usuario: 'tbl_usuario'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbl_cargos' | 'tbl_carrinho' | 'tbl_categorias_produtos' | 'tbl_compras' | 'tbl_funcionarios' | 'tbl_pet' | 'tbl_produtos' | 'tbl_servicos' | 'tbl_sexo' | 'tbl_taxonomia' | 'tbl_usuario'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      tbl_cargos: {
        payload: Prisma.$tbl_cargosPayload<ExtArgs>
        fields: Prisma.tbl_cargosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cargosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cargosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          findFirst: {
            args: Prisma.tbl_cargosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cargosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          findMany: {
            args: Prisma.tbl_cargosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>[]
          }
          create: {
            args: Prisma.tbl_cargosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          createMany: {
            args: Prisma.tbl_cargosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_cargosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          update: {
            args: Prisma.tbl_cargosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cargosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cargosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cargosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cargosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cargosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_cargos>
          }
          groupBy: {
            args: Prisma.tbl_cargosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_cargosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cargosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_cargosCountAggregateOutputType> | number
          }
        }
      }
      tbl_carrinho: {
        payload: Prisma.$tbl_carrinhoPayload<ExtArgs>
        fields: Prisma.tbl_carrinhoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_carrinhoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_carrinhoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          findFirst: {
            args: Prisma.tbl_carrinhoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_carrinhoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          findMany: {
            args: Prisma.tbl_carrinhoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>[]
          }
          create: {
            args: Prisma.tbl_carrinhoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          createMany: {
            args: Prisma.tbl_carrinhoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_carrinhoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          update: {
            args: Prisma.tbl_carrinhoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_carrinhoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_carrinhoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_carrinhoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_carrinhoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_carrinhoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_carrinho>
          }
          groupBy: {
            args: Prisma.tbl_carrinhoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_carrinhoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_carrinhoCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_carrinhoCountAggregateOutputType> | number
          }
        }
      }
      tbl_categorias_produtos: {
        payload: Prisma.$tbl_categorias_produtosPayload<ExtArgs>
        fields: Prisma.tbl_categorias_produtosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_categorias_produtosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_categorias_produtosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          findFirst: {
            args: Prisma.tbl_categorias_produtosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_categorias_produtosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          findMany: {
            args: Prisma.tbl_categorias_produtosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>[]
          }
          create: {
            args: Prisma.tbl_categorias_produtosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          createMany: {
            args: Prisma.tbl_categorias_produtosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_categorias_produtosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          update: {
            args: Prisma.tbl_categorias_produtosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_categorias_produtosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_categorias_produtosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_categorias_produtosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_categorias_produtosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_categorias_produtosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_categorias_produtos>
          }
          groupBy: {
            args: Prisma.tbl_categorias_produtosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_categorias_produtosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_categorias_produtosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_categorias_produtosCountAggregateOutputType> | number
          }
        }
      }
      tbl_compras: {
        payload: Prisma.$tbl_comprasPayload<ExtArgs>
        fields: Prisma.tbl_comprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_comprasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_comprasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          findFirst: {
            args: Prisma.tbl_comprasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_comprasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          findMany: {
            args: Prisma.tbl_comprasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>[]
          }
          create: {
            args: Prisma.tbl_comprasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          createMany: {
            args: Prisma.tbl_comprasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_comprasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          update: {
            args: Prisma.tbl_comprasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          deleteMany: {
            args: Prisma.tbl_comprasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_comprasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_comprasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_comprasPayload>
          }
          aggregate: {
            args: Prisma.Tbl_comprasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_compras>
          }
          groupBy: {
            args: Prisma.tbl_comprasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_comprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_comprasCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_comprasCountAggregateOutputType> | number
          }
        }
      }
      tbl_funcionarios: {
        payload: Prisma.$tbl_funcionariosPayload<ExtArgs>
        fields: Prisma.tbl_funcionariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_funcionariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_funcionariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          findFirst: {
            args: Prisma.tbl_funcionariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_funcionariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          findMany: {
            args: Prisma.tbl_funcionariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>[]
          }
          create: {
            args: Prisma.tbl_funcionariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          createMany: {
            args: Prisma.tbl_funcionariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_funcionariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          update: {
            args: Prisma.tbl_funcionariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_funcionariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_funcionariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_funcionariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_funcionariosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_funcionariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_funcionarios>
          }
          groupBy: {
            args: Prisma.tbl_funcionariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_funcionariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_funcionariosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_funcionariosCountAggregateOutputType> | number
          }
        }
      }
      tbl_pet: {
        payload: Prisma.$tbl_petPayload<ExtArgs>
        fields: Prisma.tbl_petFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_petFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_petFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          findFirst: {
            args: Prisma.tbl_petFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_petFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          findMany: {
            args: Prisma.tbl_petFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>[]
          }
          create: {
            args: Prisma.tbl_petCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          createMany: {
            args: Prisma.tbl_petCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_petDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          update: {
            args: Prisma.tbl_petUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          deleteMany: {
            args: Prisma.tbl_petDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_petUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_petUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_petPayload>
          }
          aggregate: {
            args: Prisma.Tbl_petAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_pet>
          }
          groupBy: {
            args: Prisma.tbl_petGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_petGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_petCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_petCountAggregateOutputType> | number
          }
        }
      }
      tbl_produtos: {
        payload: Prisma.$tbl_produtosPayload<ExtArgs>
        fields: Prisma.tbl_produtosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_produtosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_produtosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          findFirst: {
            args: Prisma.tbl_produtosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_produtosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          findMany: {
            args: Prisma.tbl_produtosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>[]
          }
          create: {
            args: Prisma.tbl_produtosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          createMany: {
            args: Prisma.tbl_produtosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_produtosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          update: {
            args: Prisma.tbl_produtosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_produtosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_produtosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_produtosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_produtosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_produtosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_produtos>
          }
          groupBy: {
            args: Prisma.tbl_produtosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_produtosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_produtosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_produtosCountAggregateOutputType> | number
          }
        }
      }
      tbl_servicos: {
        payload: Prisma.$tbl_servicosPayload<ExtArgs>
        fields: Prisma.tbl_servicosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_servicosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_servicosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          findFirst: {
            args: Prisma.tbl_servicosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_servicosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          findMany: {
            args: Prisma.tbl_servicosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>[]
          }
          create: {
            args: Prisma.tbl_servicosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          createMany: {
            args: Prisma.tbl_servicosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_servicosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          update: {
            args: Prisma.tbl_servicosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          deleteMany: {
            args: Prisma.tbl_servicosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_servicosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_servicosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_servicosPayload>
          }
          aggregate: {
            args: Prisma.Tbl_servicosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_servicos>
          }
          groupBy: {
            args: Prisma.tbl_servicosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_servicosGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_servicosCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_servicosCountAggregateOutputType> | number
          }
        }
      }
      tbl_sexo: {
        payload: Prisma.$tbl_sexoPayload<ExtArgs>
        fields: Prisma.tbl_sexoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_sexoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_sexoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findFirst: {
            args: Prisma.tbl_sexoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_sexoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          findMany: {
            args: Prisma.tbl_sexoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>[]
          }
          create: {
            args: Prisma.tbl_sexoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          createMany: {
            args: Prisma.tbl_sexoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_sexoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          update: {
            args: Prisma.tbl_sexoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_sexoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_sexoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_sexoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_sexoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_sexoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_sexo>
          }
          groupBy: {
            args: Prisma.tbl_sexoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_sexoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_sexoCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_sexoCountAggregateOutputType> | number
          }
        }
      }
      tbl_taxonomia: {
        payload: Prisma.$tbl_taxonomiaPayload<ExtArgs>
        fields: Prisma.tbl_taxonomiaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_taxonomiaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_taxonomiaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          findFirst: {
            args: Prisma.tbl_taxonomiaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_taxonomiaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          findMany: {
            args: Prisma.tbl_taxonomiaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>[]
          }
          create: {
            args: Prisma.tbl_taxonomiaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          createMany: {
            args: Prisma.tbl_taxonomiaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_taxonomiaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          update: {
            args: Prisma.tbl_taxonomiaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          deleteMany: {
            args: Prisma.tbl_taxonomiaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_taxonomiaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_taxonomiaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_taxonomiaPayload>
          }
          aggregate: {
            args: Prisma.Tbl_taxonomiaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_taxonomia>
          }
          groupBy: {
            args: Prisma.tbl_taxonomiaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_taxonomiaGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_taxonomiaCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_taxonomiaCountAggregateOutputType> | number
          }
        }
      }
      tbl_usuario: {
        payload: Prisma.$tbl_usuarioPayload<ExtArgs>
        fields: Prisma.tbl_usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_usuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_usuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          findFirst: {
            args: Prisma.tbl_usuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_usuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          findMany: {
            args: Prisma.tbl_usuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>[]
          }
          create: {
            args: Prisma.tbl_usuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          createMany: {
            args: Prisma.tbl_usuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_usuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          update: {
            args: Prisma.tbl_usuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          deleteMany: {
            args: Prisma.tbl_usuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_usuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_usuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          aggregate: {
            args: Prisma.Tbl_usuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_usuario>
          }
          groupBy: {
            args: Prisma.tbl_usuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_usuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_usuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_usuarioCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_cargosCountOutputType
   */

  export type Tbl_cargosCountOutputType = {
    tbl_funcionarios: number
  }

  export type Tbl_cargosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_funcionarios?: boolean | Tbl_cargosCountOutputTypeCountTbl_funcionariosArgs
  }

  // Custom InputTypes
  /**
   * Tbl_cargosCountOutputType without action
   */
  export type Tbl_cargosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_cargosCountOutputType
     */
    select?: Tbl_cargosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_cargosCountOutputType without action
   */
  export type Tbl_cargosCountOutputTypeCountTbl_funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_funcionariosWhereInput
  }


  /**
   * Count Type Tbl_categorias_produtosCountOutputType
   */

  export type Tbl_categorias_produtosCountOutputType = {
    tbl_produtos: number
  }

  export type Tbl_categorias_produtosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_produtos?: boolean | Tbl_categorias_produtosCountOutputTypeCountTbl_produtosArgs
  }

  // Custom InputTypes
  /**
   * Tbl_categorias_produtosCountOutputType without action
   */
  export type Tbl_categorias_produtosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_categorias_produtosCountOutputType
     */
    select?: Tbl_categorias_produtosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_categorias_produtosCountOutputType without action
   */
  export type Tbl_categorias_produtosCountOutputTypeCountTbl_produtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_produtosWhereInput
  }


  /**
   * Count Type Tbl_funcionariosCountOutputType
   */

  export type Tbl_funcionariosCountOutputType = {
    tbl_servicos: number
  }

  export type Tbl_funcionariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_servicos?: boolean | Tbl_funcionariosCountOutputTypeCountTbl_servicosArgs
  }

  // Custom InputTypes
  /**
   * Tbl_funcionariosCountOutputType without action
   */
  export type Tbl_funcionariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_funcionariosCountOutputType
     */
    select?: Tbl_funcionariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_funcionariosCountOutputType without action
   */
  export type Tbl_funcionariosCountOutputTypeCountTbl_servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_servicosWhereInput
  }


  /**
   * Count Type Tbl_petCountOutputType
   */

  export type Tbl_petCountOutputType = {
    tbl_servicos: number
  }

  export type Tbl_petCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_servicos?: boolean | Tbl_petCountOutputTypeCountTbl_servicosArgs
  }

  // Custom InputTypes
  /**
   * Tbl_petCountOutputType without action
   */
  export type Tbl_petCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_petCountOutputType
     */
    select?: Tbl_petCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_petCountOutputType without action
   */
  export type Tbl_petCountOutputTypeCountTbl_servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_servicosWhereInput
  }


  /**
   * Count Type Tbl_sexoCountOutputType
   */

  export type Tbl_sexoCountOutputType = {
    tbl_funcionarios: number
    tbl_pet: number
    tbl_usuario: number
  }

  export type Tbl_sexoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_funcionarios?: boolean | Tbl_sexoCountOutputTypeCountTbl_funcionariosArgs
    tbl_pet?: boolean | Tbl_sexoCountOutputTypeCountTbl_petArgs
    tbl_usuario?: boolean | Tbl_sexoCountOutputTypeCountTbl_usuarioArgs
  }

  // Custom InputTypes
  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_sexoCountOutputType
     */
    select?: Tbl_sexoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_funcionariosWhereInput
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_petWhereInput
  }

  /**
   * Tbl_sexoCountOutputType without action
   */
  export type Tbl_sexoCountOutputTypeCountTbl_usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuarioWhereInput
  }


  /**
   * Count Type Tbl_taxonomiaCountOutputType
   */

  export type Tbl_taxonomiaCountOutputType = {
    tbl_pet: number
  }

  export type Tbl_taxonomiaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_pet?: boolean | Tbl_taxonomiaCountOutputTypeCountTbl_petArgs
  }

  // Custom InputTypes
  /**
   * Tbl_taxonomiaCountOutputType without action
   */
  export type Tbl_taxonomiaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_taxonomiaCountOutputType
     */
    select?: Tbl_taxonomiaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_taxonomiaCountOutputType without action
   */
  export type Tbl_taxonomiaCountOutputTypeCountTbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_petWhereInput
  }


  /**
   * Count Type Tbl_usuarioCountOutputType
   */

  export type Tbl_usuarioCountOutputType = {
    tbl_carrinho: number
    tbl_compras: number
    tbl_pet: number
  }

  export type Tbl_usuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_carrinho?: boolean | Tbl_usuarioCountOutputTypeCountTbl_carrinhoArgs
    tbl_compras?: boolean | Tbl_usuarioCountOutputTypeCountTbl_comprasArgs
    tbl_pet?: boolean | Tbl_usuarioCountOutputTypeCountTbl_petArgs
  }

  // Custom InputTypes
  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_usuarioCountOutputType
     */
    select?: Tbl_usuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeCountTbl_carrinhoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_carrinhoWhereInput
  }

  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeCountTbl_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_comprasWhereInput
  }

  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeCountTbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_petWhereInput
  }


  /**
   * Models
   */

  /**
   * Model tbl_cargos
   */

  export type AggregateTbl_cargos = {
    _count: Tbl_cargosCountAggregateOutputType | null
    _avg: Tbl_cargosAvgAggregateOutputType | null
    _sum: Tbl_cargosSumAggregateOutputType | null
    _min: Tbl_cargosMinAggregateOutputType | null
    _max: Tbl_cargosMaxAggregateOutputType | null
  }

  export type Tbl_cargosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_cargosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_cargosMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_cargosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_cargosCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_cargosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_cargosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_cargosMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_cargosMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_cargosCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_cargosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cargos to aggregate.
     */
    where?: tbl_cargosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cargos to fetch.
     */
    orderBy?: tbl_cargosOrderByWithRelationInput | tbl_cargosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cargosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_cargos
    **/
    _count?: true | Tbl_cargosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cargosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cargosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cargosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cargosMaxAggregateInputType
  }

  export type GetTbl_cargosAggregateType<T extends Tbl_cargosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cargos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cargos[P]>
      : GetScalarType<T[P], AggregateTbl_cargos[P]>
  }




  export type tbl_cargosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cargosWhereInput
    orderBy?: tbl_cargosOrderByWithAggregationInput | tbl_cargosOrderByWithAggregationInput[]
    by: Tbl_cargosScalarFieldEnum[] | Tbl_cargosScalarFieldEnum
    having?: tbl_cargosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cargosCountAggregateInputType | true
    _avg?: Tbl_cargosAvgAggregateInputType
    _sum?: Tbl_cargosSumAggregateInputType
    _min?: Tbl_cargosMinAggregateInputType
    _max?: Tbl_cargosMaxAggregateInputType
  }

  export type Tbl_cargosGroupByOutputType = {
    id: number
    nome: string | null
    _count: Tbl_cargosCountAggregateOutputType | null
    _avg: Tbl_cargosAvgAggregateOutputType | null
    _sum: Tbl_cargosSumAggregateOutputType | null
    _min: Tbl_cargosMinAggregateOutputType | null
    _max: Tbl_cargosMaxAggregateOutputType | null
  }

  type GetTbl_cargosGroupByPayload<T extends tbl_cargosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cargosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cargosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cargosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cargosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cargosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_funcionarios?: boolean | tbl_cargos$tbl_funcionariosArgs<ExtArgs>
    _count?: boolean | Tbl_cargosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_cargos"]>

  export type tbl_cargosSelectScalar = {
    id?: boolean
    nome?: boolean
  }


  export type tbl_cargosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_funcionarios?: boolean | tbl_cargos$tbl_funcionariosArgs<ExtArgs>
    _count?: boolean | Tbl_cargosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_cargosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cargos"
    objects: {
      tbl_funcionarios: Prisma.$tbl_funcionariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
    }, ExtArgs["result"]["tbl_cargos"]>
    composites: {}
  }


  type tbl_cargosGetPayload<S extends boolean | null | undefined | tbl_cargosDefaultArgs> = $Result.GetResult<Prisma.$tbl_cargosPayload, S>

  type tbl_cargosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_cargosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_cargosCountAggregateInputType | true
    }

  export interface tbl_cargosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cargos'], meta: { name: 'tbl_cargos' } }
    /**
     * Find zero or one Tbl_cargos that matches the filter.
     * @param {tbl_cargosFindUniqueArgs} args - Arguments to find a Tbl_cargos
     * @example
     * // Get one Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_cargosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_cargos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_cargosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cargos
     * @example
     * // Get one Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_cargosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosFindFirstArgs} args - Arguments to find a Tbl_cargos
     * @example
     * // Get one Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_cargosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_cargos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosFindFirstOrThrowArgs} args - Arguments to find a Tbl_cargos
     * @example
     * // Get one Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_cargosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_cargos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findMany()
     * 
     * // Get first 10 Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_cargosWithIdOnly = await prisma.tbl_cargos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_cargosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_cargos.
     * @param {tbl_cargosCreateArgs} args - Arguments to create a Tbl_cargos.
     * @example
     * // Create one Tbl_cargos
     * const Tbl_cargos = await prisma.tbl_cargos.create({
     *   data: {
     *     // ... data to create a Tbl_cargos
     *   }
     * })
     * 
    **/
    create<T extends tbl_cargosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosCreateArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_cargos.
     * @param {tbl_cargosCreateManyArgs} args - Arguments to create many Tbl_cargos.
     * @example
     * // Create many Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_cargosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cargos.
     * @param {tbl_cargosDeleteArgs} args - Arguments to delete one Tbl_cargos.
     * @example
     * // Delete one Tbl_cargos
     * const Tbl_cargos = await prisma.tbl_cargos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cargos
     *   }
     * })
     * 
    **/
    delete<T extends tbl_cargosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_cargos.
     * @param {tbl_cargosUpdateArgs} args - Arguments to update one Tbl_cargos.
     * @example
     * // Update one Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_cargosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_cargos.
     * @param {tbl_cargosDeleteManyArgs} args - Arguments to filter Tbl_cargos to delete.
     * @example
     * // Delete a few Tbl_cargos
     * const { count } = await prisma.tbl_cargos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_cargosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cargosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_cargosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cargos.
     * @param {tbl_cargosUpsertArgs} args - Arguments to update or create a Tbl_cargos.
     * @example
     * // Update or create a Tbl_cargos
     * const tbl_cargos = await prisma.tbl_cargos.upsert({
     *   create: {
     *     // ... data to create a Tbl_cargos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cargos we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_cargosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cargosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosCountArgs} args - Arguments to filter Tbl_cargos to count.
     * @example
     * // Count the number of Tbl_cargos
     * const count = await prisma.tbl_cargos.count({
     *   where: {
     *     // ... the filter for the Tbl_cargos we want to count
     *   }
     * })
    **/
    count<T extends tbl_cargosCountArgs>(
      args?: Subset<T, tbl_cargosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cargosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cargosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cargosAggregateArgs>(args: Subset<T, Tbl_cargosAggregateArgs>): Prisma.PrismaPromise<GetTbl_cargosAggregateType<T>>

    /**
     * Group by Tbl_cargos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cargosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cargosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cargosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cargosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cargosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cargosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cargos model
   */
  readonly fields: tbl_cargosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cargos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cargosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_funcionarios<T extends tbl_cargos$tbl_funcionariosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cargos$tbl_funcionariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_cargos model
   */ 
  interface tbl_cargosFieldRefs {
    readonly id: FieldRef<"tbl_cargos", 'Int'>
    readonly nome: FieldRef<"tbl_cargos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cargos findUnique
   */
  export type tbl_cargosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cargos to fetch.
     */
    where: tbl_cargosWhereUniqueInput
  }

  /**
   * tbl_cargos findUniqueOrThrow
   */
  export type tbl_cargosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cargos to fetch.
     */
    where: tbl_cargosWhereUniqueInput
  }

  /**
   * tbl_cargos findFirst
   */
  export type tbl_cargosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cargos to fetch.
     */
    where?: tbl_cargosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cargos to fetch.
     */
    orderBy?: tbl_cargosOrderByWithRelationInput | tbl_cargosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cargos.
     */
    cursor?: tbl_cargosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cargos.
     */
    distinct?: Tbl_cargosScalarFieldEnum | Tbl_cargosScalarFieldEnum[]
  }

  /**
   * tbl_cargos findFirstOrThrow
   */
  export type tbl_cargosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cargos to fetch.
     */
    where?: tbl_cargosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cargos to fetch.
     */
    orderBy?: tbl_cargosOrderByWithRelationInput | tbl_cargosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cargos.
     */
    cursor?: tbl_cargosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cargos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cargos.
     */
    distinct?: Tbl_cargosScalarFieldEnum | Tbl_cargosScalarFieldEnum[]
  }

  /**
   * tbl_cargos findMany
   */
  export type tbl_cargosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_cargos to fetch.
     */
    where?: tbl_cargosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cargos to fetch.
     */
    orderBy?: tbl_cargosOrderByWithRelationInput | tbl_cargosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_cargos.
     */
    cursor?: tbl_cargosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cargos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cargos.
     */
    skip?: number
    distinct?: Tbl_cargosScalarFieldEnum | Tbl_cargosScalarFieldEnum[]
  }

  /**
   * tbl_cargos create
   */
  export type tbl_cargosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_cargos.
     */
    data?: XOR<tbl_cargosCreateInput, tbl_cargosUncheckedCreateInput>
  }

  /**
   * tbl_cargos createMany
   */
  export type tbl_cargosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_cargos.
     */
    data: tbl_cargosCreateManyInput | tbl_cargosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cargos update
   */
  export type tbl_cargosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_cargos.
     */
    data: XOR<tbl_cargosUpdateInput, tbl_cargosUncheckedUpdateInput>
    /**
     * Choose, which tbl_cargos to update.
     */
    where: tbl_cargosWhereUniqueInput
  }

  /**
   * tbl_cargos updateMany
   */
  export type tbl_cargosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_cargos.
     */
    data: XOR<tbl_cargosUpdateManyMutationInput, tbl_cargosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_cargos to update
     */
    where?: tbl_cargosWhereInput
  }

  /**
   * tbl_cargos upsert
   */
  export type tbl_cargosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_cargos to update in case it exists.
     */
    where: tbl_cargosWhereUniqueInput
    /**
     * In case the tbl_cargos found by the `where` argument doesn't exist, create a new tbl_cargos with this data.
     */
    create: XOR<tbl_cargosCreateInput, tbl_cargosUncheckedCreateInput>
    /**
     * In case the tbl_cargos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cargosUpdateInput, tbl_cargosUncheckedUpdateInput>
  }

  /**
   * tbl_cargos delete
   */
  export type tbl_cargosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
    /**
     * Filter which tbl_cargos to delete.
     */
    where: tbl_cargosWhereUniqueInput
  }

  /**
   * tbl_cargos deleteMany
   */
  export type tbl_cargosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cargos to delete
     */
    where?: tbl_cargosWhereInput
  }

  /**
   * tbl_cargos.tbl_funcionarios
   */
  export type tbl_cargos$tbl_funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    where?: tbl_funcionariosWhereInput
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    cursor?: tbl_funcionariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_funcionariosScalarFieldEnum | Tbl_funcionariosScalarFieldEnum[]
  }

  /**
   * tbl_cargos without action
   */
  export type tbl_cargosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cargos
     */
    select?: tbl_cargosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_cargosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_carrinho
   */

  export type AggregateTbl_carrinho = {
    _count: Tbl_carrinhoCountAggregateOutputType | null
    _avg: Tbl_carrinhoAvgAggregateOutputType | null
    _sum: Tbl_carrinhoSumAggregateOutputType | null
    _min: Tbl_carrinhoMinAggregateOutputType | null
    _max: Tbl_carrinhoMaxAggregateOutputType | null
  }

  export type Tbl_carrinhoAvgAggregateOutputType = {
    id: number | null
    quantidade_produtos: number | null
    valor_total: number | null
    id_produtos: number | null
    id_cliente: number | null
  }

  export type Tbl_carrinhoSumAggregateOutputType = {
    id: number | null
    quantidade_produtos: number | null
    valor_total: number | null
    id_produtos: number | null
    id_cliente: number | null
  }

  export type Tbl_carrinhoMinAggregateOutputType = {
    id: number | null
    quantidade_produtos: number | null
    valor_total: number | null
    id_produtos: number | null
    id_cliente: number | null
  }

  export type Tbl_carrinhoMaxAggregateOutputType = {
    id: number | null
    quantidade_produtos: number | null
    valor_total: number | null
    id_produtos: number | null
    id_cliente: number | null
  }

  export type Tbl_carrinhoCountAggregateOutputType = {
    id: number
    quantidade_produtos: number
    valor_total: number
    id_produtos: number
    id_cliente: number
    _all: number
  }


  export type Tbl_carrinhoAvgAggregateInputType = {
    id?: true
    quantidade_produtos?: true
    valor_total?: true
    id_produtos?: true
    id_cliente?: true
  }

  export type Tbl_carrinhoSumAggregateInputType = {
    id?: true
    quantidade_produtos?: true
    valor_total?: true
    id_produtos?: true
    id_cliente?: true
  }

  export type Tbl_carrinhoMinAggregateInputType = {
    id?: true
    quantidade_produtos?: true
    valor_total?: true
    id_produtos?: true
    id_cliente?: true
  }

  export type Tbl_carrinhoMaxAggregateInputType = {
    id?: true
    quantidade_produtos?: true
    valor_total?: true
    id_produtos?: true
    id_cliente?: true
  }

  export type Tbl_carrinhoCountAggregateInputType = {
    id?: true
    quantidade_produtos?: true
    valor_total?: true
    id_produtos?: true
    id_cliente?: true
    _all?: true
  }

  export type Tbl_carrinhoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_carrinho to aggregate.
     */
    where?: tbl_carrinhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_carrinhos to fetch.
     */
    orderBy?: tbl_carrinhoOrderByWithRelationInput | tbl_carrinhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_carrinhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_carrinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_carrinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_carrinhos
    **/
    _count?: true | Tbl_carrinhoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_carrinhoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_carrinhoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_carrinhoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_carrinhoMaxAggregateInputType
  }

  export type GetTbl_carrinhoAggregateType<T extends Tbl_carrinhoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_carrinho]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_carrinho[P]>
      : GetScalarType<T[P], AggregateTbl_carrinho[P]>
  }




  export type tbl_carrinhoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_carrinhoWhereInput
    orderBy?: tbl_carrinhoOrderByWithAggregationInput | tbl_carrinhoOrderByWithAggregationInput[]
    by: Tbl_carrinhoScalarFieldEnum[] | Tbl_carrinhoScalarFieldEnum
    having?: tbl_carrinhoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_carrinhoCountAggregateInputType | true
    _avg?: Tbl_carrinhoAvgAggregateInputType
    _sum?: Tbl_carrinhoSumAggregateInputType
    _min?: Tbl_carrinhoMinAggregateInputType
    _max?: Tbl_carrinhoMaxAggregateInputType
  }

  export type Tbl_carrinhoGroupByOutputType = {
    id: number
    quantidade_produtos: number
    valor_total: number
    id_produtos: number | null
    id_cliente: number
    _count: Tbl_carrinhoCountAggregateOutputType | null
    _avg: Tbl_carrinhoAvgAggregateOutputType | null
    _sum: Tbl_carrinhoSumAggregateOutputType | null
    _min: Tbl_carrinhoMinAggregateOutputType | null
    _max: Tbl_carrinhoMaxAggregateOutputType | null
  }

  type GetTbl_carrinhoGroupByPayload<T extends tbl_carrinhoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_carrinhoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_carrinhoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_carrinhoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_carrinhoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_carrinhoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantidade_produtos?: boolean
    valor_total?: boolean
    id_produtos?: boolean
    id_cliente?: boolean
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_carrinho"]>

  export type tbl_carrinhoSelectScalar = {
    id?: boolean
    quantidade_produtos?: boolean
    valor_total?: boolean
    id_produtos?: boolean
    id_cliente?: boolean
  }


  export type tbl_carrinhoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }


  export type $tbl_carrinhoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_carrinho"
    objects: {
      tbl_usuario: Prisma.$tbl_usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      quantidade_produtos: number
      valor_total: number
      id_produtos: number | null
      id_cliente: number
    }, ExtArgs["result"]["tbl_carrinho"]>
    composites: {}
  }


  type tbl_carrinhoGetPayload<S extends boolean | null | undefined | tbl_carrinhoDefaultArgs> = $Result.GetResult<Prisma.$tbl_carrinhoPayload, S>

  type tbl_carrinhoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_carrinhoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_carrinhoCountAggregateInputType | true
    }

  export interface tbl_carrinhoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_carrinho'], meta: { name: 'tbl_carrinho' } }
    /**
     * Find zero or one Tbl_carrinho that matches the filter.
     * @param {tbl_carrinhoFindUniqueArgs} args - Arguments to find a Tbl_carrinho
     * @example
     * // Get one Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_carrinhoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_carrinho that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_carrinhoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_carrinho
     * @example
     * // Get one Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_carrinhoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_carrinho that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoFindFirstArgs} args - Arguments to find a Tbl_carrinho
     * @example
     * // Get one Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_carrinhoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_carrinho that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoFindFirstOrThrowArgs} args - Arguments to find a Tbl_carrinho
     * @example
     * // Get one Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_carrinhoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_carrinhos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_carrinhos
     * const tbl_carrinhos = await prisma.tbl_carrinho.findMany()
     * 
     * // Get first 10 Tbl_carrinhos
     * const tbl_carrinhos = await prisma.tbl_carrinho.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_carrinhoWithIdOnly = await prisma.tbl_carrinho.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_carrinhoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_carrinho.
     * @param {tbl_carrinhoCreateArgs} args - Arguments to create a Tbl_carrinho.
     * @example
     * // Create one Tbl_carrinho
     * const Tbl_carrinho = await prisma.tbl_carrinho.create({
     *   data: {
     *     // ... data to create a Tbl_carrinho
     *   }
     * })
     * 
    **/
    create<T extends tbl_carrinhoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoCreateArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_carrinhos.
     * @param {tbl_carrinhoCreateManyArgs} args - Arguments to create many Tbl_carrinhos.
     * @example
     * // Create many Tbl_carrinhos
     * const tbl_carrinho = await prisma.tbl_carrinho.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_carrinhoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_carrinho.
     * @param {tbl_carrinhoDeleteArgs} args - Arguments to delete one Tbl_carrinho.
     * @example
     * // Delete one Tbl_carrinho
     * const Tbl_carrinho = await prisma.tbl_carrinho.delete({
     *   where: {
     *     // ... filter to delete one Tbl_carrinho
     *   }
     * })
     * 
    **/
    delete<T extends tbl_carrinhoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoDeleteArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_carrinho.
     * @param {tbl_carrinhoUpdateArgs} args - Arguments to update one Tbl_carrinho.
     * @example
     * // Update one Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_carrinhoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoUpdateArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_carrinhos.
     * @param {tbl_carrinhoDeleteManyArgs} args - Arguments to filter Tbl_carrinhos to delete.
     * @example
     * // Delete a few Tbl_carrinhos
     * const { count } = await prisma.tbl_carrinho.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_carrinhoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_carrinhoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_carrinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_carrinhos
     * const tbl_carrinho = await prisma.tbl_carrinho.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_carrinhoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_carrinho.
     * @param {tbl_carrinhoUpsertArgs} args - Arguments to update or create a Tbl_carrinho.
     * @example
     * // Update or create a Tbl_carrinho
     * const tbl_carrinho = await prisma.tbl_carrinho.upsert({
     *   create: {
     *     // ... data to create a Tbl_carrinho
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_carrinho we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_carrinhoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_carrinhoUpsertArgs<ExtArgs>>
    ): Prisma__tbl_carrinhoClient<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_carrinhos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoCountArgs} args - Arguments to filter Tbl_carrinhos to count.
     * @example
     * // Count the number of Tbl_carrinhos
     * const count = await prisma.tbl_carrinho.count({
     *   where: {
     *     // ... the filter for the Tbl_carrinhos we want to count
     *   }
     * })
    **/
    count<T extends tbl_carrinhoCountArgs>(
      args?: Subset<T, tbl_carrinhoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_carrinhoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_carrinho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_carrinhoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_carrinhoAggregateArgs>(args: Subset<T, Tbl_carrinhoAggregateArgs>): Prisma.PrismaPromise<GetTbl_carrinhoAggregateType<T>>

    /**
     * Group by Tbl_carrinho.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_carrinhoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_carrinhoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_carrinhoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_carrinhoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_carrinhoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_carrinhoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_carrinho model
   */
  readonly fields: tbl_carrinhoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_carrinho.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_carrinhoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_usuario<T extends tbl_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarioDefaultArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_carrinho model
   */ 
  interface tbl_carrinhoFieldRefs {
    readonly id: FieldRef<"tbl_carrinho", 'Int'>
    readonly quantidade_produtos: FieldRef<"tbl_carrinho", 'Int'>
    readonly valor_total: FieldRef<"tbl_carrinho", 'Float'>
    readonly id_produtos: FieldRef<"tbl_carrinho", 'Int'>
    readonly id_cliente: FieldRef<"tbl_carrinho", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_carrinho findUnique
   */
  export type tbl_carrinhoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_carrinho to fetch.
     */
    where: tbl_carrinhoWhereUniqueInput
  }

  /**
   * tbl_carrinho findUniqueOrThrow
   */
  export type tbl_carrinhoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_carrinho to fetch.
     */
    where: tbl_carrinhoWhereUniqueInput
  }

  /**
   * tbl_carrinho findFirst
   */
  export type tbl_carrinhoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_carrinho to fetch.
     */
    where?: tbl_carrinhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_carrinhos to fetch.
     */
    orderBy?: tbl_carrinhoOrderByWithRelationInput | tbl_carrinhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_carrinhos.
     */
    cursor?: tbl_carrinhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_carrinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_carrinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_carrinhos.
     */
    distinct?: Tbl_carrinhoScalarFieldEnum | Tbl_carrinhoScalarFieldEnum[]
  }

  /**
   * tbl_carrinho findFirstOrThrow
   */
  export type tbl_carrinhoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_carrinho to fetch.
     */
    where?: tbl_carrinhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_carrinhos to fetch.
     */
    orderBy?: tbl_carrinhoOrderByWithRelationInput | tbl_carrinhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_carrinhos.
     */
    cursor?: tbl_carrinhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_carrinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_carrinhos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_carrinhos.
     */
    distinct?: Tbl_carrinhoScalarFieldEnum | Tbl_carrinhoScalarFieldEnum[]
  }

  /**
   * tbl_carrinho findMany
   */
  export type tbl_carrinhoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_carrinhos to fetch.
     */
    where?: tbl_carrinhoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_carrinhos to fetch.
     */
    orderBy?: tbl_carrinhoOrderByWithRelationInput | tbl_carrinhoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_carrinhos.
     */
    cursor?: tbl_carrinhoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_carrinhos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_carrinhos.
     */
    skip?: number
    distinct?: Tbl_carrinhoScalarFieldEnum | Tbl_carrinhoScalarFieldEnum[]
  }

  /**
   * tbl_carrinho create
   */
  export type tbl_carrinhoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_carrinho.
     */
    data: XOR<tbl_carrinhoCreateInput, tbl_carrinhoUncheckedCreateInput>
  }

  /**
   * tbl_carrinho createMany
   */
  export type tbl_carrinhoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_carrinhos.
     */
    data: tbl_carrinhoCreateManyInput | tbl_carrinhoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_carrinho update
   */
  export type tbl_carrinhoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_carrinho.
     */
    data: XOR<tbl_carrinhoUpdateInput, tbl_carrinhoUncheckedUpdateInput>
    /**
     * Choose, which tbl_carrinho to update.
     */
    where: tbl_carrinhoWhereUniqueInput
  }

  /**
   * tbl_carrinho updateMany
   */
  export type tbl_carrinhoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_carrinhos.
     */
    data: XOR<tbl_carrinhoUpdateManyMutationInput, tbl_carrinhoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_carrinhos to update
     */
    where?: tbl_carrinhoWhereInput
  }

  /**
   * tbl_carrinho upsert
   */
  export type tbl_carrinhoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_carrinho to update in case it exists.
     */
    where: tbl_carrinhoWhereUniqueInput
    /**
     * In case the tbl_carrinho found by the `where` argument doesn't exist, create a new tbl_carrinho with this data.
     */
    create: XOR<tbl_carrinhoCreateInput, tbl_carrinhoUncheckedCreateInput>
    /**
     * In case the tbl_carrinho was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_carrinhoUpdateInput, tbl_carrinhoUncheckedUpdateInput>
  }

  /**
   * tbl_carrinho delete
   */
  export type tbl_carrinhoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    /**
     * Filter which tbl_carrinho to delete.
     */
    where: tbl_carrinhoWhereUniqueInput
  }

  /**
   * tbl_carrinho deleteMany
   */
  export type tbl_carrinhoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_carrinhos to delete
     */
    where?: tbl_carrinhoWhereInput
  }

  /**
   * tbl_carrinho without action
   */
  export type tbl_carrinhoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_categorias_produtos
   */

  export type AggregateTbl_categorias_produtos = {
    _count: Tbl_categorias_produtosCountAggregateOutputType | null
    _avg: Tbl_categorias_produtosAvgAggregateOutputType | null
    _sum: Tbl_categorias_produtosSumAggregateOutputType | null
    _min: Tbl_categorias_produtosMinAggregateOutputType | null
    _max: Tbl_categorias_produtosMaxAggregateOutputType | null
  }

  export type Tbl_categorias_produtosAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_categorias_produtosSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_categorias_produtosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type Tbl_categorias_produtosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
  }

  export type Tbl_categorias_produtosCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    _all: number
  }


  export type Tbl_categorias_produtosAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_categorias_produtosSumAggregateInputType = {
    id?: true
  }

  export type Tbl_categorias_produtosMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type Tbl_categorias_produtosMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
  }

  export type Tbl_categorias_produtosCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    _all?: true
  }

  export type Tbl_categorias_produtosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_categorias_produtos to aggregate.
     */
    where?: tbl_categorias_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_categorias_produtos to fetch.
     */
    orderBy?: tbl_categorias_produtosOrderByWithRelationInput | tbl_categorias_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_categorias_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_categorias_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_categorias_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_categorias_produtos
    **/
    _count?: true | Tbl_categorias_produtosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_categorias_produtosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_categorias_produtosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_categorias_produtosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_categorias_produtosMaxAggregateInputType
  }

  export type GetTbl_categorias_produtosAggregateType<T extends Tbl_categorias_produtosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_categorias_produtos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_categorias_produtos[P]>
      : GetScalarType<T[P], AggregateTbl_categorias_produtos[P]>
  }




  export type tbl_categorias_produtosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_categorias_produtosWhereInput
    orderBy?: tbl_categorias_produtosOrderByWithAggregationInput | tbl_categorias_produtosOrderByWithAggregationInput[]
    by: Tbl_categorias_produtosScalarFieldEnum[] | Tbl_categorias_produtosScalarFieldEnum
    having?: tbl_categorias_produtosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_categorias_produtosCountAggregateInputType | true
    _avg?: Tbl_categorias_produtosAvgAggregateInputType
    _sum?: Tbl_categorias_produtosSumAggregateInputType
    _min?: Tbl_categorias_produtosMinAggregateInputType
    _max?: Tbl_categorias_produtosMaxAggregateInputType
  }

  export type Tbl_categorias_produtosGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    _count: Tbl_categorias_produtosCountAggregateOutputType | null
    _avg: Tbl_categorias_produtosAvgAggregateOutputType | null
    _sum: Tbl_categorias_produtosSumAggregateOutputType | null
    _min: Tbl_categorias_produtosMinAggregateOutputType | null
    _max: Tbl_categorias_produtosMaxAggregateOutputType | null
  }

  type GetTbl_categorias_produtosGroupByPayload<T extends tbl_categorias_produtosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_categorias_produtosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_categorias_produtosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_categorias_produtosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_categorias_produtosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_categorias_produtosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    tbl_produtos?: boolean | tbl_categorias_produtos$tbl_produtosArgs<ExtArgs>
    _count?: boolean | Tbl_categorias_produtosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_categorias_produtos"]>

  export type tbl_categorias_produtosSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
  }


  export type tbl_categorias_produtosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_produtos?: boolean | tbl_categorias_produtos$tbl_produtosArgs<ExtArgs>
    _count?: boolean | Tbl_categorias_produtosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_categorias_produtosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_categorias_produtos"
    objects: {
      tbl_produtos: Prisma.$tbl_produtosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
    }, ExtArgs["result"]["tbl_categorias_produtos"]>
    composites: {}
  }


  type tbl_categorias_produtosGetPayload<S extends boolean | null | undefined | tbl_categorias_produtosDefaultArgs> = $Result.GetResult<Prisma.$tbl_categorias_produtosPayload, S>

  type tbl_categorias_produtosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_categorias_produtosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_categorias_produtosCountAggregateInputType | true
    }

  export interface tbl_categorias_produtosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_categorias_produtos'], meta: { name: 'tbl_categorias_produtos' } }
    /**
     * Find zero or one Tbl_categorias_produtos that matches the filter.
     * @param {tbl_categorias_produtosFindUniqueArgs} args - Arguments to find a Tbl_categorias_produtos
     * @example
     * // Get one Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_categorias_produtosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_categorias_produtos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_categorias_produtosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_categorias_produtos
     * @example
     * // Get one Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_categorias_produtosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_categorias_produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosFindFirstArgs} args - Arguments to find a Tbl_categorias_produtos
     * @example
     * // Get one Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_categorias_produtosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_categorias_produtos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosFindFirstOrThrowArgs} args - Arguments to find a Tbl_categorias_produtos
     * @example
     * // Get one Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_categorias_produtosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_categorias_produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findMany()
     * 
     * // Get first 10 Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_categorias_produtosWithIdOnly = await prisma.tbl_categorias_produtos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_categorias_produtosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosCreateArgs} args - Arguments to create a Tbl_categorias_produtos.
     * @example
     * // Create one Tbl_categorias_produtos
     * const Tbl_categorias_produtos = await prisma.tbl_categorias_produtos.create({
     *   data: {
     *     // ... data to create a Tbl_categorias_produtos
     *   }
     * })
     * 
    **/
    create<T extends tbl_categorias_produtosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosCreateArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosCreateManyArgs} args - Arguments to create many Tbl_categorias_produtos.
     * @example
     * // Create many Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_categorias_produtosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosDeleteArgs} args - Arguments to delete one Tbl_categorias_produtos.
     * @example
     * // Delete one Tbl_categorias_produtos
     * const Tbl_categorias_produtos = await prisma.tbl_categorias_produtos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_categorias_produtos
     *   }
     * })
     * 
    **/
    delete<T extends tbl_categorias_produtosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosUpdateArgs} args - Arguments to update one Tbl_categorias_produtos.
     * @example
     * // Update one Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_categorias_produtosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosDeleteManyArgs} args - Arguments to filter Tbl_categorias_produtos to delete.
     * @example
     * // Delete a few Tbl_categorias_produtos
     * const { count } = await prisma.tbl_categorias_produtos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_categorias_produtosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_categorias_produtosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_categorias_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_categorias_produtosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_categorias_produtos.
     * @param {tbl_categorias_produtosUpsertArgs} args - Arguments to update or create a Tbl_categorias_produtos.
     * @example
     * // Update or create a Tbl_categorias_produtos
     * const tbl_categorias_produtos = await prisma.tbl_categorias_produtos.upsert({
     *   create: {
     *     // ... data to create a Tbl_categorias_produtos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_categorias_produtos we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_categorias_produtosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_categorias_produtosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_categorias_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosCountArgs} args - Arguments to filter Tbl_categorias_produtos to count.
     * @example
     * // Count the number of Tbl_categorias_produtos
     * const count = await prisma.tbl_categorias_produtos.count({
     *   where: {
     *     // ... the filter for the Tbl_categorias_produtos we want to count
     *   }
     * })
    **/
    count<T extends tbl_categorias_produtosCountArgs>(
      args?: Subset<T, tbl_categorias_produtosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_categorias_produtosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_categorias_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_categorias_produtosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_categorias_produtosAggregateArgs>(args: Subset<T, Tbl_categorias_produtosAggregateArgs>): Prisma.PrismaPromise<GetTbl_categorias_produtosAggregateType<T>>

    /**
     * Group by Tbl_categorias_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_categorias_produtosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_categorias_produtosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_categorias_produtosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_categorias_produtosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_categorias_produtosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_categorias_produtosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_categorias_produtos model
   */
  readonly fields: tbl_categorias_produtosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_categorias_produtos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_categorias_produtosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_produtos<T extends tbl_categorias_produtos$tbl_produtosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_categorias_produtos$tbl_produtosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_categorias_produtos model
   */ 
  interface tbl_categorias_produtosFieldRefs {
    readonly id: FieldRef<"tbl_categorias_produtos", 'Int'>
    readonly nome: FieldRef<"tbl_categorias_produtos", 'String'>
    readonly descricao: FieldRef<"tbl_categorias_produtos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_categorias_produtos findUnique
   */
  export type tbl_categorias_produtosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_categorias_produtos to fetch.
     */
    where: tbl_categorias_produtosWhereUniqueInput
  }

  /**
   * tbl_categorias_produtos findUniqueOrThrow
   */
  export type tbl_categorias_produtosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_categorias_produtos to fetch.
     */
    where: tbl_categorias_produtosWhereUniqueInput
  }

  /**
   * tbl_categorias_produtos findFirst
   */
  export type tbl_categorias_produtosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_categorias_produtos to fetch.
     */
    where?: tbl_categorias_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_categorias_produtos to fetch.
     */
    orderBy?: tbl_categorias_produtosOrderByWithRelationInput | tbl_categorias_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_categorias_produtos.
     */
    cursor?: tbl_categorias_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_categorias_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_categorias_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_categorias_produtos.
     */
    distinct?: Tbl_categorias_produtosScalarFieldEnum | Tbl_categorias_produtosScalarFieldEnum[]
  }

  /**
   * tbl_categorias_produtos findFirstOrThrow
   */
  export type tbl_categorias_produtosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_categorias_produtos to fetch.
     */
    where?: tbl_categorias_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_categorias_produtos to fetch.
     */
    orderBy?: tbl_categorias_produtosOrderByWithRelationInput | tbl_categorias_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_categorias_produtos.
     */
    cursor?: tbl_categorias_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_categorias_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_categorias_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_categorias_produtos.
     */
    distinct?: Tbl_categorias_produtosScalarFieldEnum | Tbl_categorias_produtosScalarFieldEnum[]
  }

  /**
   * tbl_categorias_produtos findMany
   */
  export type tbl_categorias_produtosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_categorias_produtos to fetch.
     */
    where?: tbl_categorias_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_categorias_produtos to fetch.
     */
    orderBy?: tbl_categorias_produtosOrderByWithRelationInput | tbl_categorias_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_categorias_produtos.
     */
    cursor?: tbl_categorias_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_categorias_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_categorias_produtos.
     */
    skip?: number
    distinct?: Tbl_categorias_produtosScalarFieldEnum | Tbl_categorias_produtosScalarFieldEnum[]
  }

  /**
   * tbl_categorias_produtos create
   */
  export type tbl_categorias_produtosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_categorias_produtos.
     */
    data: XOR<tbl_categorias_produtosCreateInput, tbl_categorias_produtosUncheckedCreateInput>
  }

  /**
   * tbl_categorias_produtos createMany
   */
  export type tbl_categorias_produtosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_categorias_produtos.
     */
    data: tbl_categorias_produtosCreateManyInput | tbl_categorias_produtosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_categorias_produtos update
   */
  export type tbl_categorias_produtosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_categorias_produtos.
     */
    data: XOR<tbl_categorias_produtosUpdateInput, tbl_categorias_produtosUncheckedUpdateInput>
    /**
     * Choose, which tbl_categorias_produtos to update.
     */
    where: tbl_categorias_produtosWhereUniqueInput
  }

  /**
   * tbl_categorias_produtos updateMany
   */
  export type tbl_categorias_produtosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_categorias_produtos.
     */
    data: XOR<tbl_categorias_produtosUpdateManyMutationInput, tbl_categorias_produtosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_categorias_produtos to update
     */
    where?: tbl_categorias_produtosWhereInput
  }

  /**
   * tbl_categorias_produtos upsert
   */
  export type tbl_categorias_produtosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_categorias_produtos to update in case it exists.
     */
    where: tbl_categorias_produtosWhereUniqueInput
    /**
     * In case the tbl_categorias_produtos found by the `where` argument doesn't exist, create a new tbl_categorias_produtos with this data.
     */
    create: XOR<tbl_categorias_produtosCreateInput, tbl_categorias_produtosUncheckedCreateInput>
    /**
     * In case the tbl_categorias_produtos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_categorias_produtosUpdateInput, tbl_categorias_produtosUncheckedUpdateInput>
  }

  /**
   * tbl_categorias_produtos delete
   */
  export type tbl_categorias_produtosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
    /**
     * Filter which tbl_categorias_produtos to delete.
     */
    where: tbl_categorias_produtosWhereUniqueInput
  }

  /**
   * tbl_categorias_produtos deleteMany
   */
  export type tbl_categorias_produtosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_categorias_produtos to delete
     */
    where?: tbl_categorias_produtosWhereInput
  }

  /**
   * tbl_categorias_produtos.tbl_produtos
   */
  export type tbl_categorias_produtos$tbl_produtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    where?: tbl_produtosWhereInput
    orderBy?: tbl_produtosOrderByWithRelationInput | tbl_produtosOrderByWithRelationInput[]
    cursor?: tbl_produtosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_produtosScalarFieldEnum | Tbl_produtosScalarFieldEnum[]
  }

  /**
   * tbl_categorias_produtos without action
   */
  export type tbl_categorias_produtosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_categorias_produtos
     */
    select?: tbl_categorias_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_categorias_produtosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_compras
   */

  export type AggregateTbl_compras = {
    _count: Tbl_comprasCountAggregateOutputType | null
    _avg: Tbl_comprasAvgAggregateOutputType | null
    _sum: Tbl_comprasSumAggregateOutputType | null
    _min: Tbl_comprasMinAggregateOutputType | null
    _max: Tbl_comprasMaxAggregateOutputType | null
  }

  export type Tbl_comprasAvgAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    valor_total: number | null
  }

  export type Tbl_comprasSumAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    valor_total: number | null
  }

  export type Tbl_comprasMinAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    data_compra: Date | null
    valor_total: number | null
    status_compra: string | null
    endereco_entrega: string | null
    metodo_pagamento: string | null
  }

  export type Tbl_comprasMaxAggregateOutputType = {
    id: number | null
    id_cliente: number | null
    data_compra: Date | null
    valor_total: number | null
    status_compra: string | null
    endereco_entrega: string | null
    metodo_pagamento: string | null
  }

  export type Tbl_comprasCountAggregateOutputType = {
    id: number
    id_cliente: number
    data_compra: number
    valor_total: number
    status_compra: number
    endereco_entrega: number
    metodo_pagamento: number
    _all: number
  }


  export type Tbl_comprasAvgAggregateInputType = {
    id?: true
    id_cliente?: true
    valor_total?: true
  }

  export type Tbl_comprasSumAggregateInputType = {
    id?: true
    id_cliente?: true
    valor_total?: true
  }

  export type Tbl_comprasMinAggregateInputType = {
    id?: true
    id_cliente?: true
    data_compra?: true
    valor_total?: true
    status_compra?: true
    endereco_entrega?: true
    metodo_pagamento?: true
  }

  export type Tbl_comprasMaxAggregateInputType = {
    id?: true
    id_cliente?: true
    data_compra?: true
    valor_total?: true
    status_compra?: true
    endereco_entrega?: true
    metodo_pagamento?: true
  }

  export type Tbl_comprasCountAggregateInputType = {
    id?: true
    id_cliente?: true
    data_compra?: true
    valor_total?: true
    status_compra?: true
    endereco_entrega?: true
    metodo_pagamento?: true
    _all?: true
  }

  export type Tbl_comprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_compras to aggregate.
     */
    where?: tbl_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_compras to fetch.
     */
    orderBy?: tbl_comprasOrderByWithRelationInput | tbl_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_compras
    **/
    _count?: true | Tbl_comprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_comprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_comprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_comprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_comprasMaxAggregateInputType
  }

  export type GetTbl_comprasAggregateType<T extends Tbl_comprasAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_compras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_compras[P]>
      : GetScalarType<T[P], AggregateTbl_compras[P]>
  }




  export type tbl_comprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_comprasWhereInput
    orderBy?: tbl_comprasOrderByWithAggregationInput | tbl_comprasOrderByWithAggregationInput[]
    by: Tbl_comprasScalarFieldEnum[] | Tbl_comprasScalarFieldEnum
    having?: tbl_comprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_comprasCountAggregateInputType | true
    _avg?: Tbl_comprasAvgAggregateInputType
    _sum?: Tbl_comprasSumAggregateInputType
    _min?: Tbl_comprasMinAggregateInputType
    _max?: Tbl_comprasMaxAggregateInputType
  }

  export type Tbl_comprasGroupByOutputType = {
    id: number
    id_cliente: number
    data_compra: Date
    valor_total: number
    status_compra: string
    endereco_entrega: string | null
    metodo_pagamento: string | null
    _count: Tbl_comprasCountAggregateOutputType | null
    _avg: Tbl_comprasAvgAggregateOutputType | null
    _sum: Tbl_comprasSumAggregateOutputType | null
    _min: Tbl_comprasMinAggregateOutputType | null
    _max: Tbl_comprasMaxAggregateOutputType | null
  }

  type GetTbl_comprasGroupByPayload<T extends tbl_comprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_comprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_comprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_comprasGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_comprasGroupByOutputType[P]>
        }
      >
    >


  export type tbl_comprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_cliente?: boolean
    data_compra?: boolean
    valor_total?: boolean
    status_compra?: boolean
    endereco_entrega?: boolean
    metodo_pagamento?: boolean
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_compras"]>

  export type tbl_comprasSelectScalar = {
    id?: boolean
    id_cliente?: boolean
    data_compra?: boolean
    valor_total?: boolean
    status_compra?: boolean
    endereco_entrega?: boolean
    metodo_pagamento?: boolean
  }


  export type tbl_comprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }


  export type $tbl_comprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_compras"
    objects: {
      tbl_usuario: Prisma.$tbl_usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_cliente: number
      data_compra: Date
      valor_total: number
      status_compra: string
      endereco_entrega: string | null
      metodo_pagamento: string | null
    }, ExtArgs["result"]["tbl_compras"]>
    composites: {}
  }


  type tbl_comprasGetPayload<S extends boolean | null | undefined | tbl_comprasDefaultArgs> = $Result.GetResult<Prisma.$tbl_comprasPayload, S>

  type tbl_comprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_comprasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_comprasCountAggregateInputType | true
    }

  export interface tbl_comprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_compras'], meta: { name: 'tbl_compras' } }
    /**
     * Find zero or one Tbl_compras that matches the filter.
     * @param {tbl_comprasFindUniqueArgs} args - Arguments to find a Tbl_compras
     * @example
     * // Get one Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_comprasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_compras that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_comprasFindUniqueOrThrowArgs} args - Arguments to find a Tbl_compras
     * @example
     * // Get one Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_comprasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasFindFirstArgs} args - Arguments to find a Tbl_compras
     * @example
     * // Get one Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_comprasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_compras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasFindFirstOrThrowArgs} args - Arguments to find a Tbl_compras
     * @example
     * // Get one Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_comprasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findMany()
     * 
     * // Get first 10 Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_comprasWithIdOnly = await prisma.tbl_compras.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_comprasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_compras.
     * @param {tbl_comprasCreateArgs} args - Arguments to create a Tbl_compras.
     * @example
     * // Create one Tbl_compras
     * const Tbl_compras = await prisma.tbl_compras.create({
     *   data: {
     *     // ... data to create a Tbl_compras
     *   }
     * })
     * 
    **/
    create<T extends tbl_comprasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasCreateArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_compras.
     * @param {tbl_comprasCreateManyArgs} args - Arguments to create many Tbl_compras.
     * @example
     * // Create many Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_comprasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_compras.
     * @param {tbl_comprasDeleteArgs} args - Arguments to delete one Tbl_compras.
     * @example
     * // Delete one Tbl_compras
     * const Tbl_compras = await prisma.tbl_compras.delete({
     *   where: {
     *     // ... filter to delete one Tbl_compras
     *   }
     * })
     * 
    **/
    delete<T extends tbl_comprasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasDeleteArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_compras.
     * @param {tbl_comprasUpdateArgs} args - Arguments to update one Tbl_compras.
     * @example
     * // Update one Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_comprasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasUpdateArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_compras.
     * @param {tbl_comprasDeleteManyArgs} args - Arguments to filter Tbl_compras to delete.
     * @example
     * // Delete a few Tbl_compras
     * const { count } = await prisma.tbl_compras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_comprasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_comprasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_comprasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_compras.
     * @param {tbl_comprasUpsertArgs} args - Arguments to update or create a Tbl_compras.
     * @example
     * // Update or create a Tbl_compras
     * const tbl_compras = await prisma.tbl_compras.upsert({
     *   create: {
     *     // ... data to create a Tbl_compras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_compras we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_comprasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_comprasUpsertArgs<ExtArgs>>
    ): Prisma__tbl_comprasClient<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasCountArgs} args - Arguments to filter Tbl_compras to count.
     * @example
     * // Count the number of Tbl_compras
     * const count = await prisma.tbl_compras.count({
     *   where: {
     *     // ... the filter for the Tbl_compras we want to count
     *   }
     * })
    **/
    count<T extends tbl_comprasCountArgs>(
      args?: Subset<T, tbl_comprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_comprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_comprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_comprasAggregateArgs>(args: Subset<T, Tbl_comprasAggregateArgs>): Prisma.PrismaPromise<GetTbl_comprasAggregateType<T>>

    /**
     * Group by Tbl_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_comprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_comprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_comprasGroupByArgs['orderBy'] }
        : { orderBy?: tbl_comprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_comprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_comprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_compras model
   */
  readonly fields: tbl_comprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_compras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_comprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_usuario<T extends tbl_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarioDefaultArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_compras model
   */ 
  interface tbl_comprasFieldRefs {
    readonly id: FieldRef<"tbl_compras", 'Int'>
    readonly id_cliente: FieldRef<"tbl_compras", 'Int'>
    readonly data_compra: FieldRef<"tbl_compras", 'DateTime'>
    readonly valor_total: FieldRef<"tbl_compras", 'Float'>
    readonly status_compra: FieldRef<"tbl_compras", 'String'>
    readonly endereco_entrega: FieldRef<"tbl_compras", 'String'>
    readonly metodo_pagamento: FieldRef<"tbl_compras", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_compras findUnique
   */
  export type tbl_comprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_compras to fetch.
     */
    where: tbl_comprasWhereUniqueInput
  }

  /**
   * tbl_compras findUniqueOrThrow
   */
  export type tbl_comprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_compras to fetch.
     */
    where: tbl_comprasWhereUniqueInput
  }

  /**
   * tbl_compras findFirst
   */
  export type tbl_comprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_compras to fetch.
     */
    where?: tbl_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_compras to fetch.
     */
    orderBy?: tbl_comprasOrderByWithRelationInput | tbl_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_compras.
     */
    cursor?: tbl_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_compras.
     */
    distinct?: Tbl_comprasScalarFieldEnum | Tbl_comprasScalarFieldEnum[]
  }

  /**
   * tbl_compras findFirstOrThrow
   */
  export type tbl_comprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_compras to fetch.
     */
    where?: tbl_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_compras to fetch.
     */
    orderBy?: tbl_comprasOrderByWithRelationInput | tbl_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_compras.
     */
    cursor?: tbl_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_compras.
     */
    distinct?: Tbl_comprasScalarFieldEnum | Tbl_comprasScalarFieldEnum[]
  }

  /**
   * tbl_compras findMany
   */
  export type tbl_comprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter, which tbl_compras to fetch.
     */
    where?: tbl_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_compras to fetch.
     */
    orderBy?: tbl_comprasOrderByWithRelationInput | tbl_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_compras.
     */
    cursor?: tbl_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_compras.
     */
    skip?: number
    distinct?: Tbl_comprasScalarFieldEnum | Tbl_comprasScalarFieldEnum[]
  }

  /**
   * tbl_compras create
   */
  export type tbl_comprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_compras.
     */
    data: XOR<tbl_comprasCreateInput, tbl_comprasUncheckedCreateInput>
  }

  /**
   * tbl_compras createMany
   */
  export type tbl_comprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_compras.
     */
    data: tbl_comprasCreateManyInput | tbl_comprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_compras update
   */
  export type tbl_comprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_compras.
     */
    data: XOR<tbl_comprasUpdateInput, tbl_comprasUncheckedUpdateInput>
    /**
     * Choose, which tbl_compras to update.
     */
    where: tbl_comprasWhereUniqueInput
  }

  /**
   * tbl_compras updateMany
   */
  export type tbl_comprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_compras.
     */
    data: XOR<tbl_comprasUpdateManyMutationInput, tbl_comprasUncheckedUpdateManyInput>
    /**
     * Filter which tbl_compras to update
     */
    where?: tbl_comprasWhereInput
  }

  /**
   * tbl_compras upsert
   */
  export type tbl_comprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_compras to update in case it exists.
     */
    where: tbl_comprasWhereUniqueInput
    /**
     * In case the tbl_compras found by the `where` argument doesn't exist, create a new tbl_compras with this data.
     */
    create: XOR<tbl_comprasCreateInput, tbl_comprasUncheckedCreateInput>
    /**
     * In case the tbl_compras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_comprasUpdateInput, tbl_comprasUncheckedUpdateInput>
  }

  /**
   * tbl_compras delete
   */
  export type tbl_comprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    /**
     * Filter which tbl_compras to delete.
     */
    where: tbl_comprasWhereUniqueInput
  }

  /**
   * tbl_compras deleteMany
   */
  export type tbl_comprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_compras to delete
     */
    where?: tbl_comprasWhereInput
  }

  /**
   * tbl_compras without action
   */
  export type tbl_comprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
  }


  /**
   * Model tbl_funcionarios
   */

  export type AggregateTbl_funcionarios = {
    _count: Tbl_funcionariosCountAggregateOutputType | null
    _avg: Tbl_funcionariosAvgAggregateOutputType | null
    _sum: Tbl_funcionariosSumAggregateOutputType | null
    _min: Tbl_funcionariosMinAggregateOutputType | null
    _max: Tbl_funcionariosMaxAggregateOutputType | null
  }

  export type Tbl_funcionariosAvgAggregateOutputType = {
    id: number | null
    id_sexo: number | null
    id_cargo: number | null
  }

  export type Tbl_funcionariosSumAggregateOutputType = {
    id: number | null
    id_sexo: number | null
    id_cargo: number | null
  }

  export type Tbl_funcionariosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    foto_perfil: string | null
    data_nascimento: Date | null
    id_sexo: number | null
    id_cargo: number | null
  }

  export type Tbl_funcionariosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    foto_perfil: string | null
    data_nascimento: Date | null
    id_sexo: number | null
    id_cargo: number | null
  }

  export type Tbl_funcionariosCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha: number
    telefone: number
    foto_perfil: number
    data_nascimento: number
    id_sexo: number
    id_cargo: number
    _all: number
  }


  export type Tbl_funcionariosAvgAggregateInputType = {
    id?: true
    id_sexo?: true
    id_cargo?: true
  }

  export type Tbl_funcionariosSumAggregateInputType = {
    id?: true
    id_sexo?: true
    id_cargo?: true
  }

  export type Tbl_funcionariosMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    foto_perfil?: true
    data_nascimento?: true
    id_sexo?: true
    id_cargo?: true
  }

  export type Tbl_funcionariosMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    foto_perfil?: true
    data_nascimento?: true
    id_sexo?: true
    id_cargo?: true
  }

  export type Tbl_funcionariosCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    foto_perfil?: true
    data_nascimento?: true
    id_sexo?: true
    id_cargo?: true
    _all?: true
  }

  export type Tbl_funcionariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_funcionarios to aggregate.
     */
    where?: tbl_funcionariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_funcionarios to fetch.
     */
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_funcionariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_funcionarios
    **/
    _count?: true | Tbl_funcionariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_funcionariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_funcionariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_funcionariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_funcionariosMaxAggregateInputType
  }

  export type GetTbl_funcionariosAggregateType<T extends Tbl_funcionariosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_funcionarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_funcionarios[P]>
      : GetScalarType<T[P], AggregateTbl_funcionarios[P]>
  }




  export type tbl_funcionariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_funcionariosWhereInput
    orderBy?: tbl_funcionariosOrderByWithAggregationInput | tbl_funcionariosOrderByWithAggregationInput[]
    by: Tbl_funcionariosScalarFieldEnum[] | Tbl_funcionariosScalarFieldEnum
    having?: tbl_funcionariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_funcionariosCountAggregateInputType | true
    _avg?: Tbl_funcionariosAvgAggregateInputType
    _sum?: Tbl_funcionariosSumAggregateInputType
    _min?: Tbl_funcionariosMinAggregateInputType
    _max?: Tbl_funcionariosMaxAggregateInputType
  }

  export type Tbl_funcionariosGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha: string
    telefone: string | null
    foto_perfil: string | null
    data_nascimento: Date | null
    id_sexo: number
    id_cargo: number
    _count: Tbl_funcionariosCountAggregateOutputType | null
    _avg: Tbl_funcionariosAvgAggregateOutputType | null
    _sum: Tbl_funcionariosSumAggregateOutputType | null
    _min: Tbl_funcionariosMinAggregateOutputType | null
    _max: Tbl_funcionariosMaxAggregateOutputType | null
  }

  type GetTbl_funcionariosGroupByPayload<T extends tbl_funcionariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_funcionariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_funcionariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_funcionariosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_funcionariosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_funcionariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    foto_perfil?: boolean
    data_nascimento?: boolean
    id_sexo?: boolean
    id_cargo?: boolean
    tbl_cargos?: boolean | tbl_cargosDefaultArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_servicos?: boolean | tbl_funcionarios$tbl_servicosArgs<ExtArgs>
    _count?: boolean | Tbl_funcionariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_funcionarios"]>

  export type tbl_funcionariosSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    foto_perfil?: boolean
    data_nascimento?: boolean
    id_sexo?: boolean
    id_cargo?: boolean
  }


  export type tbl_funcionariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_cargos?: boolean | tbl_cargosDefaultArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_servicos?: boolean | tbl_funcionarios$tbl_servicosArgs<ExtArgs>
    _count?: boolean | Tbl_funcionariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_funcionariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_funcionarios"
    objects: {
      tbl_cargos: Prisma.$tbl_cargosPayload<ExtArgs>
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs>
      tbl_servicos: Prisma.$tbl_servicosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha: string
      telefone: string | null
      foto_perfil: string | null
      data_nascimento: Date | null
      id_sexo: number
      id_cargo: number
    }, ExtArgs["result"]["tbl_funcionarios"]>
    composites: {}
  }


  type tbl_funcionariosGetPayload<S extends boolean | null | undefined | tbl_funcionariosDefaultArgs> = $Result.GetResult<Prisma.$tbl_funcionariosPayload, S>

  type tbl_funcionariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_funcionariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_funcionariosCountAggregateInputType | true
    }

  export interface tbl_funcionariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_funcionarios'], meta: { name: 'tbl_funcionarios' } }
    /**
     * Find zero or one Tbl_funcionarios that matches the filter.
     * @param {tbl_funcionariosFindUniqueArgs} args - Arguments to find a Tbl_funcionarios
     * @example
     * // Get one Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_funcionariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_funcionarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_funcionariosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_funcionarios
     * @example
     * // Get one Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_funcionariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_funcionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosFindFirstArgs} args - Arguments to find a Tbl_funcionarios
     * @example
     * // Get one Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_funcionariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_funcionarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosFindFirstOrThrowArgs} args - Arguments to find a Tbl_funcionarios
     * @example
     * // Get one Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_funcionariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_funcionarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findMany()
     * 
     * // Get first 10 Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_funcionariosWithIdOnly = await prisma.tbl_funcionarios.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_funcionariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_funcionarios.
     * @param {tbl_funcionariosCreateArgs} args - Arguments to create a Tbl_funcionarios.
     * @example
     * // Create one Tbl_funcionarios
     * const Tbl_funcionarios = await prisma.tbl_funcionarios.create({
     *   data: {
     *     // ... data to create a Tbl_funcionarios
     *   }
     * })
     * 
    **/
    create<T extends tbl_funcionariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosCreateArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_funcionarios.
     * @param {tbl_funcionariosCreateManyArgs} args - Arguments to create many Tbl_funcionarios.
     * @example
     * // Create many Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_funcionariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_funcionarios.
     * @param {tbl_funcionariosDeleteArgs} args - Arguments to delete one Tbl_funcionarios.
     * @example
     * // Delete one Tbl_funcionarios
     * const Tbl_funcionarios = await prisma.tbl_funcionarios.delete({
     *   where: {
     *     // ... filter to delete one Tbl_funcionarios
     *   }
     * })
     * 
    **/
    delete<T extends tbl_funcionariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_funcionarios.
     * @param {tbl_funcionariosUpdateArgs} args - Arguments to update one Tbl_funcionarios.
     * @example
     * // Update one Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_funcionariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_funcionarios.
     * @param {tbl_funcionariosDeleteManyArgs} args - Arguments to filter Tbl_funcionarios to delete.
     * @example
     * // Delete a few Tbl_funcionarios
     * const { count } = await prisma.tbl_funcionarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_funcionariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_funcionariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_funcionariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_funcionarios.
     * @param {tbl_funcionariosUpsertArgs} args - Arguments to update or create a Tbl_funcionarios.
     * @example
     * // Update or create a Tbl_funcionarios
     * const tbl_funcionarios = await prisma.tbl_funcionarios.upsert({
     *   create: {
     *     // ... data to create a Tbl_funcionarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_funcionarios we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_funcionariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_funcionariosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosCountArgs} args - Arguments to filter Tbl_funcionarios to count.
     * @example
     * // Count the number of Tbl_funcionarios
     * const count = await prisma.tbl_funcionarios.count({
     *   where: {
     *     // ... the filter for the Tbl_funcionarios we want to count
     *   }
     * })
    **/
    count<T extends tbl_funcionariosCountArgs>(
      args?: Subset<T, tbl_funcionariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_funcionariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_funcionariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_funcionariosAggregateArgs>(args: Subset<T, Tbl_funcionariosAggregateArgs>): Prisma.PrismaPromise<GetTbl_funcionariosAggregateType<T>>

    /**
     * Group by Tbl_funcionarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_funcionariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_funcionariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_funcionariosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_funcionariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_funcionariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_funcionariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_funcionarios model
   */
  readonly fields: tbl_funcionariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_funcionarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_funcionariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_cargos<T extends tbl_cargosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_cargosDefaultArgs<ExtArgs>>): Prisma__tbl_cargosClient<$Result.GetResult<Prisma.$tbl_cargosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_sexo<T extends tbl_sexoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexoDefaultArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_servicos<T extends tbl_funcionarios$tbl_servicosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_funcionarios$tbl_servicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_funcionarios model
   */ 
  interface tbl_funcionariosFieldRefs {
    readonly id: FieldRef<"tbl_funcionarios", 'Int'>
    readonly nome: FieldRef<"tbl_funcionarios", 'String'>
    readonly email: FieldRef<"tbl_funcionarios", 'String'>
    readonly senha: FieldRef<"tbl_funcionarios", 'String'>
    readonly telefone: FieldRef<"tbl_funcionarios", 'String'>
    readonly foto_perfil: FieldRef<"tbl_funcionarios", 'String'>
    readonly data_nascimento: FieldRef<"tbl_funcionarios", 'DateTime'>
    readonly id_sexo: FieldRef<"tbl_funcionarios", 'Int'>
    readonly id_cargo: FieldRef<"tbl_funcionarios", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_funcionarios findUnique
   */
  export type tbl_funcionariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_funcionarios to fetch.
     */
    where: tbl_funcionariosWhereUniqueInput
  }

  /**
   * tbl_funcionarios findUniqueOrThrow
   */
  export type tbl_funcionariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_funcionarios to fetch.
     */
    where: tbl_funcionariosWhereUniqueInput
  }

  /**
   * tbl_funcionarios findFirst
   */
  export type tbl_funcionariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_funcionarios to fetch.
     */
    where?: tbl_funcionariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_funcionarios to fetch.
     */
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_funcionarios.
     */
    cursor?: tbl_funcionariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_funcionarios.
     */
    distinct?: Tbl_funcionariosScalarFieldEnum | Tbl_funcionariosScalarFieldEnum[]
  }

  /**
   * tbl_funcionarios findFirstOrThrow
   */
  export type tbl_funcionariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_funcionarios to fetch.
     */
    where?: tbl_funcionariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_funcionarios to fetch.
     */
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_funcionarios.
     */
    cursor?: tbl_funcionariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_funcionarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_funcionarios.
     */
    distinct?: Tbl_funcionariosScalarFieldEnum | Tbl_funcionariosScalarFieldEnum[]
  }

  /**
   * tbl_funcionarios findMany
   */
  export type tbl_funcionariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_funcionarios to fetch.
     */
    where?: tbl_funcionariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_funcionarios to fetch.
     */
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_funcionarios.
     */
    cursor?: tbl_funcionariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_funcionarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_funcionarios.
     */
    skip?: number
    distinct?: Tbl_funcionariosScalarFieldEnum | Tbl_funcionariosScalarFieldEnum[]
  }

  /**
   * tbl_funcionarios create
   */
  export type tbl_funcionariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_funcionarios.
     */
    data: XOR<tbl_funcionariosCreateInput, tbl_funcionariosUncheckedCreateInput>
  }

  /**
   * tbl_funcionarios createMany
   */
  export type tbl_funcionariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_funcionarios.
     */
    data: tbl_funcionariosCreateManyInput | tbl_funcionariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_funcionarios update
   */
  export type tbl_funcionariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_funcionarios.
     */
    data: XOR<tbl_funcionariosUpdateInput, tbl_funcionariosUncheckedUpdateInput>
    /**
     * Choose, which tbl_funcionarios to update.
     */
    where: tbl_funcionariosWhereUniqueInput
  }

  /**
   * tbl_funcionarios updateMany
   */
  export type tbl_funcionariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_funcionarios.
     */
    data: XOR<tbl_funcionariosUpdateManyMutationInput, tbl_funcionariosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_funcionarios to update
     */
    where?: tbl_funcionariosWhereInput
  }

  /**
   * tbl_funcionarios upsert
   */
  export type tbl_funcionariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_funcionarios to update in case it exists.
     */
    where: tbl_funcionariosWhereUniqueInput
    /**
     * In case the tbl_funcionarios found by the `where` argument doesn't exist, create a new tbl_funcionarios with this data.
     */
    create: XOR<tbl_funcionariosCreateInput, tbl_funcionariosUncheckedCreateInput>
    /**
     * In case the tbl_funcionarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_funcionariosUpdateInput, tbl_funcionariosUncheckedUpdateInput>
  }

  /**
   * tbl_funcionarios delete
   */
  export type tbl_funcionariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    /**
     * Filter which tbl_funcionarios to delete.
     */
    where: tbl_funcionariosWhereUniqueInput
  }

  /**
   * tbl_funcionarios deleteMany
   */
  export type tbl_funcionariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_funcionarios to delete
     */
    where?: tbl_funcionariosWhereInput
  }

  /**
   * tbl_funcionarios.tbl_servicos
   */
  export type tbl_funcionarios$tbl_servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    where?: tbl_servicosWhereInput
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    cursor?: tbl_servicosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_servicosScalarFieldEnum | Tbl_servicosScalarFieldEnum[]
  }

  /**
   * tbl_funcionarios without action
   */
  export type tbl_funcionariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_pet
   */

  export type AggregateTbl_pet = {
    _count: Tbl_petCountAggregateOutputType | null
    _avg: Tbl_petAvgAggregateOutputType | null
    _sum: Tbl_petSumAggregateOutputType | null
    _min: Tbl_petMinAggregateOutputType | null
    _max: Tbl_petMaxAggregateOutputType | null
  }

  export type Tbl_petAvgAggregateOutputType = {
    id: number | null
    id_dono: number | null
    id_sexo: number | null
    id_raca: number | null
  }

  export type Tbl_petSumAggregateOutputType = {
    id: number | null
    id_dono: number | null
    id_sexo: number | null
    id_raca: number | null
  }

  export type Tbl_petMinAggregateOutputType = {
    id: number | null
    nome: string | null
    foto: string | null
    data_nascimento: Date | null
    id_dono: number | null
    id_sexo: number | null
    id_raca: number | null
  }

  export type Tbl_petMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    foto: string | null
    data_nascimento: Date | null
    id_dono: number | null
    id_sexo: number | null
    id_raca: number | null
  }

  export type Tbl_petCountAggregateOutputType = {
    id: number
    nome: number
    foto: number
    data_nascimento: number
    id_dono: number
    id_sexo: number
    id_raca: number
    _all: number
  }


  export type Tbl_petAvgAggregateInputType = {
    id?: true
    id_dono?: true
    id_sexo?: true
    id_raca?: true
  }

  export type Tbl_petSumAggregateInputType = {
    id?: true
    id_dono?: true
    id_sexo?: true
    id_raca?: true
  }

  export type Tbl_petMinAggregateInputType = {
    id?: true
    nome?: true
    foto?: true
    data_nascimento?: true
    id_dono?: true
    id_sexo?: true
    id_raca?: true
  }

  export type Tbl_petMaxAggregateInputType = {
    id?: true
    nome?: true
    foto?: true
    data_nascimento?: true
    id_dono?: true
    id_sexo?: true
    id_raca?: true
  }

  export type Tbl_petCountAggregateInputType = {
    id?: true
    nome?: true
    foto?: true
    data_nascimento?: true
    id_dono?: true
    id_sexo?: true
    id_raca?: true
    _all?: true
  }

  export type Tbl_petAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_pet to aggregate.
     */
    where?: tbl_petWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_pets to fetch.
     */
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_petWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_pets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_pets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_pets
    **/
    _count?: true | Tbl_petCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_petAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_petSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_petMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_petMaxAggregateInputType
  }

  export type GetTbl_petAggregateType<T extends Tbl_petAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_pet]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_pet[P]>
      : GetScalarType<T[P], AggregateTbl_pet[P]>
  }




  export type tbl_petGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_petWhereInput
    orderBy?: tbl_petOrderByWithAggregationInput | tbl_petOrderByWithAggregationInput[]
    by: Tbl_petScalarFieldEnum[] | Tbl_petScalarFieldEnum
    having?: tbl_petScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_petCountAggregateInputType | true
    _avg?: Tbl_petAvgAggregateInputType
    _sum?: Tbl_petSumAggregateInputType
    _min?: Tbl_petMinAggregateInputType
    _max?: Tbl_petMaxAggregateInputType
  }

  export type Tbl_petGroupByOutputType = {
    id: number
    nome: string | null
    foto: string | null
    data_nascimento: Date | null
    id_dono: number
    id_sexo: number
    id_raca: number
    _count: Tbl_petCountAggregateOutputType | null
    _avg: Tbl_petAvgAggregateOutputType | null
    _sum: Tbl_petSumAggregateOutputType | null
    _min: Tbl_petMinAggregateOutputType | null
    _max: Tbl_petMaxAggregateOutputType | null
  }

  type GetTbl_petGroupByPayload<T extends tbl_petGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_petGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_petGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_petGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_petGroupByOutputType[P]>
        }
      >
    >


  export type tbl_petSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    foto?: boolean
    data_nascimento?: boolean
    id_dono?: boolean
    id_sexo?: boolean
    id_raca?: boolean
    tbl_taxonomia?: boolean | tbl_taxonomiaDefaultArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
    tbl_servicos?: boolean | tbl_pet$tbl_servicosArgs<ExtArgs>
    _count?: boolean | Tbl_petCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_pet"]>

  export type tbl_petSelectScalar = {
    id?: boolean
    nome?: boolean
    foto?: boolean
    data_nascimento?: boolean
    id_dono?: boolean
    id_sexo?: boolean
    id_raca?: boolean
  }


  export type tbl_petInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_taxonomia?: boolean | tbl_taxonomiaDefaultArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
    tbl_servicos?: boolean | tbl_pet$tbl_servicosArgs<ExtArgs>
    _count?: boolean | Tbl_petCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_petPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_pet"
    objects: {
      tbl_taxonomia: Prisma.$tbl_taxonomiaPayload<ExtArgs>
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs>
      tbl_usuario: Prisma.$tbl_usuarioPayload<ExtArgs>
      tbl_servicos: Prisma.$tbl_servicosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
      foto: string | null
      data_nascimento: Date | null
      id_dono: number
      id_sexo: number
      id_raca: number
    }, ExtArgs["result"]["tbl_pet"]>
    composites: {}
  }


  type tbl_petGetPayload<S extends boolean | null | undefined | tbl_petDefaultArgs> = $Result.GetResult<Prisma.$tbl_petPayload, S>

  type tbl_petCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_petFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_petCountAggregateInputType | true
    }

  export interface tbl_petDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_pet'], meta: { name: 'tbl_pet' } }
    /**
     * Find zero or one Tbl_pet that matches the filter.
     * @param {tbl_petFindUniqueArgs} args - Arguments to find a Tbl_pet
     * @example
     * // Get one Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_petFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_pet that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_petFindUniqueOrThrowArgs} args - Arguments to find a Tbl_pet
     * @example
     * // Get one Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_petFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_pet that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petFindFirstArgs} args - Arguments to find a Tbl_pet
     * @example
     * // Get one Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_petFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_pet that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petFindFirstOrThrowArgs} args - Arguments to find a Tbl_pet
     * @example
     * // Get one Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_petFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_pets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_pets
     * const tbl_pets = await prisma.tbl_pet.findMany()
     * 
     * // Get first 10 Tbl_pets
     * const tbl_pets = await prisma.tbl_pet.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_petWithIdOnly = await prisma.tbl_pet.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_petFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_pet.
     * @param {tbl_petCreateArgs} args - Arguments to create a Tbl_pet.
     * @example
     * // Create one Tbl_pet
     * const Tbl_pet = await prisma.tbl_pet.create({
     *   data: {
     *     // ... data to create a Tbl_pet
     *   }
     * })
     * 
    **/
    create<T extends tbl_petCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petCreateArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_pets.
     * @param {tbl_petCreateManyArgs} args - Arguments to create many Tbl_pets.
     * @example
     * // Create many Tbl_pets
     * const tbl_pet = await prisma.tbl_pet.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_petCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_pet.
     * @param {tbl_petDeleteArgs} args - Arguments to delete one Tbl_pet.
     * @example
     * // Delete one Tbl_pet
     * const Tbl_pet = await prisma.tbl_pet.delete({
     *   where: {
     *     // ... filter to delete one Tbl_pet
     *   }
     * })
     * 
    **/
    delete<T extends tbl_petDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petDeleteArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_pet.
     * @param {tbl_petUpdateArgs} args - Arguments to update one Tbl_pet.
     * @example
     * // Update one Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_petUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petUpdateArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_pets.
     * @param {tbl_petDeleteManyArgs} args - Arguments to filter Tbl_pets to delete.
     * @example
     * // Delete a few Tbl_pets
     * const { count } = await prisma.tbl_pet.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_petDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_petDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_pets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_pets
     * const tbl_pet = await prisma.tbl_pet.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_petUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_pet.
     * @param {tbl_petUpsertArgs} args - Arguments to update or create a Tbl_pet.
     * @example
     * // Update or create a Tbl_pet
     * const tbl_pet = await prisma.tbl_pet.upsert({
     *   create: {
     *     // ... data to create a Tbl_pet
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_pet we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_petUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_petUpsertArgs<ExtArgs>>
    ): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_pets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petCountArgs} args - Arguments to filter Tbl_pets to count.
     * @example
     * // Count the number of Tbl_pets
     * const count = await prisma.tbl_pet.count({
     *   where: {
     *     // ... the filter for the Tbl_pets we want to count
     *   }
     * })
    **/
    count<T extends tbl_petCountArgs>(
      args?: Subset<T, tbl_petCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_petCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_pet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_petAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_petAggregateArgs>(args: Subset<T, Tbl_petAggregateArgs>): Prisma.PrismaPromise<GetTbl_petAggregateType<T>>

    /**
     * Group by Tbl_pet.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_petGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_petGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_petGroupByArgs['orderBy'] }
        : { orderBy?: tbl_petGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_petGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_petGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_pet model
   */
  readonly fields: tbl_petFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_pet.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_petClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_taxonomia<T extends tbl_taxonomiaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_taxonomiaDefaultArgs<ExtArgs>>): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_sexo<T extends tbl_sexoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexoDefaultArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_usuario<T extends tbl_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarioDefaultArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_servicos<T extends tbl_pet$tbl_servicosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_pet$tbl_servicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_pet model
   */ 
  interface tbl_petFieldRefs {
    readonly id: FieldRef<"tbl_pet", 'Int'>
    readonly nome: FieldRef<"tbl_pet", 'String'>
    readonly foto: FieldRef<"tbl_pet", 'String'>
    readonly data_nascimento: FieldRef<"tbl_pet", 'DateTime'>
    readonly id_dono: FieldRef<"tbl_pet", 'Int'>
    readonly id_sexo: FieldRef<"tbl_pet", 'Int'>
    readonly id_raca: FieldRef<"tbl_pet", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_pet findUnique
   */
  export type tbl_petFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter, which tbl_pet to fetch.
     */
    where: tbl_petWhereUniqueInput
  }

  /**
   * tbl_pet findUniqueOrThrow
   */
  export type tbl_petFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter, which tbl_pet to fetch.
     */
    where: tbl_petWhereUniqueInput
  }

  /**
   * tbl_pet findFirst
   */
  export type tbl_petFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter, which tbl_pet to fetch.
     */
    where?: tbl_petWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_pets to fetch.
     */
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_pets.
     */
    cursor?: tbl_petWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_pets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_pets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_pets.
     */
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_pet findFirstOrThrow
   */
  export type tbl_petFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter, which tbl_pet to fetch.
     */
    where?: tbl_petWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_pets to fetch.
     */
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_pets.
     */
    cursor?: tbl_petWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_pets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_pets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_pets.
     */
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_pet findMany
   */
  export type tbl_petFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter, which tbl_pets to fetch.
     */
    where?: tbl_petWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_pets to fetch.
     */
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_pets.
     */
    cursor?: tbl_petWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_pets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_pets.
     */
    skip?: number
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_pet create
   */
  export type tbl_petCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_pet.
     */
    data: XOR<tbl_petCreateInput, tbl_petUncheckedCreateInput>
  }

  /**
   * tbl_pet createMany
   */
  export type tbl_petCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_pets.
     */
    data: tbl_petCreateManyInput | tbl_petCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_pet update
   */
  export type tbl_petUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_pet.
     */
    data: XOR<tbl_petUpdateInput, tbl_petUncheckedUpdateInput>
    /**
     * Choose, which tbl_pet to update.
     */
    where: tbl_petWhereUniqueInput
  }

  /**
   * tbl_pet updateMany
   */
  export type tbl_petUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_pets.
     */
    data: XOR<tbl_petUpdateManyMutationInput, tbl_petUncheckedUpdateManyInput>
    /**
     * Filter which tbl_pets to update
     */
    where?: tbl_petWhereInput
  }

  /**
   * tbl_pet upsert
   */
  export type tbl_petUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_pet to update in case it exists.
     */
    where: tbl_petWhereUniqueInput
    /**
     * In case the tbl_pet found by the `where` argument doesn't exist, create a new tbl_pet with this data.
     */
    create: XOR<tbl_petCreateInput, tbl_petUncheckedCreateInput>
    /**
     * In case the tbl_pet was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_petUpdateInput, tbl_petUncheckedUpdateInput>
  }

  /**
   * tbl_pet delete
   */
  export type tbl_petDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    /**
     * Filter which tbl_pet to delete.
     */
    where: tbl_petWhereUniqueInput
  }

  /**
   * tbl_pet deleteMany
   */
  export type tbl_petDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_pets to delete
     */
    where?: tbl_petWhereInput
  }

  /**
   * tbl_pet.tbl_servicos
   */
  export type tbl_pet$tbl_servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    where?: tbl_servicosWhereInput
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    cursor?: tbl_servicosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_servicosScalarFieldEnum | Tbl_servicosScalarFieldEnum[]
  }

  /**
   * tbl_pet without action
   */
  export type tbl_petDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
  }


  /**
   * Model tbl_produtos
   */

  export type AggregateTbl_produtos = {
    _count: Tbl_produtosCountAggregateOutputType | null
    _avg: Tbl_produtosAvgAggregateOutputType | null
    _sum: Tbl_produtosSumAggregateOutputType | null
    _min: Tbl_produtosMinAggregateOutputType | null
    _max: Tbl_produtosMaxAggregateOutputType | null
  }

  export type Tbl_produtosAvgAggregateOutputType = {
    id: number | null
    quantidade: number | null
    valor_unitario: number | null
    id_categoria: number | null
  }

  export type Tbl_produtosSumAggregateOutputType = {
    id: number | null
    quantidade: number | null
    valor_unitario: number | null
    id_categoria: number | null
  }

  export type Tbl_produtosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    foto: string | null
    quantidade: number | null
    valor_unitario: number | null
    id_categoria: number | null
  }

  export type Tbl_produtosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    foto: string | null
    quantidade: number | null
    valor_unitario: number | null
    id_categoria: number | null
  }

  export type Tbl_produtosCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    foto: number
    quantidade: number
    valor_unitario: number
    id_categoria: number
    _all: number
  }


  export type Tbl_produtosAvgAggregateInputType = {
    id?: true
    quantidade?: true
    valor_unitario?: true
    id_categoria?: true
  }

  export type Tbl_produtosSumAggregateInputType = {
    id?: true
    quantidade?: true
    valor_unitario?: true
    id_categoria?: true
  }

  export type Tbl_produtosMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    foto?: true
    quantidade?: true
    valor_unitario?: true
    id_categoria?: true
  }

  export type Tbl_produtosMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    foto?: true
    quantidade?: true
    valor_unitario?: true
    id_categoria?: true
  }

  export type Tbl_produtosCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    foto?: true
    quantidade?: true
    valor_unitario?: true
    id_categoria?: true
    _all?: true
  }

  export type Tbl_produtosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_produtos to aggregate.
     */
    where?: tbl_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_produtos to fetch.
     */
    orderBy?: tbl_produtosOrderByWithRelationInput | tbl_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_produtos
    **/
    _count?: true | Tbl_produtosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_produtosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_produtosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_produtosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_produtosMaxAggregateInputType
  }

  export type GetTbl_produtosAggregateType<T extends Tbl_produtosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_produtos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_produtos[P]>
      : GetScalarType<T[P], AggregateTbl_produtos[P]>
  }




  export type tbl_produtosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_produtosWhereInput
    orderBy?: tbl_produtosOrderByWithAggregationInput | tbl_produtosOrderByWithAggregationInput[]
    by: Tbl_produtosScalarFieldEnum[] | Tbl_produtosScalarFieldEnum
    having?: tbl_produtosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_produtosCountAggregateInputType | true
    _avg?: Tbl_produtosAvgAggregateInputType
    _sum?: Tbl_produtosSumAggregateInputType
    _min?: Tbl_produtosMinAggregateInputType
    _max?: Tbl_produtosMaxAggregateInputType
  }

  export type Tbl_produtosGroupByOutputType = {
    id: number
    nome: string | null
    descricao: string | null
    foto: string | null
    quantidade: number
    valor_unitario: number
    id_categoria: number
    _count: Tbl_produtosCountAggregateOutputType | null
    _avg: Tbl_produtosAvgAggregateOutputType | null
    _sum: Tbl_produtosSumAggregateOutputType | null
    _min: Tbl_produtosMinAggregateOutputType | null
    _max: Tbl_produtosMaxAggregateOutputType | null
  }

  type GetTbl_produtosGroupByPayload<T extends tbl_produtosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_produtosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_produtosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_produtosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_produtosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_produtosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    foto?: boolean
    quantidade?: boolean
    valor_unitario?: boolean
    id_categoria?: boolean
    tbl_categorias_produtos?: boolean | tbl_categorias_produtosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_produtos"]>

  export type tbl_produtosSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    foto?: boolean
    quantidade?: boolean
    valor_unitario?: boolean
    id_categoria?: boolean
  }


  export type tbl_produtosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_categorias_produtos?: boolean | tbl_categorias_produtosDefaultArgs<ExtArgs>
  }


  export type $tbl_produtosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_produtos"
    objects: {
      tbl_categorias_produtos: Prisma.$tbl_categorias_produtosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
      descricao: string | null
      foto: string | null
      quantidade: number
      valor_unitario: number
      id_categoria: number
    }, ExtArgs["result"]["tbl_produtos"]>
    composites: {}
  }


  type tbl_produtosGetPayload<S extends boolean | null | undefined | tbl_produtosDefaultArgs> = $Result.GetResult<Prisma.$tbl_produtosPayload, S>

  type tbl_produtosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_produtosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_produtosCountAggregateInputType | true
    }

  export interface tbl_produtosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_produtos'], meta: { name: 'tbl_produtos' } }
    /**
     * Find zero or one Tbl_produtos that matches the filter.
     * @param {tbl_produtosFindUniqueArgs} args - Arguments to find a Tbl_produtos
     * @example
     * // Get one Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_produtosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_produtos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_produtosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_produtos
     * @example
     * // Get one Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_produtosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosFindFirstArgs} args - Arguments to find a Tbl_produtos
     * @example
     * // Get one Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_produtosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_produtos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosFindFirstOrThrowArgs} args - Arguments to find a Tbl_produtos
     * @example
     * // Get one Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_produtosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_produtos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findMany()
     * 
     * // Get first 10 Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_produtosWithIdOnly = await prisma.tbl_produtos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_produtosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_produtos.
     * @param {tbl_produtosCreateArgs} args - Arguments to create a Tbl_produtos.
     * @example
     * // Create one Tbl_produtos
     * const Tbl_produtos = await prisma.tbl_produtos.create({
     *   data: {
     *     // ... data to create a Tbl_produtos
     *   }
     * })
     * 
    **/
    create<T extends tbl_produtosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosCreateArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_produtos.
     * @param {tbl_produtosCreateManyArgs} args - Arguments to create many Tbl_produtos.
     * @example
     * // Create many Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_produtosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_produtos.
     * @param {tbl_produtosDeleteArgs} args - Arguments to delete one Tbl_produtos.
     * @example
     * // Delete one Tbl_produtos
     * const Tbl_produtos = await prisma.tbl_produtos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_produtos
     *   }
     * })
     * 
    **/
    delete<T extends tbl_produtosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_produtos.
     * @param {tbl_produtosUpdateArgs} args - Arguments to update one Tbl_produtos.
     * @example
     * // Update one Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_produtosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_produtos.
     * @param {tbl_produtosDeleteManyArgs} args - Arguments to filter Tbl_produtos to delete.
     * @example
     * // Delete a few Tbl_produtos
     * const { count } = await prisma.tbl_produtos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_produtosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_produtosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_produtosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_produtos.
     * @param {tbl_produtosUpsertArgs} args - Arguments to update or create a Tbl_produtos.
     * @example
     * // Update or create a Tbl_produtos
     * const tbl_produtos = await prisma.tbl_produtos.upsert({
     *   create: {
     *     // ... data to create a Tbl_produtos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_produtos we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_produtosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_produtosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_produtosClient<$Result.GetResult<Prisma.$tbl_produtosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosCountArgs} args - Arguments to filter Tbl_produtos to count.
     * @example
     * // Count the number of Tbl_produtos
     * const count = await prisma.tbl_produtos.count({
     *   where: {
     *     // ... the filter for the Tbl_produtos we want to count
     *   }
     * })
    **/
    count<T extends tbl_produtosCountArgs>(
      args?: Subset<T, tbl_produtosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_produtosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_produtosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_produtosAggregateArgs>(args: Subset<T, Tbl_produtosAggregateArgs>): Prisma.PrismaPromise<GetTbl_produtosAggregateType<T>>

    /**
     * Group by Tbl_produtos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_produtosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_produtosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_produtosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_produtosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_produtosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_produtosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_produtos model
   */
  readonly fields: tbl_produtosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_produtos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_produtosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_categorias_produtos<T extends tbl_categorias_produtosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_categorias_produtosDefaultArgs<ExtArgs>>): Prisma__tbl_categorias_produtosClient<$Result.GetResult<Prisma.$tbl_categorias_produtosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_produtos model
   */ 
  interface tbl_produtosFieldRefs {
    readonly id: FieldRef<"tbl_produtos", 'Int'>
    readonly nome: FieldRef<"tbl_produtos", 'String'>
    readonly descricao: FieldRef<"tbl_produtos", 'String'>
    readonly foto: FieldRef<"tbl_produtos", 'String'>
    readonly quantidade: FieldRef<"tbl_produtos", 'Int'>
    readonly valor_unitario: FieldRef<"tbl_produtos", 'Float'>
    readonly id_categoria: FieldRef<"tbl_produtos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_produtos findUnique
   */
  export type tbl_produtosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_produtos to fetch.
     */
    where: tbl_produtosWhereUniqueInput
  }

  /**
   * tbl_produtos findUniqueOrThrow
   */
  export type tbl_produtosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_produtos to fetch.
     */
    where: tbl_produtosWhereUniqueInput
  }

  /**
   * tbl_produtos findFirst
   */
  export type tbl_produtosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_produtos to fetch.
     */
    where?: tbl_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_produtos to fetch.
     */
    orderBy?: tbl_produtosOrderByWithRelationInput | tbl_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_produtos.
     */
    cursor?: tbl_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_produtos.
     */
    distinct?: Tbl_produtosScalarFieldEnum | Tbl_produtosScalarFieldEnum[]
  }

  /**
   * tbl_produtos findFirstOrThrow
   */
  export type tbl_produtosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_produtos to fetch.
     */
    where?: tbl_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_produtos to fetch.
     */
    orderBy?: tbl_produtosOrderByWithRelationInput | tbl_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_produtos.
     */
    cursor?: tbl_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_produtos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_produtos.
     */
    distinct?: Tbl_produtosScalarFieldEnum | Tbl_produtosScalarFieldEnum[]
  }

  /**
   * tbl_produtos findMany
   */
  export type tbl_produtosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_produtos to fetch.
     */
    where?: tbl_produtosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_produtos to fetch.
     */
    orderBy?: tbl_produtosOrderByWithRelationInput | tbl_produtosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_produtos.
     */
    cursor?: tbl_produtosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_produtos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_produtos.
     */
    skip?: number
    distinct?: Tbl_produtosScalarFieldEnum | Tbl_produtosScalarFieldEnum[]
  }

  /**
   * tbl_produtos create
   */
  export type tbl_produtosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_produtos.
     */
    data: XOR<tbl_produtosCreateInput, tbl_produtosUncheckedCreateInput>
  }

  /**
   * tbl_produtos createMany
   */
  export type tbl_produtosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_produtos.
     */
    data: tbl_produtosCreateManyInput | tbl_produtosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_produtos update
   */
  export type tbl_produtosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_produtos.
     */
    data: XOR<tbl_produtosUpdateInput, tbl_produtosUncheckedUpdateInput>
    /**
     * Choose, which tbl_produtos to update.
     */
    where: tbl_produtosWhereUniqueInput
  }

  /**
   * tbl_produtos updateMany
   */
  export type tbl_produtosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_produtos.
     */
    data: XOR<tbl_produtosUpdateManyMutationInput, tbl_produtosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_produtos to update
     */
    where?: tbl_produtosWhereInput
  }

  /**
   * tbl_produtos upsert
   */
  export type tbl_produtosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_produtos to update in case it exists.
     */
    where: tbl_produtosWhereUniqueInput
    /**
     * In case the tbl_produtos found by the `where` argument doesn't exist, create a new tbl_produtos with this data.
     */
    create: XOR<tbl_produtosCreateInput, tbl_produtosUncheckedCreateInput>
    /**
     * In case the tbl_produtos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_produtosUpdateInput, tbl_produtosUncheckedUpdateInput>
  }

  /**
   * tbl_produtos delete
   */
  export type tbl_produtosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
    /**
     * Filter which tbl_produtos to delete.
     */
    where: tbl_produtosWhereUniqueInput
  }

  /**
   * tbl_produtos deleteMany
   */
  export type tbl_produtosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_produtos to delete
     */
    where?: tbl_produtosWhereInput
  }

  /**
   * tbl_produtos without action
   */
  export type tbl_produtosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_produtos
     */
    select?: tbl_produtosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_produtosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_servicos
   */

  export type AggregateTbl_servicos = {
    _count: Tbl_servicosCountAggregateOutputType | null
    _avg: Tbl_servicosAvgAggregateOutputType | null
    _sum: Tbl_servicosSumAggregateOutputType | null
    _min: Tbl_servicosMinAggregateOutputType | null
    _max: Tbl_servicosMaxAggregateOutputType | null
  }

  export type Tbl_servicosAvgAggregateOutputType = {
    id: number | null
    id_funcionario: number | null
    id_pet: number | null
  }

  export type Tbl_servicosSumAggregateOutputType = {
    id: number | null
    id_funcionario: number | null
    id_pet: number | null
  }

  export type Tbl_servicosMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    data_realizacao: Date | null
    hora: Date | null
    id_funcionario: number | null
    id_pet: number | null
  }

  export type Tbl_servicosMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    data_realizacao: Date | null
    hora: Date | null
    id_funcionario: number | null
    id_pet: number | null
  }

  export type Tbl_servicosCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    data_realizacao: number
    hora: number
    id_funcionario: number
    id_pet: number
    _all: number
  }


  export type Tbl_servicosAvgAggregateInputType = {
    id?: true
    id_funcionario?: true
    id_pet?: true
  }

  export type Tbl_servicosSumAggregateInputType = {
    id?: true
    id_funcionario?: true
    id_pet?: true
  }

  export type Tbl_servicosMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    data_realizacao?: true
    hora?: true
    id_funcionario?: true
    id_pet?: true
  }

  export type Tbl_servicosMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    data_realizacao?: true
    hora?: true
    id_funcionario?: true
    id_pet?: true
  }

  export type Tbl_servicosCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    data_realizacao?: true
    hora?: true
    id_funcionario?: true
    id_pet?: true
    _all?: true
  }

  export type Tbl_servicosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_servicos to aggregate.
     */
    where?: tbl_servicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_servicos to fetch.
     */
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_servicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_servicos
    **/
    _count?: true | Tbl_servicosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_servicosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_servicosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_servicosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_servicosMaxAggregateInputType
  }

  export type GetTbl_servicosAggregateType<T extends Tbl_servicosAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_servicos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_servicos[P]>
      : GetScalarType<T[P], AggregateTbl_servicos[P]>
  }




  export type tbl_servicosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_servicosWhereInput
    orderBy?: tbl_servicosOrderByWithAggregationInput | tbl_servicosOrderByWithAggregationInput[]
    by: Tbl_servicosScalarFieldEnum[] | Tbl_servicosScalarFieldEnum
    having?: tbl_servicosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_servicosCountAggregateInputType | true
    _avg?: Tbl_servicosAvgAggregateInputType
    _sum?: Tbl_servicosSumAggregateInputType
    _min?: Tbl_servicosMinAggregateInputType
    _max?: Tbl_servicosMaxAggregateInputType
  }

  export type Tbl_servicosGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    data_realizacao: Date | null
    hora: Date | null
    id_funcionario: number
    id_pet: number
    _count: Tbl_servicosCountAggregateOutputType | null
    _avg: Tbl_servicosAvgAggregateOutputType | null
    _sum: Tbl_servicosSumAggregateOutputType | null
    _min: Tbl_servicosMinAggregateOutputType | null
    _max: Tbl_servicosMaxAggregateOutputType | null
  }

  type GetTbl_servicosGroupByPayload<T extends tbl_servicosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_servicosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_servicosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_servicosGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_servicosGroupByOutputType[P]>
        }
      >
    >


  export type tbl_servicosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    data_realizacao?: boolean
    hora?: boolean
    id_funcionario?: boolean
    id_pet?: boolean
    tbl_funcionarios?: boolean | tbl_funcionariosDefaultArgs<ExtArgs>
    tbl_pet?: boolean | tbl_petDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_servicos"]>

  export type tbl_servicosSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    data_realizacao?: boolean
    hora?: boolean
    id_funcionario?: boolean
    id_pet?: boolean
  }


  export type tbl_servicosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_funcionarios?: boolean | tbl_funcionariosDefaultArgs<ExtArgs>
    tbl_pet?: boolean | tbl_petDefaultArgs<ExtArgs>
  }


  export type $tbl_servicosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_servicos"
    objects: {
      tbl_funcionarios: Prisma.$tbl_funcionariosPayload<ExtArgs>
      tbl_pet: Prisma.$tbl_petPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
      data_realizacao: Date | null
      hora: Date | null
      id_funcionario: number
      id_pet: number
    }, ExtArgs["result"]["tbl_servicos"]>
    composites: {}
  }


  type tbl_servicosGetPayload<S extends boolean | null | undefined | tbl_servicosDefaultArgs> = $Result.GetResult<Prisma.$tbl_servicosPayload, S>

  type tbl_servicosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_servicosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_servicosCountAggregateInputType | true
    }

  export interface tbl_servicosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_servicos'], meta: { name: 'tbl_servicos' } }
    /**
     * Find zero or one Tbl_servicos that matches the filter.
     * @param {tbl_servicosFindUniqueArgs} args - Arguments to find a Tbl_servicos
     * @example
     * // Get one Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_servicosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_servicos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_servicosFindUniqueOrThrowArgs} args - Arguments to find a Tbl_servicos
     * @example
     * // Get one Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_servicosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_servicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosFindFirstArgs} args - Arguments to find a Tbl_servicos
     * @example
     * // Get one Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_servicosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_servicos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosFindFirstOrThrowArgs} args - Arguments to find a Tbl_servicos
     * @example
     * // Get one Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_servicosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_servicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findMany()
     * 
     * // Get first 10 Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_servicosWithIdOnly = await prisma.tbl_servicos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_servicosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_servicos.
     * @param {tbl_servicosCreateArgs} args - Arguments to create a Tbl_servicos.
     * @example
     * // Create one Tbl_servicos
     * const Tbl_servicos = await prisma.tbl_servicos.create({
     *   data: {
     *     // ... data to create a Tbl_servicos
     *   }
     * })
     * 
    **/
    create<T extends tbl_servicosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosCreateArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_servicos.
     * @param {tbl_servicosCreateManyArgs} args - Arguments to create many Tbl_servicos.
     * @example
     * // Create many Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_servicosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_servicos.
     * @param {tbl_servicosDeleteArgs} args - Arguments to delete one Tbl_servicos.
     * @example
     * // Delete one Tbl_servicos
     * const Tbl_servicos = await prisma.tbl_servicos.delete({
     *   where: {
     *     // ... filter to delete one Tbl_servicos
     *   }
     * })
     * 
    **/
    delete<T extends tbl_servicosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosDeleteArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_servicos.
     * @param {tbl_servicosUpdateArgs} args - Arguments to update one Tbl_servicos.
     * @example
     * // Update one Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_servicosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosUpdateArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_servicos.
     * @param {tbl_servicosDeleteManyArgs} args - Arguments to filter Tbl_servicos to delete.
     * @example
     * // Delete a few Tbl_servicos
     * const { count } = await prisma.tbl_servicos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_servicosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_servicosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_servicosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_servicos.
     * @param {tbl_servicosUpsertArgs} args - Arguments to update or create a Tbl_servicos.
     * @example
     * // Update or create a Tbl_servicos
     * const tbl_servicos = await prisma.tbl_servicos.upsert({
     *   create: {
     *     // ... data to create a Tbl_servicos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_servicos we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_servicosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_servicosUpsertArgs<ExtArgs>>
    ): Prisma__tbl_servicosClient<$Result.GetResult<Prisma.$tbl_servicosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosCountArgs} args - Arguments to filter Tbl_servicos to count.
     * @example
     * // Count the number of Tbl_servicos
     * const count = await prisma.tbl_servicos.count({
     *   where: {
     *     // ... the filter for the Tbl_servicos we want to count
     *   }
     * })
    **/
    count<T extends tbl_servicosCountArgs>(
      args?: Subset<T, tbl_servicosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_servicosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_servicosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_servicosAggregateArgs>(args: Subset<T, Tbl_servicosAggregateArgs>): Prisma.PrismaPromise<GetTbl_servicosAggregateType<T>>

    /**
     * Group by Tbl_servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_servicosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_servicosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_servicosGroupByArgs['orderBy'] }
        : { orderBy?: tbl_servicosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_servicosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_servicosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_servicos model
   */
  readonly fields: tbl_servicosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_servicos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_servicosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_funcionarios<T extends tbl_funcionariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_funcionariosDefaultArgs<ExtArgs>>): Prisma__tbl_funcionariosClient<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    tbl_pet<T extends tbl_petDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_petDefaultArgs<ExtArgs>>): Prisma__tbl_petClient<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_servicos model
   */ 
  interface tbl_servicosFieldRefs {
    readonly id: FieldRef<"tbl_servicos", 'Int'>
    readonly nome: FieldRef<"tbl_servicos", 'String'>
    readonly descricao: FieldRef<"tbl_servicos", 'String'>
    readonly data_realizacao: FieldRef<"tbl_servicos", 'DateTime'>
    readonly hora: FieldRef<"tbl_servicos", 'DateTime'>
    readonly id_funcionario: FieldRef<"tbl_servicos", 'Int'>
    readonly id_pet: FieldRef<"tbl_servicos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_servicos findUnique
   */
  export type tbl_servicosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_servicos to fetch.
     */
    where: tbl_servicosWhereUniqueInput
  }

  /**
   * tbl_servicos findUniqueOrThrow
   */
  export type tbl_servicosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_servicos to fetch.
     */
    where: tbl_servicosWhereUniqueInput
  }

  /**
   * tbl_servicos findFirst
   */
  export type tbl_servicosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_servicos to fetch.
     */
    where?: tbl_servicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_servicos to fetch.
     */
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_servicos.
     */
    cursor?: tbl_servicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_servicos.
     */
    distinct?: Tbl_servicosScalarFieldEnum | Tbl_servicosScalarFieldEnum[]
  }

  /**
   * tbl_servicos findFirstOrThrow
   */
  export type tbl_servicosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_servicos to fetch.
     */
    where?: tbl_servicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_servicos to fetch.
     */
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_servicos.
     */
    cursor?: tbl_servicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_servicos.
     */
    distinct?: Tbl_servicosScalarFieldEnum | Tbl_servicosScalarFieldEnum[]
  }

  /**
   * tbl_servicos findMany
   */
  export type tbl_servicosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter, which tbl_servicos to fetch.
     */
    where?: tbl_servicosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_servicos to fetch.
     */
    orderBy?: tbl_servicosOrderByWithRelationInput | tbl_servicosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_servicos.
     */
    cursor?: tbl_servicosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_servicos.
     */
    skip?: number
    distinct?: Tbl_servicosScalarFieldEnum | Tbl_servicosScalarFieldEnum[]
  }

  /**
   * tbl_servicos create
   */
  export type tbl_servicosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_servicos.
     */
    data: XOR<tbl_servicosCreateInput, tbl_servicosUncheckedCreateInput>
  }

  /**
   * tbl_servicos createMany
   */
  export type tbl_servicosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_servicos.
     */
    data: tbl_servicosCreateManyInput | tbl_servicosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_servicos update
   */
  export type tbl_servicosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_servicos.
     */
    data: XOR<tbl_servicosUpdateInput, tbl_servicosUncheckedUpdateInput>
    /**
     * Choose, which tbl_servicos to update.
     */
    where: tbl_servicosWhereUniqueInput
  }

  /**
   * tbl_servicos updateMany
   */
  export type tbl_servicosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_servicos.
     */
    data: XOR<tbl_servicosUpdateManyMutationInput, tbl_servicosUncheckedUpdateManyInput>
    /**
     * Filter which tbl_servicos to update
     */
    where?: tbl_servicosWhereInput
  }

  /**
   * tbl_servicos upsert
   */
  export type tbl_servicosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_servicos to update in case it exists.
     */
    where: tbl_servicosWhereUniqueInput
    /**
     * In case the tbl_servicos found by the `where` argument doesn't exist, create a new tbl_servicos with this data.
     */
    create: XOR<tbl_servicosCreateInput, tbl_servicosUncheckedCreateInput>
    /**
     * In case the tbl_servicos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_servicosUpdateInput, tbl_servicosUncheckedUpdateInput>
  }

  /**
   * tbl_servicos delete
   */
  export type tbl_servicosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
    /**
     * Filter which tbl_servicos to delete.
     */
    where: tbl_servicosWhereUniqueInput
  }

  /**
   * tbl_servicos deleteMany
   */
  export type tbl_servicosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_servicos to delete
     */
    where?: tbl_servicosWhereInput
  }

  /**
   * tbl_servicos without action
   */
  export type tbl_servicosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_servicos
     */
    select?: tbl_servicosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_servicosInclude<ExtArgs> | null
  }


  /**
   * Model tbl_sexo
   */

  export type AggregateTbl_sexo = {
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  export type Tbl_sexoAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_sexoSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_sexoMinAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_sexoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
  }

  export type Tbl_sexoCountAggregateOutputType = {
    id: number
    nome: number
    _all: number
  }


  export type Tbl_sexoAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_sexoSumAggregateInputType = {
    id?: true
  }

  export type Tbl_sexoMinAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_sexoMaxAggregateInputType = {
    id?: true
    nome?: true
  }

  export type Tbl_sexoCountAggregateInputType = {
    id?: true
    nome?: true
    _all?: true
  }

  export type Tbl_sexoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexo to aggregate.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_sexos
    **/
    _count?: true | Tbl_sexoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_sexoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_sexoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_sexoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type GetTbl_sexoAggregateType<T extends Tbl_sexoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_sexo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_sexo[P]>
      : GetScalarType<T[P], AggregateTbl_sexo[P]>
  }




  export type tbl_sexoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_sexoWhereInput
    orderBy?: tbl_sexoOrderByWithAggregationInput | tbl_sexoOrderByWithAggregationInput[]
    by: Tbl_sexoScalarFieldEnum[] | Tbl_sexoScalarFieldEnum
    having?: tbl_sexoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_sexoCountAggregateInputType | true
    _avg?: Tbl_sexoAvgAggregateInputType
    _sum?: Tbl_sexoSumAggregateInputType
    _min?: Tbl_sexoMinAggregateInputType
    _max?: Tbl_sexoMaxAggregateInputType
  }

  export type Tbl_sexoGroupByOutputType = {
    id: number
    nome: string | null
    _count: Tbl_sexoCountAggregateOutputType | null
    _avg: Tbl_sexoAvgAggregateOutputType | null
    _sum: Tbl_sexoSumAggregateOutputType | null
    _min: Tbl_sexoMinAggregateOutputType | null
    _max: Tbl_sexoMaxAggregateOutputType | null
  }

  type GetTbl_sexoGroupByPayload<T extends tbl_sexoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_sexoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_sexoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_sexoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_sexoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    tbl_funcionarios?: boolean | tbl_sexo$tbl_funcionariosArgs<ExtArgs>
    tbl_pet?: boolean | tbl_sexo$tbl_petArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_sexo$tbl_usuarioArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_sexo"]>

  export type tbl_sexoSelectScalar = {
    id?: boolean
    nome?: boolean
  }


  export type tbl_sexoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_funcionarios?: boolean | tbl_sexo$tbl_funcionariosArgs<ExtArgs>
    tbl_pet?: boolean | tbl_sexo$tbl_petArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_sexo$tbl_usuarioArgs<ExtArgs>
    _count?: boolean | Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_sexoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_sexo"
    objects: {
      tbl_funcionarios: Prisma.$tbl_funcionariosPayload<ExtArgs>[]
      tbl_pet: Prisma.$tbl_petPayload<ExtArgs>[]
      tbl_usuario: Prisma.$tbl_usuarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
    }, ExtArgs["result"]["tbl_sexo"]>
    composites: {}
  }


  type tbl_sexoGetPayload<S extends boolean | null | undefined | tbl_sexoDefaultArgs> = $Result.GetResult<Prisma.$tbl_sexoPayload, S>

  type tbl_sexoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_sexoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_sexoCountAggregateInputType | true
    }

  export interface tbl_sexoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_sexo'], meta: { name: 'tbl_sexo' } }
    /**
     * Find zero or one Tbl_sexo that matches the filter.
     * @param {tbl_sexoFindUniqueArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_sexoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_sexo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_sexoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_sexoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_sexo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_sexoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_sexo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindFirstOrThrowArgs} args - Arguments to find a Tbl_sexo
     * @example
     * // Get one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_sexoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_sexos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany()
     * 
     * // Get first 10 Tbl_sexos
     * const tbl_sexos = await prisma.tbl_sexo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_sexoWithIdOnly = await prisma.tbl_sexo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_sexoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_sexo.
     * @param {tbl_sexoCreateArgs} args - Arguments to create a Tbl_sexo.
     * @example
     * // Create one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.create({
     *   data: {
     *     // ... data to create a Tbl_sexo
     *   }
     * })
     * 
    **/
    create<T extends tbl_sexoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoCreateArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_sexos.
     * @param {tbl_sexoCreateManyArgs} args - Arguments to create many Tbl_sexos.
     * @example
     * // Create many Tbl_sexos
     * const tbl_sexo = await prisma.tbl_sexo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_sexoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_sexo.
     * @param {tbl_sexoDeleteArgs} args - Arguments to delete one Tbl_sexo.
     * @example
     * // Delete one Tbl_sexo
     * const Tbl_sexo = await prisma.tbl_sexo.delete({
     *   where: {
     *     // ... filter to delete one Tbl_sexo
     *   }
     * })
     * 
    **/
    delete<T extends tbl_sexoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoDeleteArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_sexo.
     * @param {tbl_sexoUpdateArgs} args - Arguments to update one Tbl_sexo.
     * @example
     * // Update one Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_sexoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpdateArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_sexos.
     * @param {tbl_sexoDeleteManyArgs} args - Arguments to filter Tbl_sexos to delete.
     * @example
     * // Delete a few Tbl_sexos
     * const { count } = await prisma.tbl_sexo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_sexoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_sexoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_sexos
     * const tbl_sexo = await prisma.tbl_sexo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_sexoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_sexo.
     * @param {tbl_sexoUpsertArgs} args - Arguments to update or create a Tbl_sexo.
     * @example
     * // Update or create a Tbl_sexo
     * const tbl_sexo = await prisma.tbl_sexo.upsert({
     *   create: {
     *     // ... data to create a Tbl_sexo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_sexo we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_sexoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_sexoUpsertArgs<ExtArgs>>
    ): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_sexos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoCountArgs} args - Arguments to filter Tbl_sexos to count.
     * @example
     * // Count the number of Tbl_sexos
     * const count = await prisma.tbl_sexo.count({
     *   where: {
     *     // ... the filter for the Tbl_sexos we want to count
     *   }
     * })
    **/
    count<T extends tbl_sexoCountArgs>(
      args?: Subset<T, tbl_sexoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_sexoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_sexoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_sexoAggregateArgs>(args: Subset<T, Tbl_sexoAggregateArgs>): Prisma.PrismaPromise<GetTbl_sexoAggregateType<T>>

    /**
     * Group by Tbl_sexo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_sexoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_sexoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_sexoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_sexoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_sexoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_sexoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_sexo model
   */
  readonly fields: tbl_sexoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_sexo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_sexoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_funcionarios<T extends tbl_sexo$tbl_funcionariosArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_funcionariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_funcionariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_pet<T extends tbl_sexo$tbl_petArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_petArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_usuario<T extends tbl_sexo$tbl_usuarioArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexo$tbl_usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_sexo model
   */ 
  interface tbl_sexoFieldRefs {
    readonly id: FieldRef<"tbl_sexo", 'Int'>
    readonly nome: FieldRef<"tbl_sexo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_sexo findUnique
   */
  export type tbl_sexoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo findUniqueOrThrow
   */
  export type tbl_sexoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo findFirst
   */
  export type tbl_sexoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo findFirstOrThrow
   */
  export type tbl_sexoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexo to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_sexos.
     */
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo findMany
   */
  export type tbl_sexoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_sexos to fetch.
     */
    where?: tbl_sexoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_sexos to fetch.
     */
    orderBy?: tbl_sexoOrderByWithRelationInput | tbl_sexoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_sexos.
     */
    cursor?: tbl_sexoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_sexos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_sexos.
     */
    skip?: number
    distinct?: Tbl_sexoScalarFieldEnum | Tbl_sexoScalarFieldEnum[]
  }

  /**
   * tbl_sexo create
   */
  export type tbl_sexoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_sexo.
     */
    data?: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
  }

  /**
   * tbl_sexo createMany
   */
  export type tbl_sexoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_sexos.
     */
    data: tbl_sexoCreateManyInput | tbl_sexoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_sexo update
   */
  export type tbl_sexoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_sexo.
     */
    data: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
    /**
     * Choose, which tbl_sexo to update.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo updateMany
   */
  export type tbl_sexoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_sexos.
     */
    data: XOR<tbl_sexoUpdateManyMutationInput, tbl_sexoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_sexos to update
     */
    where?: tbl_sexoWhereInput
  }

  /**
   * tbl_sexo upsert
   */
  export type tbl_sexoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_sexo to update in case it exists.
     */
    where: tbl_sexoWhereUniqueInput
    /**
     * In case the tbl_sexo found by the `where` argument doesn't exist, create a new tbl_sexo with this data.
     */
    create: XOR<tbl_sexoCreateInput, tbl_sexoUncheckedCreateInput>
    /**
     * In case the tbl_sexo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_sexoUpdateInput, tbl_sexoUncheckedUpdateInput>
  }

  /**
   * tbl_sexo delete
   */
  export type tbl_sexoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
    /**
     * Filter which tbl_sexo to delete.
     */
    where: tbl_sexoWhereUniqueInput
  }

  /**
   * tbl_sexo deleteMany
   */
  export type tbl_sexoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_sexos to delete
     */
    where?: tbl_sexoWhereInput
  }

  /**
   * tbl_sexo.tbl_funcionarios
   */
  export type tbl_sexo$tbl_funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_funcionarios
     */
    select?: tbl_funcionariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_funcionariosInclude<ExtArgs> | null
    where?: tbl_funcionariosWhereInput
    orderBy?: tbl_funcionariosOrderByWithRelationInput | tbl_funcionariosOrderByWithRelationInput[]
    cursor?: tbl_funcionariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_funcionariosScalarFieldEnum | Tbl_funcionariosScalarFieldEnum[]
  }

  /**
   * tbl_sexo.tbl_pet
   */
  export type tbl_sexo$tbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    where?: tbl_petWhereInput
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    cursor?: tbl_petWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_sexo.tbl_usuario
   */
  export type tbl_sexo$tbl_usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    where?: tbl_usuarioWhereInput
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    cursor?: tbl_usuarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_sexo without action
   */
  export type tbl_sexoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_sexo
     */
    select?: tbl_sexoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_sexoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_taxonomia
   */

  export type AggregateTbl_taxonomia = {
    _count: Tbl_taxonomiaCountAggregateOutputType | null
    _avg: Tbl_taxonomiaAvgAggregateOutputType | null
    _sum: Tbl_taxonomiaSumAggregateOutputType | null
    _min: Tbl_taxonomiaMinAggregateOutputType | null
    _max: Tbl_taxonomiaMaxAggregateOutputType | null
  }

  export type Tbl_taxonomiaAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_taxonomiaSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_taxonomiaMinAggregateOutputType = {
    id: number | null
    especie: string | null
    raca: string | null
  }

  export type Tbl_taxonomiaMaxAggregateOutputType = {
    id: number | null
    especie: string | null
    raca: string | null
  }

  export type Tbl_taxonomiaCountAggregateOutputType = {
    id: number
    especie: number
    raca: number
    _all: number
  }


  export type Tbl_taxonomiaAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_taxonomiaSumAggregateInputType = {
    id?: true
  }

  export type Tbl_taxonomiaMinAggregateInputType = {
    id?: true
    especie?: true
    raca?: true
  }

  export type Tbl_taxonomiaMaxAggregateInputType = {
    id?: true
    especie?: true
    raca?: true
  }

  export type Tbl_taxonomiaCountAggregateInputType = {
    id?: true
    especie?: true
    raca?: true
    _all?: true
  }

  export type Tbl_taxonomiaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_taxonomia to aggregate.
     */
    where?: tbl_taxonomiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_taxonomias to fetch.
     */
    orderBy?: tbl_taxonomiaOrderByWithRelationInput | tbl_taxonomiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_taxonomiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_taxonomias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_taxonomias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_taxonomias
    **/
    _count?: true | Tbl_taxonomiaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_taxonomiaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_taxonomiaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_taxonomiaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_taxonomiaMaxAggregateInputType
  }

  export type GetTbl_taxonomiaAggregateType<T extends Tbl_taxonomiaAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_taxonomia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_taxonomia[P]>
      : GetScalarType<T[P], AggregateTbl_taxonomia[P]>
  }




  export type tbl_taxonomiaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_taxonomiaWhereInput
    orderBy?: tbl_taxonomiaOrderByWithAggregationInput | tbl_taxonomiaOrderByWithAggregationInput[]
    by: Tbl_taxonomiaScalarFieldEnum[] | Tbl_taxonomiaScalarFieldEnum
    having?: tbl_taxonomiaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_taxonomiaCountAggregateInputType | true
    _avg?: Tbl_taxonomiaAvgAggregateInputType
    _sum?: Tbl_taxonomiaSumAggregateInputType
    _min?: Tbl_taxonomiaMinAggregateInputType
    _max?: Tbl_taxonomiaMaxAggregateInputType
  }

  export type Tbl_taxonomiaGroupByOutputType = {
    id: number
    especie: string
    raca: string
    _count: Tbl_taxonomiaCountAggregateOutputType | null
    _avg: Tbl_taxonomiaAvgAggregateOutputType | null
    _sum: Tbl_taxonomiaSumAggregateOutputType | null
    _min: Tbl_taxonomiaMinAggregateOutputType | null
    _max: Tbl_taxonomiaMaxAggregateOutputType | null
  }

  type GetTbl_taxonomiaGroupByPayload<T extends tbl_taxonomiaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_taxonomiaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_taxonomiaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_taxonomiaGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_taxonomiaGroupByOutputType[P]>
        }
      >
    >


  export type tbl_taxonomiaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    especie?: boolean
    raca?: boolean
    tbl_pet?: boolean | tbl_taxonomia$tbl_petArgs<ExtArgs>
    _count?: boolean | Tbl_taxonomiaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_taxonomia"]>

  export type tbl_taxonomiaSelectScalar = {
    id?: boolean
    especie?: boolean
    raca?: boolean
  }


  export type tbl_taxonomiaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_pet?: boolean | tbl_taxonomia$tbl_petArgs<ExtArgs>
    _count?: boolean | Tbl_taxonomiaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_taxonomiaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_taxonomia"
    objects: {
      tbl_pet: Prisma.$tbl_petPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      especie: string
      raca: string
    }, ExtArgs["result"]["tbl_taxonomia"]>
    composites: {}
  }


  type tbl_taxonomiaGetPayload<S extends boolean | null | undefined | tbl_taxonomiaDefaultArgs> = $Result.GetResult<Prisma.$tbl_taxonomiaPayload, S>

  type tbl_taxonomiaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_taxonomiaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_taxonomiaCountAggregateInputType | true
    }

  export interface tbl_taxonomiaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_taxonomia'], meta: { name: 'tbl_taxonomia' } }
    /**
     * Find zero or one Tbl_taxonomia that matches the filter.
     * @param {tbl_taxonomiaFindUniqueArgs} args - Arguments to find a Tbl_taxonomia
     * @example
     * // Get one Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_taxonomiaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_taxonomia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_taxonomiaFindUniqueOrThrowArgs} args - Arguments to find a Tbl_taxonomia
     * @example
     * // Get one Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_taxonomiaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_taxonomia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaFindFirstArgs} args - Arguments to find a Tbl_taxonomia
     * @example
     * // Get one Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_taxonomiaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_taxonomia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaFindFirstOrThrowArgs} args - Arguments to find a Tbl_taxonomia
     * @example
     * // Get one Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_taxonomiaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_taxonomias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_taxonomias
     * const tbl_taxonomias = await prisma.tbl_taxonomia.findMany()
     * 
     * // Get first 10 Tbl_taxonomias
     * const tbl_taxonomias = await prisma.tbl_taxonomia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_taxonomiaWithIdOnly = await prisma.tbl_taxonomia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_taxonomiaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_taxonomia.
     * @param {tbl_taxonomiaCreateArgs} args - Arguments to create a Tbl_taxonomia.
     * @example
     * // Create one Tbl_taxonomia
     * const Tbl_taxonomia = await prisma.tbl_taxonomia.create({
     *   data: {
     *     // ... data to create a Tbl_taxonomia
     *   }
     * })
     * 
    **/
    create<T extends tbl_taxonomiaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaCreateArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_taxonomias.
     * @param {tbl_taxonomiaCreateManyArgs} args - Arguments to create many Tbl_taxonomias.
     * @example
     * // Create many Tbl_taxonomias
     * const tbl_taxonomia = await prisma.tbl_taxonomia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_taxonomiaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_taxonomia.
     * @param {tbl_taxonomiaDeleteArgs} args - Arguments to delete one Tbl_taxonomia.
     * @example
     * // Delete one Tbl_taxonomia
     * const Tbl_taxonomia = await prisma.tbl_taxonomia.delete({
     *   where: {
     *     // ... filter to delete one Tbl_taxonomia
     *   }
     * })
     * 
    **/
    delete<T extends tbl_taxonomiaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaDeleteArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_taxonomia.
     * @param {tbl_taxonomiaUpdateArgs} args - Arguments to update one Tbl_taxonomia.
     * @example
     * // Update one Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_taxonomiaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaUpdateArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_taxonomias.
     * @param {tbl_taxonomiaDeleteManyArgs} args - Arguments to filter Tbl_taxonomias to delete.
     * @example
     * // Delete a few Tbl_taxonomias
     * const { count } = await prisma.tbl_taxonomia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_taxonomiaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_taxonomiaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_taxonomias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_taxonomias
     * const tbl_taxonomia = await prisma.tbl_taxonomia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_taxonomiaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_taxonomia.
     * @param {tbl_taxonomiaUpsertArgs} args - Arguments to update or create a Tbl_taxonomia.
     * @example
     * // Update or create a Tbl_taxonomia
     * const tbl_taxonomia = await prisma.tbl_taxonomia.upsert({
     *   create: {
     *     // ... data to create a Tbl_taxonomia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_taxonomia we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_taxonomiaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_taxonomiaUpsertArgs<ExtArgs>>
    ): Prisma__tbl_taxonomiaClient<$Result.GetResult<Prisma.$tbl_taxonomiaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_taxonomias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaCountArgs} args - Arguments to filter Tbl_taxonomias to count.
     * @example
     * // Count the number of Tbl_taxonomias
     * const count = await prisma.tbl_taxonomia.count({
     *   where: {
     *     // ... the filter for the Tbl_taxonomias we want to count
     *   }
     * })
    **/
    count<T extends tbl_taxonomiaCountArgs>(
      args?: Subset<T, tbl_taxonomiaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_taxonomiaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_taxonomia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_taxonomiaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_taxonomiaAggregateArgs>(args: Subset<T, Tbl_taxonomiaAggregateArgs>): Prisma.PrismaPromise<GetTbl_taxonomiaAggregateType<T>>

    /**
     * Group by Tbl_taxonomia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_taxonomiaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_taxonomiaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_taxonomiaGroupByArgs['orderBy'] }
        : { orderBy?: tbl_taxonomiaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_taxonomiaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_taxonomiaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_taxonomia model
   */
  readonly fields: tbl_taxonomiaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_taxonomia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_taxonomiaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_pet<T extends tbl_taxonomia$tbl_petArgs<ExtArgs> = {}>(args?: Subset<T, tbl_taxonomia$tbl_petArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_taxonomia model
   */ 
  interface tbl_taxonomiaFieldRefs {
    readonly id: FieldRef<"tbl_taxonomia", 'Int'>
    readonly especie: FieldRef<"tbl_taxonomia", 'String'>
    readonly raca: FieldRef<"tbl_taxonomia", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_taxonomia findUnique
   */
  export type tbl_taxonomiaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_taxonomia to fetch.
     */
    where: tbl_taxonomiaWhereUniqueInput
  }

  /**
   * tbl_taxonomia findUniqueOrThrow
   */
  export type tbl_taxonomiaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_taxonomia to fetch.
     */
    where: tbl_taxonomiaWhereUniqueInput
  }

  /**
   * tbl_taxonomia findFirst
   */
  export type tbl_taxonomiaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_taxonomia to fetch.
     */
    where?: tbl_taxonomiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_taxonomias to fetch.
     */
    orderBy?: tbl_taxonomiaOrderByWithRelationInput | tbl_taxonomiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_taxonomias.
     */
    cursor?: tbl_taxonomiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_taxonomias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_taxonomias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_taxonomias.
     */
    distinct?: Tbl_taxonomiaScalarFieldEnum | Tbl_taxonomiaScalarFieldEnum[]
  }

  /**
   * tbl_taxonomia findFirstOrThrow
   */
  export type tbl_taxonomiaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_taxonomia to fetch.
     */
    where?: tbl_taxonomiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_taxonomias to fetch.
     */
    orderBy?: tbl_taxonomiaOrderByWithRelationInput | tbl_taxonomiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_taxonomias.
     */
    cursor?: tbl_taxonomiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_taxonomias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_taxonomias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_taxonomias.
     */
    distinct?: Tbl_taxonomiaScalarFieldEnum | Tbl_taxonomiaScalarFieldEnum[]
  }

  /**
   * tbl_taxonomia findMany
   */
  export type tbl_taxonomiaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter, which tbl_taxonomias to fetch.
     */
    where?: tbl_taxonomiaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_taxonomias to fetch.
     */
    orderBy?: tbl_taxonomiaOrderByWithRelationInput | tbl_taxonomiaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_taxonomias.
     */
    cursor?: tbl_taxonomiaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_taxonomias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_taxonomias.
     */
    skip?: number
    distinct?: Tbl_taxonomiaScalarFieldEnum | Tbl_taxonomiaScalarFieldEnum[]
  }

  /**
   * tbl_taxonomia create
   */
  export type tbl_taxonomiaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_taxonomia.
     */
    data: XOR<tbl_taxonomiaCreateInput, tbl_taxonomiaUncheckedCreateInput>
  }

  /**
   * tbl_taxonomia createMany
   */
  export type tbl_taxonomiaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_taxonomias.
     */
    data: tbl_taxonomiaCreateManyInput | tbl_taxonomiaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_taxonomia update
   */
  export type tbl_taxonomiaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_taxonomia.
     */
    data: XOR<tbl_taxonomiaUpdateInput, tbl_taxonomiaUncheckedUpdateInput>
    /**
     * Choose, which tbl_taxonomia to update.
     */
    where: tbl_taxonomiaWhereUniqueInput
  }

  /**
   * tbl_taxonomia updateMany
   */
  export type tbl_taxonomiaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_taxonomias.
     */
    data: XOR<tbl_taxonomiaUpdateManyMutationInput, tbl_taxonomiaUncheckedUpdateManyInput>
    /**
     * Filter which tbl_taxonomias to update
     */
    where?: tbl_taxonomiaWhereInput
  }

  /**
   * tbl_taxonomia upsert
   */
  export type tbl_taxonomiaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_taxonomia to update in case it exists.
     */
    where: tbl_taxonomiaWhereUniqueInput
    /**
     * In case the tbl_taxonomia found by the `where` argument doesn't exist, create a new tbl_taxonomia with this data.
     */
    create: XOR<tbl_taxonomiaCreateInput, tbl_taxonomiaUncheckedCreateInput>
    /**
     * In case the tbl_taxonomia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_taxonomiaUpdateInput, tbl_taxonomiaUncheckedUpdateInput>
  }

  /**
   * tbl_taxonomia delete
   */
  export type tbl_taxonomiaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
    /**
     * Filter which tbl_taxonomia to delete.
     */
    where: tbl_taxonomiaWhereUniqueInput
  }

  /**
   * tbl_taxonomia deleteMany
   */
  export type tbl_taxonomiaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_taxonomias to delete
     */
    where?: tbl_taxonomiaWhereInput
  }

  /**
   * tbl_taxonomia.tbl_pet
   */
  export type tbl_taxonomia$tbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    where?: tbl_petWhereInput
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    cursor?: tbl_petWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_taxonomia without action
   */
  export type tbl_taxonomiaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_taxonomia
     */
    select?: tbl_taxonomiaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_taxonomiaInclude<ExtArgs> | null
  }


  /**
   * Model tbl_usuario
   */

  export type AggregateTbl_usuario = {
    _count: Tbl_usuarioCountAggregateOutputType | null
    _avg: Tbl_usuarioAvgAggregateOutputType | null
    _sum: Tbl_usuarioSumAggregateOutputType | null
    _min: Tbl_usuarioMinAggregateOutputType | null
    _max: Tbl_usuarioMaxAggregateOutputType | null
  }

  export type Tbl_usuarioAvgAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_usuarioSumAggregateOutputType = {
    id: number | null
    id_sexo: number | null
  }

  export type Tbl_usuarioMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    data_nascimento: Date | null
    foto_perfil: string | null
    id_sexo: number | null
  }

  export type Tbl_usuarioMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    senha: string | null
    telefone: string | null
    data_nascimento: Date | null
    foto_perfil: string | null
    id_sexo: number | null
  }

  export type Tbl_usuarioCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    senha: number
    telefone: number
    data_nascimento: number
    foto_perfil: number
    id_sexo: number
    _all: number
  }


  export type Tbl_usuarioAvgAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_usuarioSumAggregateInputType = {
    id?: true
    id_sexo?: true
  }

  export type Tbl_usuarioMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    data_nascimento?: true
    foto_perfil?: true
    id_sexo?: true
  }

  export type Tbl_usuarioMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    data_nascimento?: true
    foto_perfil?: true
    id_sexo?: true
  }

  export type Tbl_usuarioCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    senha?: true
    telefone?: true
    data_nascimento?: true
    foto_perfil?: true
    id_sexo?: true
    _all?: true
  }

  export type Tbl_usuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuario to aggregate.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_usuarios
    **/
    _count?: true | Tbl_usuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_usuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_usuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_usuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_usuarioMaxAggregateInputType
  }

  export type GetTbl_usuarioAggregateType<T extends Tbl_usuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_usuario[P]>
      : GetScalarType<T[P], AggregateTbl_usuario[P]>
  }




  export type tbl_usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuarioWhereInput
    orderBy?: tbl_usuarioOrderByWithAggregationInput | tbl_usuarioOrderByWithAggregationInput[]
    by: Tbl_usuarioScalarFieldEnum[] | Tbl_usuarioScalarFieldEnum
    having?: tbl_usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_usuarioCountAggregateInputType | true
    _avg?: Tbl_usuarioAvgAggregateInputType
    _sum?: Tbl_usuarioSumAggregateInputType
    _min?: Tbl_usuarioMinAggregateInputType
    _max?: Tbl_usuarioMaxAggregateInputType
  }

  export type Tbl_usuarioGroupByOutputType = {
    id: number
    nome: string
    email: string
    senha: string
    telefone: string | null
    data_nascimento: Date | null
    foto_perfil: string | null
    id_sexo: number
    _count: Tbl_usuarioCountAggregateOutputType | null
    _avg: Tbl_usuarioAvgAggregateOutputType | null
    _sum: Tbl_usuarioSumAggregateOutputType | null
    _min: Tbl_usuarioMinAggregateOutputType | null
    _max: Tbl_usuarioMaxAggregateOutputType | null
  }

  type GetTbl_usuarioGroupByPayload<T extends tbl_usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_usuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_usuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_usuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_usuarioGroupByOutputType[P]>
        }
      >
    >


  export type tbl_usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    data_nascimento?: boolean
    foto_perfil?: boolean
    id_sexo?: boolean
    tbl_carrinho?: boolean | tbl_usuario$tbl_carrinhoArgs<ExtArgs>
    tbl_compras?: boolean | tbl_usuario$tbl_comprasArgs<ExtArgs>
    tbl_pet?: boolean | tbl_usuario$tbl_petArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_usuario"]>

  export type tbl_usuarioSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    senha?: boolean
    telefone?: boolean
    data_nascimento?: boolean
    foto_perfil?: boolean
    id_sexo?: boolean
  }


  export type tbl_usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_carrinho?: boolean | tbl_usuario$tbl_carrinhoArgs<ExtArgs>
    tbl_compras?: boolean | tbl_usuario$tbl_comprasArgs<ExtArgs>
    tbl_pet?: boolean | tbl_usuario$tbl_petArgs<ExtArgs>
    tbl_sexo?: boolean | tbl_sexoDefaultArgs<ExtArgs>
    _count?: boolean | Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tbl_usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_usuario"
    objects: {
      tbl_carrinho: Prisma.$tbl_carrinhoPayload<ExtArgs>[]
      tbl_compras: Prisma.$tbl_comprasPayload<ExtArgs>[]
      tbl_pet: Prisma.$tbl_petPayload<ExtArgs>[]
      tbl_sexo: Prisma.$tbl_sexoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      senha: string
      telefone: string | null
      data_nascimento: Date | null
      foto_perfil: string | null
      id_sexo: number
    }, ExtArgs["result"]["tbl_usuario"]>
    composites: {}
  }


  type tbl_usuarioGetPayload<S extends boolean | null | undefined | tbl_usuarioDefaultArgs> = $Result.GetResult<Prisma.$tbl_usuarioPayload, S>

  type tbl_usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_usuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_usuarioCountAggregateInputType | true
    }

  export interface tbl_usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_usuario'], meta: { name: 'tbl_usuario' } }
    /**
     * Find zero or one Tbl_usuario that matches the filter.
     * @param {tbl_usuarioFindUniqueArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_usuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_usuarioFindUniqueOrThrowArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_usuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindFirstArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_usuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindFirstOrThrowArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_usuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuario.findMany()
     * 
     * // Get first 10 Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_usuarioWithIdOnly = await prisma.tbl_usuario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_usuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_usuario.
     * @param {tbl_usuarioCreateArgs} args - Arguments to create a Tbl_usuario.
     * @example
     * // Create one Tbl_usuario
     * const Tbl_usuario = await prisma.tbl_usuario.create({
     *   data: {
     *     // ... data to create a Tbl_usuario
     *   }
     * })
     * 
    **/
    create<T extends tbl_usuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioCreateArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_usuarios.
     * @param {tbl_usuarioCreateManyArgs} args - Arguments to create many Tbl_usuarios.
     * @example
     * // Create many Tbl_usuarios
     * const tbl_usuario = await prisma.tbl_usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_usuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_usuario.
     * @param {tbl_usuarioDeleteArgs} args - Arguments to delete one Tbl_usuario.
     * @example
     * // Delete one Tbl_usuario
     * const Tbl_usuario = await prisma.tbl_usuario.delete({
     *   where: {
     *     // ... filter to delete one Tbl_usuario
     *   }
     * })
     * 
    **/
    delete<T extends tbl_usuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioDeleteArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_usuario.
     * @param {tbl_usuarioUpdateArgs} args - Arguments to update one Tbl_usuario.
     * @example
     * // Update one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_usuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioUpdateArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_usuarios.
     * @param {tbl_usuarioDeleteManyArgs} args - Arguments to filter Tbl_usuarios to delete.
     * @example
     * // Delete a few Tbl_usuarios
     * const { count } = await prisma.tbl_usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_usuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_usuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_usuarios
     * const tbl_usuario = await prisma.tbl_usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_usuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_usuario.
     * @param {tbl_usuarioUpsertArgs} args - Arguments to update or create a Tbl_usuario.
     * @example
     * // Update or create a Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.upsert({
     *   create: {
     *     // ... data to create a Tbl_usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_usuario we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_usuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_usuarioUpsertArgs<ExtArgs>>
    ): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioCountArgs} args - Arguments to filter Tbl_usuarios to count.
     * @example
     * // Count the number of Tbl_usuarios
     * const count = await prisma.tbl_usuario.count({
     *   where: {
     *     // ... the filter for the Tbl_usuarios we want to count
     *   }
     * })
    **/
    count<T extends tbl_usuarioCountArgs>(
      args?: Subset<T, tbl_usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_usuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_usuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_usuarioAggregateArgs>(args: Subset<T, Tbl_usuarioAggregateArgs>): Prisma.PrismaPromise<GetTbl_usuarioAggregateType<T>>

    /**
     * Group by Tbl_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_usuarioGroupByArgs['orderBy'] }
        : { orderBy?: tbl_usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_usuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_usuario model
   */
  readonly fields: tbl_usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    tbl_carrinho<T extends tbl_usuario$tbl_carrinhoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuario$tbl_carrinhoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_carrinhoPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_compras<T extends tbl_usuario$tbl_comprasArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuario$tbl_comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_comprasPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_pet<T extends tbl_usuario$tbl_petArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuario$tbl_petArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_petPayload<ExtArgs>, T, 'findMany'> | Null>;

    tbl_sexo<T extends tbl_sexoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_sexoDefaultArgs<ExtArgs>>): Prisma__tbl_sexoClient<$Result.GetResult<Prisma.$tbl_sexoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_usuario model
   */ 
  interface tbl_usuarioFieldRefs {
    readonly id: FieldRef<"tbl_usuario", 'Int'>
    readonly nome: FieldRef<"tbl_usuario", 'String'>
    readonly email: FieldRef<"tbl_usuario", 'String'>
    readonly senha: FieldRef<"tbl_usuario", 'String'>
    readonly telefone: FieldRef<"tbl_usuario", 'String'>
    readonly data_nascimento: FieldRef<"tbl_usuario", 'DateTime'>
    readonly foto_perfil: FieldRef<"tbl_usuario", 'String'>
    readonly id_sexo: FieldRef<"tbl_usuario", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * tbl_usuario findUnique
   */
  export type tbl_usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario findUniqueOrThrow
   */
  export type tbl_usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario findFirst
   */
  export type tbl_usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario findFirstOrThrow
   */
  export type tbl_usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario findMany
   */
  export type tbl_usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario create
   */
  export type tbl_usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_usuario.
     */
    data: XOR<tbl_usuarioCreateInput, tbl_usuarioUncheckedCreateInput>
  }

  /**
   * tbl_usuario createMany
   */
  export type tbl_usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_usuarios.
     */
    data: tbl_usuarioCreateManyInput | tbl_usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_usuario update
   */
  export type tbl_usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_usuario.
     */
    data: XOR<tbl_usuarioUpdateInput, tbl_usuarioUncheckedUpdateInput>
    /**
     * Choose, which tbl_usuario to update.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario updateMany
   */
  export type tbl_usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_usuarios.
     */
    data: XOR<tbl_usuarioUpdateManyMutationInput, tbl_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which tbl_usuarios to update
     */
    where?: tbl_usuarioWhereInput
  }

  /**
   * tbl_usuario upsert
   */
  export type tbl_usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_usuario to update in case it exists.
     */
    where: tbl_usuarioWhereUniqueInput
    /**
     * In case the tbl_usuario found by the `where` argument doesn't exist, create a new tbl_usuario with this data.
     */
    create: XOR<tbl_usuarioCreateInput, tbl_usuarioUncheckedCreateInput>
    /**
     * In case the tbl_usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_usuarioUpdateInput, tbl_usuarioUncheckedUpdateInput>
  }

  /**
   * tbl_usuario delete
   */
  export type tbl_usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter which tbl_usuario to delete.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario deleteMany
   */
  export type tbl_usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuarios to delete
     */
    where?: tbl_usuarioWhereInput
  }

  /**
   * tbl_usuario.tbl_carrinho
   */
  export type tbl_usuario$tbl_carrinhoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_carrinho
     */
    select?: tbl_carrinhoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_carrinhoInclude<ExtArgs> | null
    where?: tbl_carrinhoWhereInput
    orderBy?: tbl_carrinhoOrderByWithRelationInput | tbl_carrinhoOrderByWithRelationInput[]
    cursor?: tbl_carrinhoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_carrinhoScalarFieldEnum | Tbl_carrinhoScalarFieldEnum[]
  }

  /**
   * tbl_usuario.tbl_compras
   */
  export type tbl_usuario$tbl_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_compras
     */
    select?: tbl_comprasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_comprasInclude<ExtArgs> | null
    where?: tbl_comprasWhereInput
    orderBy?: tbl_comprasOrderByWithRelationInput | tbl_comprasOrderByWithRelationInput[]
    cursor?: tbl_comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_comprasScalarFieldEnum | Tbl_comprasScalarFieldEnum[]
  }

  /**
   * tbl_usuario.tbl_pet
   */
  export type tbl_usuario$tbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_pet
     */
    select?: tbl_petSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_petInclude<ExtArgs> | null
    where?: tbl_petWhereInput
    orderBy?: tbl_petOrderByWithRelationInput | tbl_petOrderByWithRelationInput[]
    cursor?: tbl_petWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_petScalarFieldEnum | Tbl_petScalarFieldEnum[]
  }

  /**
   * tbl_usuario without action
   */
  export type tbl_usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_cargosScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_cargosScalarFieldEnum = (typeof Tbl_cargosScalarFieldEnum)[keyof typeof Tbl_cargosScalarFieldEnum]


  export const Tbl_carrinhoScalarFieldEnum: {
    id: 'id',
    quantidade_produtos: 'quantidade_produtos',
    valor_total: 'valor_total',
    id_produtos: 'id_produtos',
    id_cliente: 'id_cliente'
  };

  export type Tbl_carrinhoScalarFieldEnum = (typeof Tbl_carrinhoScalarFieldEnum)[keyof typeof Tbl_carrinhoScalarFieldEnum]


  export const Tbl_categorias_produtosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao'
  };

  export type Tbl_categorias_produtosScalarFieldEnum = (typeof Tbl_categorias_produtosScalarFieldEnum)[keyof typeof Tbl_categorias_produtosScalarFieldEnum]


  export const Tbl_comprasScalarFieldEnum: {
    id: 'id',
    id_cliente: 'id_cliente',
    data_compra: 'data_compra',
    valor_total: 'valor_total',
    status_compra: 'status_compra',
    endereco_entrega: 'endereco_entrega',
    metodo_pagamento: 'metodo_pagamento'
  };

  export type Tbl_comprasScalarFieldEnum = (typeof Tbl_comprasScalarFieldEnum)[keyof typeof Tbl_comprasScalarFieldEnum]


  export const Tbl_funcionariosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    telefone: 'telefone',
    foto_perfil: 'foto_perfil',
    data_nascimento: 'data_nascimento',
    id_sexo: 'id_sexo',
    id_cargo: 'id_cargo'
  };

  export type Tbl_funcionariosScalarFieldEnum = (typeof Tbl_funcionariosScalarFieldEnum)[keyof typeof Tbl_funcionariosScalarFieldEnum]


  export const Tbl_petScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    foto: 'foto',
    data_nascimento: 'data_nascimento',
    id_dono: 'id_dono',
    id_sexo: 'id_sexo',
    id_raca: 'id_raca'
  };

  export type Tbl_petScalarFieldEnum = (typeof Tbl_petScalarFieldEnum)[keyof typeof Tbl_petScalarFieldEnum]


  export const Tbl_produtosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    foto: 'foto',
    quantidade: 'quantidade',
    valor_unitario: 'valor_unitario',
    id_categoria: 'id_categoria'
  };

  export type Tbl_produtosScalarFieldEnum = (typeof Tbl_produtosScalarFieldEnum)[keyof typeof Tbl_produtosScalarFieldEnum]


  export const Tbl_servicosScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    data_realizacao: 'data_realizacao',
    hora: 'hora',
    id_funcionario: 'id_funcionario',
    id_pet: 'id_pet'
  };

  export type Tbl_servicosScalarFieldEnum = (typeof Tbl_servicosScalarFieldEnum)[keyof typeof Tbl_servicosScalarFieldEnum]


  export const Tbl_sexoScalarFieldEnum: {
    id: 'id',
    nome: 'nome'
  };

  export type Tbl_sexoScalarFieldEnum = (typeof Tbl_sexoScalarFieldEnum)[keyof typeof Tbl_sexoScalarFieldEnum]


  export const Tbl_taxonomiaScalarFieldEnum: {
    id: 'id',
    especie: 'especie',
    raca: 'raca'
  };

  export type Tbl_taxonomiaScalarFieldEnum = (typeof Tbl_taxonomiaScalarFieldEnum)[keyof typeof Tbl_taxonomiaScalarFieldEnum]


  export const Tbl_usuarioScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    telefone: 'telefone',
    data_nascimento: 'data_nascimento',
    foto_perfil: 'foto_perfil',
    id_sexo: 'id_sexo'
  };

  export type Tbl_usuarioScalarFieldEnum = (typeof Tbl_usuarioScalarFieldEnum)[keyof typeof Tbl_usuarioScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    
  /**
   * Deep Input Types
   */


  export type tbl_cargosWhereInput = {
    AND?: tbl_cargosWhereInput | tbl_cargosWhereInput[]
    OR?: tbl_cargosWhereInput[]
    NOT?: tbl_cargosWhereInput | tbl_cargosWhereInput[]
    id?: IntFilter<"tbl_cargos"> | number
    nome?: StringNullableFilter<"tbl_cargos"> | string | null
    tbl_funcionarios?: Tbl_funcionariosListRelationFilter
  }

  export type tbl_cargosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    tbl_funcionarios?: tbl_funcionariosOrderByRelationAggregateInput
  }

  export type tbl_cargosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_cargosWhereInput | tbl_cargosWhereInput[]
    OR?: tbl_cargosWhereInput[]
    NOT?: tbl_cargosWhereInput | tbl_cargosWhereInput[]
    nome?: StringNullableFilter<"tbl_cargos"> | string | null
    tbl_funcionarios?: Tbl_funcionariosListRelationFilter
  }, "id" | "id">

  export type tbl_cargosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    _count?: tbl_cargosCountOrderByAggregateInput
    _avg?: tbl_cargosAvgOrderByAggregateInput
    _max?: tbl_cargosMaxOrderByAggregateInput
    _min?: tbl_cargosMinOrderByAggregateInput
    _sum?: tbl_cargosSumOrderByAggregateInput
  }

  export type tbl_cargosScalarWhereWithAggregatesInput = {
    AND?: tbl_cargosScalarWhereWithAggregatesInput | tbl_cargosScalarWhereWithAggregatesInput[]
    OR?: tbl_cargosScalarWhereWithAggregatesInput[]
    NOT?: tbl_cargosScalarWhereWithAggregatesInput | tbl_cargosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_cargos"> | number
    nome?: StringNullableWithAggregatesFilter<"tbl_cargos"> | string | null
  }

  export type tbl_carrinhoWhereInput = {
    AND?: tbl_carrinhoWhereInput | tbl_carrinhoWhereInput[]
    OR?: tbl_carrinhoWhereInput[]
    NOT?: tbl_carrinhoWhereInput | tbl_carrinhoWhereInput[]
    id?: IntFilter<"tbl_carrinho"> | number
    quantidade_produtos?: IntFilter<"tbl_carrinho"> | number
    valor_total?: FloatFilter<"tbl_carrinho"> | number
    id_produtos?: IntNullableFilter<"tbl_carrinho"> | number | null
    id_cliente?: IntFilter<"tbl_carrinho"> | number
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }

  export type tbl_carrinhoOrderByWithRelationInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrderInput | SortOrder
    id_cliente?: SortOrder
    tbl_usuario?: tbl_usuarioOrderByWithRelationInput
  }

  export type tbl_carrinhoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_carrinhoWhereInput | tbl_carrinhoWhereInput[]
    OR?: tbl_carrinhoWhereInput[]
    NOT?: tbl_carrinhoWhereInput | tbl_carrinhoWhereInput[]
    quantidade_produtos?: IntFilter<"tbl_carrinho"> | number
    valor_total?: FloatFilter<"tbl_carrinho"> | number
    id_produtos?: IntNullableFilter<"tbl_carrinho"> | number | null
    id_cliente?: IntFilter<"tbl_carrinho"> | number
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }, "id">

  export type tbl_carrinhoOrderByWithAggregationInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrderInput | SortOrder
    id_cliente?: SortOrder
    _count?: tbl_carrinhoCountOrderByAggregateInput
    _avg?: tbl_carrinhoAvgOrderByAggregateInput
    _max?: tbl_carrinhoMaxOrderByAggregateInput
    _min?: tbl_carrinhoMinOrderByAggregateInput
    _sum?: tbl_carrinhoSumOrderByAggregateInput
  }

  export type tbl_carrinhoScalarWhereWithAggregatesInput = {
    AND?: tbl_carrinhoScalarWhereWithAggregatesInput | tbl_carrinhoScalarWhereWithAggregatesInput[]
    OR?: tbl_carrinhoScalarWhereWithAggregatesInput[]
    NOT?: tbl_carrinhoScalarWhereWithAggregatesInput | tbl_carrinhoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_carrinho"> | number
    quantidade_produtos?: IntWithAggregatesFilter<"tbl_carrinho"> | number
    valor_total?: FloatWithAggregatesFilter<"tbl_carrinho"> | number
    id_produtos?: IntNullableWithAggregatesFilter<"tbl_carrinho"> | number | null
    id_cliente?: IntWithAggregatesFilter<"tbl_carrinho"> | number
  }

  export type tbl_categorias_produtosWhereInput = {
    AND?: tbl_categorias_produtosWhereInput | tbl_categorias_produtosWhereInput[]
    OR?: tbl_categorias_produtosWhereInput[]
    NOT?: tbl_categorias_produtosWhereInput | tbl_categorias_produtosWhereInput[]
    id?: IntFilter<"tbl_categorias_produtos"> | number
    nome?: StringFilter<"tbl_categorias_produtos"> | string
    descricao?: StringNullableFilter<"tbl_categorias_produtos"> | string | null
    tbl_produtos?: Tbl_produtosListRelationFilter
  }

  export type tbl_categorias_produtosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    tbl_produtos?: tbl_produtosOrderByRelationAggregateInput
  }

  export type tbl_categorias_produtosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_categorias_produtosWhereInput | tbl_categorias_produtosWhereInput[]
    OR?: tbl_categorias_produtosWhereInput[]
    NOT?: tbl_categorias_produtosWhereInput | tbl_categorias_produtosWhereInput[]
    nome?: StringFilter<"tbl_categorias_produtos"> | string
    descricao?: StringNullableFilter<"tbl_categorias_produtos"> | string | null
    tbl_produtos?: Tbl_produtosListRelationFilter
  }, "id" | "id">

  export type tbl_categorias_produtosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    _count?: tbl_categorias_produtosCountOrderByAggregateInput
    _avg?: tbl_categorias_produtosAvgOrderByAggregateInput
    _max?: tbl_categorias_produtosMaxOrderByAggregateInput
    _min?: tbl_categorias_produtosMinOrderByAggregateInput
    _sum?: tbl_categorias_produtosSumOrderByAggregateInput
  }

  export type tbl_categorias_produtosScalarWhereWithAggregatesInput = {
    AND?: tbl_categorias_produtosScalarWhereWithAggregatesInput | tbl_categorias_produtosScalarWhereWithAggregatesInput[]
    OR?: tbl_categorias_produtosScalarWhereWithAggregatesInput[]
    NOT?: tbl_categorias_produtosScalarWhereWithAggregatesInput | tbl_categorias_produtosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_categorias_produtos"> | number
    nome?: StringWithAggregatesFilter<"tbl_categorias_produtos"> | string
    descricao?: StringNullableWithAggregatesFilter<"tbl_categorias_produtos"> | string | null
  }

  export type tbl_comprasWhereInput = {
    AND?: tbl_comprasWhereInput | tbl_comprasWhereInput[]
    OR?: tbl_comprasWhereInput[]
    NOT?: tbl_comprasWhereInput | tbl_comprasWhereInput[]
    id?: IntFilter<"tbl_compras"> | number
    id_cliente?: IntFilter<"tbl_compras"> | number
    data_compra?: DateTimeFilter<"tbl_compras"> | Date | string
    valor_total?: FloatFilter<"tbl_compras"> | number
    status_compra?: StringFilter<"tbl_compras"> | string
    endereco_entrega?: StringNullableFilter<"tbl_compras"> | string | null
    metodo_pagamento?: StringNullableFilter<"tbl_compras"> | string | null
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }

  export type tbl_comprasOrderByWithRelationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    data_compra?: SortOrder
    valor_total?: SortOrder
    status_compra?: SortOrder
    endereco_entrega?: SortOrderInput | SortOrder
    metodo_pagamento?: SortOrderInput | SortOrder
    tbl_usuario?: tbl_usuarioOrderByWithRelationInput
  }

  export type tbl_comprasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_comprasWhereInput | tbl_comprasWhereInput[]
    OR?: tbl_comprasWhereInput[]
    NOT?: tbl_comprasWhereInput | tbl_comprasWhereInput[]
    id_cliente?: IntFilter<"tbl_compras"> | number
    data_compra?: DateTimeFilter<"tbl_compras"> | Date | string
    valor_total?: FloatFilter<"tbl_compras"> | number
    status_compra?: StringFilter<"tbl_compras"> | string
    endereco_entrega?: StringNullableFilter<"tbl_compras"> | string | null
    metodo_pagamento?: StringNullableFilter<"tbl_compras"> | string | null
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }, "id">

  export type tbl_comprasOrderByWithAggregationInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    data_compra?: SortOrder
    valor_total?: SortOrder
    status_compra?: SortOrder
    endereco_entrega?: SortOrderInput | SortOrder
    metodo_pagamento?: SortOrderInput | SortOrder
    _count?: tbl_comprasCountOrderByAggregateInput
    _avg?: tbl_comprasAvgOrderByAggregateInput
    _max?: tbl_comprasMaxOrderByAggregateInput
    _min?: tbl_comprasMinOrderByAggregateInput
    _sum?: tbl_comprasSumOrderByAggregateInput
  }

  export type tbl_comprasScalarWhereWithAggregatesInput = {
    AND?: tbl_comprasScalarWhereWithAggregatesInput | tbl_comprasScalarWhereWithAggregatesInput[]
    OR?: tbl_comprasScalarWhereWithAggregatesInput[]
    NOT?: tbl_comprasScalarWhereWithAggregatesInput | tbl_comprasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_compras"> | number
    id_cliente?: IntWithAggregatesFilter<"tbl_compras"> | number
    data_compra?: DateTimeWithAggregatesFilter<"tbl_compras"> | Date | string
    valor_total?: FloatWithAggregatesFilter<"tbl_compras"> | number
    status_compra?: StringWithAggregatesFilter<"tbl_compras"> | string
    endereco_entrega?: StringNullableWithAggregatesFilter<"tbl_compras"> | string | null
    metodo_pagamento?: StringNullableWithAggregatesFilter<"tbl_compras"> | string | null
  }

  export type tbl_funcionariosWhereInput = {
    AND?: tbl_funcionariosWhereInput | tbl_funcionariosWhereInput[]
    OR?: tbl_funcionariosWhereInput[]
    NOT?: tbl_funcionariosWhereInput | tbl_funcionariosWhereInput[]
    id?: IntFilter<"tbl_funcionarios"> | number
    nome?: StringFilter<"tbl_funcionarios"> | string
    email?: StringFilter<"tbl_funcionarios"> | string
    senha?: StringFilter<"tbl_funcionarios"> | string
    telefone?: StringNullableFilter<"tbl_funcionarios"> | string | null
    foto_perfil?: StringNullableFilter<"tbl_funcionarios"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_funcionarios"> | Date | string | null
    id_sexo?: IntFilter<"tbl_funcionarios"> | number
    id_cargo?: IntFilter<"tbl_funcionarios"> | number
    tbl_cargos?: XOR<Tbl_cargosRelationFilter, tbl_cargosWhereInput>
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_servicos?: Tbl_servicosListRelationFilter
  }

  export type tbl_funcionariosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
    tbl_cargos?: tbl_cargosOrderByWithRelationInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_servicos?: tbl_servicosOrderByRelationAggregateInput
  }

  export type tbl_funcionariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_funcionariosWhereInput | tbl_funcionariosWhereInput[]
    OR?: tbl_funcionariosWhereInput[]
    NOT?: tbl_funcionariosWhereInput | tbl_funcionariosWhereInput[]
    nome?: StringFilter<"tbl_funcionarios"> | string
    email?: StringFilter<"tbl_funcionarios"> | string
    senha?: StringFilter<"tbl_funcionarios"> | string
    telefone?: StringNullableFilter<"tbl_funcionarios"> | string | null
    foto_perfil?: StringNullableFilter<"tbl_funcionarios"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_funcionarios"> | Date | string | null
    id_sexo?: IntFilter<"tbl_funcionarios"> | number
    id_cargo?: IntFilter<"tbl_funcionarios"> | number
    tbl_cargos?: XOR<Tbl_cargosRelationFilter, tbl_cargosWhereInput>
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_servicos?: Tbl_servicosListRelationFilter
  }, "id" | "id">

  export type tbl_funcionariosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
    _count?: tbl_funcionariosCountOrderByAggregateInput
    _avg?: tbl_funcionariosAvgOrderByAggregateInput
    _max?: tbl_funcionariosMaxOrderByAggregateInput
    _min?: tbl_funcionariosMinOrderByAggregateInput
    _sum?: tbl_funcionariosSumOrderByAggregateInput
  }

  export type tbl_funcionariosScalarWhereWithAggregatesInput = {
    AND?: tbl_funcionariosScalarWhereWithAggregatesInput | tbl_funcionariosScalarWhereWithAggregatesInput[]
    OR?: tbl_funcionariosScalarWhereWithAggregatesInput[]
    NOT?: tbl_funcionariosScalarWhereWithAggregatesInput | tbl_funcionariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_funcionarios"> | number
    nome?: StringWithAggregatesFilter<"tbl_funcionarios"> | string
    email?: StringWithAggregatesFilter<"tbl_funcionarios"> | string
    senha?: StringWithAggregatesFilter<"tbl_funcionarios"> | string
    telefone?: StringNullableWithAggregatesFilter<"tbl_funcionarios"> | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"tbl_funcionarios"> | string | null
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"tbl_funcionarios"> | Date | string | null
    id_sexo?: IntWithAggregatesFilter<"tbl_funcionarios"> | number
    id_cargo?: IntWithAggregatesFilter<"tbl_funcionarios"> | number
  }

  export type tbl_petWhereInput = {
    AND?: tbl_petWhereInput | tbl_petWhereInput[]
    OR?: tbl_petWhereInput[]
    NOT?: tbl_petWhereInput | tbl_petWhereInput[]
    id?: IntFilter<"tbl_pet"> | number
    nome?: StringNullableFilter<"tbl_pet"> | string | null
    foto?: StringNullableFilter<"tbl_pet"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_pet"> | Date | string | null
    id_dono?: IntFilter<"tbl_pet"> | number
    id_sexo?: IntFilter<"tbl_pet"> | number
    id_raca?: IntFilter<"tbl_pet"> | number
    tbl_taxonomia?: XOR<Tbl_taxonomiaRelationFilter, tbl_taxonomiaWhereInput>
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
    tbl_servicos?: Tbl_servicosListRelationFilter
  }

  export type tbl_petOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    foto?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
    tbl_taxonomia?: tbl_taxonomiaOrderByWithRelationInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
    tbl_usuario?: tbl_usuarioOrderByWithRelationInput
    tbl_servicos?: tbl_servicosOrderByRelationAggregateInput
  }

  export type tbl_petWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_petWhereInput | tbl_petWhereInput[]
    OR?: tbl_petWhereInput[]
    NOT?: tbl_petWhereInput | tbl_petWhereInput[]
    nome?: StringNullableFilter<"tbl_pet"> | string | null
    foto?: StringNullableFilter<"tbl_pet"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_pet"> | Date | string | null
    id_dono?: IntFilter<"tbl_pet"> | number
    id_sexo?: IntFilter<"tbl_pet"> | number
    id_raca?: IntFilter<"tbl_pet"> | number
    tbl_taxonomia?: XOR<Tbl_taxonomiaRelationFilter, tbl_taxonomiaWhereInput>
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
    tbl_servicos?: Tbl_servicosListRelationFilter
  }, "id" | "id">

  export type tbl_petOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    foto?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
    _count?: tbl_petCountOrderByAggregateInput
    _avg?: tbl_petAvgOrderByAggregateInput
    _max?: tbl_petMaxOrderByAggregateInput
    _min?: tbl_petMinOrderByAggregateInput
    _sum?: tbl_petSumOrderByAggregateInput
  }

  export type tbl_petScalarWhereWithAggregatesInput = {
    AND?: tbl_petScalarWhereWithAggregatesInput | tbl_petScalarWhereWithAggregatesInput[]
    OR?: tbl_petScalarWhereWithAggregatesInput[]
    NOT?: tbl_petScalarWhereWithAggregatesInput | tbl_petScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_pet"> | number
    nome?: StringNullableWithAggregatesFilter<"tbl_pet"> | string | null
    foto?: StringNullableWithAggregatesFilter<"tbl_pet"> | string | null
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"tbl_pet"> | Date | string | null
    id_dono?: IntWithAggregatesFilter<"tbl_pet"> | number
    id_sexo?: IntWithAggregatesFilter<"tbl_pet"> | number
    id_raca?: IntWithAggregatesFilter<"tbl_pet"> | number
  }

  export type tbl_produtosWhereInput = {
    AND?: tbl_produtosWhereInput | tbl_produtosWhereInput[]
    OR?: tbl_produtosWhereInput[]
    NOT?: tbl_produtosWhereInput | tbl_produtosWhereInput[]
    id?: IntFilter<"tbl_produtos"> | number
    nome?: StringNullableFilter<"tbl_produtos"> | string | null
    descricao?: StringNullableFilter<"tbl_produtos"> | string | null
    foto?: StringNullableFilter<"tbl_produtos"> | string | null
    quantidade?: IntFilter<"tbl_produtos"> | number
    valor_unitario?: FloatFilter<"tbl_produtos"> | number
    id_categoria?: IntFilter<"tbl_produtos"> | number
    tbl_categorias_produtos?: XOR<Tbl_categorias_produtosRelationFilter, tbl_categorias_produtosWhereInput>
  }

  export type tbl_produtosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    foto?: SortOrderInput | SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
    tbl_categorias_produtos?: tbl_categorias_produtosOrderByWithRelationInput
  }

  export type tbl_produtosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_produtosWhereInput | tbl_produtosWhereInput[]
    OR?: tbl_produtosWhereInput[]
    NOT?: tbl_produtosWhereInput | tbl_produtosWhereInput[]
    nome?: StringNullableFilter<"tbl_produtos"> | string | null
    descricao?: StringNullableFilter<"tbl_produtos"> | string | null
    foto?: StringNullableFilter<"tbl_produtos"> | string | null
    quantidade?: IntFilter<"tbl_produtos"> | number
    valor_unitario?: FloatFilter<"tbl_produtos"> | number
    id_categoria?: IntFilter<"tbl_produtos"> | number
    tbl_categorias_produtos?: XOR<Tbl_categorias_produtosRelationFilter, tbl_categorias_produtosWhereInput>
  }, "id">

  export type tbl_produtosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    foto?: SortOrderInput | SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
    _count?: tbl_produtosCountOrderByAggregateInput
    _avg?: tbl_produtosAvgOrderByAggregateInput
    _max?: tbl_produtosMaxOrderByAggregateInput
    _min?: tbl_produtosMinOrderByAggregateInput
    _sum?: tbl_produtosSumOrderByAggregateInput
  }

  export type tbl_produtosScalarWhereWithAggregatesInput = {
    AND?: tbl_produtosScalarWhereWithAggregatesInput | tbl_produtosScalarWhereWithAggregatesInput[]
    OR?: tbl_produtosScalarWhereWithAggregatesInput[]
    NOT?: tbl_produtosScalarWhereWithAggregatesInput | tbl_produtosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_produtos"> | number
    nome?: StringNullableWithAggregatesFilter<"tbl_produtos"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"tbl_produtos"> | string | null
    foto?: StringNullableWithAggregatesFilter<"tbl_produtos"> | string | null
    quantidade?: IntWithAggregatesFilter<"tbl_produtos"> | number
    valor_unitario?: FloatWithAggregatesFilter<"tbl_produtos"> | number
    id_categoria?: IntWithAggregatesFilter<"tbl_produtos"> | number
  }

  export type tbl_servicosWhereInput = {
    AND?: tbl_servicosWhereInput | tbl_servicosWhereInput[]
    OR?: tbl_servicosWhereInput[]
    NOT?: tbl_servicosWhereInput | tbl_servicosWhereInput[]
    id?: IntFilter<"tbl_servicos"> | number
    nome?: StringFilter<"tbl_servicos"> | string
    descricao?: StringNullableFilter<"tbl_servicos"> | string | null
    data_realizacao?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    hora?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    id_funcionario?: IntFilter<"tbl_servicos"> | number
    id_pet?: IntFilter<"tbl_servicos"> | number
    tbl_funcionarios?: XOR<Tbl_funcionariosRelationFilter, tbl_funcionariosWhereInput>
    tbl_pet?: XOR<Tbl_petRelationFilter, tbl_petWhereInput>
  }

  export type tbl_servicosOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    data_realizacao?: SortOrderInput | SortOrder
    hora?: SortOrderInput | SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
    tbl_funcionarios?: tbl_funcionariosOrderByWithRelationInput
    tbl_pet?: tbl_petOrderByWithRelationInput
  }

  export type tbl_servicosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_servicosWhereInput | tbl_servicosWhereInput[]
    OR?: tbl_servicosWhereInput[]
    NOT?: tbl_servicosWhereInput | tbl_servicosWhereInput[]
    nome?: StringFilter<"tbl_servicos"> | string
    descricao?: StringNullableFilter<"tbl_servicos"> | string | null
    data_realizacao?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    hora?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    id_funcionario?: IntFilter<"tbl_servicos"> | number
    id_pet?: IntFilter<"tbl_servicos"> | number
    tbl_funcionarios?: XOR<Tbl_funcionariosRelationFilter, tbl_funcionariosWhereInput>
    tbl_pet?: XOR<Tbl_petRelationFilter, tbl_petWhereInput>
  }, "id" | "id">

  export type tbl_servicosOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    data_realizacao?: SortOrderInput | SortOrder
    hora?: SortOrderInput | SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
    _count?: tbl_servicosCountOrderByAggregateInput
    _avg?: tbl_servicosAvgOrderByAggregateInput
    _max?: tbl_servicosMaxOrderByAggregateInput
    _min?: tbl_servicosMinOrderByAggregateInput
    _sum?: tbl_servicosSumOrderByAggregateInput
  }

  export type tbl_servicosScalarWhereWithAggregatesInput = {
    AND?: tbl_servicosScalarWhereWithAggregatesInput | tbl_servicosScalarWhereWithAggregatesInput[]
    OR?: tbl_servicosScalarWhereWithAggregatesInput[]
    NOT?: tbl_servicosScalarWhereWithAggregatesInput | tbl_servicosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_servicos"> | number
    nome?: StringWithAggregatesFilter<"tbl_servicos"> | string
    descricao?: StringNullableWithAggregatesFilter<"tbl_servicos"> | string | null
    data_realizacao?: DateTimeNullableWithAggregatesFilter<"tbl_servicos"> | Date | string | null
    hora?: DateTimeNullableWithAggregatesFilter<"tbl_servicos"> | Date | string | null
    id_funcionario?: IntWithAggregatesFilter<"tbl_servicos"> | number
    id_pet?: IntWithAggregatesFilter<"tbl_servicos"> | number
  }

  export type tbl_sexoWhereInput = {
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    id?: IntFilter<"tbl_sexo"> | number
    nome?: StringNullableFilter<"tbl_sexo"> | string | null
    tbl_funcionarios?: Tbl_funcionariosListRelationFilter
    tbl_pet?: Tbl_petListRelationFilter
    tbl_usuario?: Tbl_usuarioListRelationFilter
  }

  export type tbl_sexoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    tbl_funcionarios?: tbl_funcionariosOrderByRelationAggregateInput
    tbl_pet?: tbl_petOrderByRelationAggregateInput
    tbl_usuario?: tbl_usuarioOrderByRelationAggregateInput
  }

  export type tbl_sexoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    OR?: tbl_sexoWhereInput[]
    NOT?: tbl_sexoWhereInput | tbl_sexoWhereInput[]
    nome?: StringNullableFilter<"tbl_sexo"> | string | null
    tbl_funcionarios?: Tbl_funcionariosListRelationFilter
    tbl_pet?: Tbl_petListRelationFilter
    tbl_usuario?: Tbl_usuarioListRelationFilter
  }, "id" | "id">

  export type tbl_sexoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    _count?: tbl_sexoCountOrderByAggregateInput
    _avg?: tbl_sexoAvgOrderByAggregateInput
    _max?: tbl_sexoMaxOrderByAggregateInput
    _min?: tbl_sexoMinOrderByAggregateInput
    _sum?: tbl_sexoSumOrderByAggregateInput
  }

  export type tbl_sexoScalarWhereWithAggregatesInput = {
    AND?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    OR?: tbl_sexoScalarWhereWithAggregatesInput[]
    NOT?: tbl_sexoScalarWhereWithAggregatesInput | tbl_sexoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_sexo"> | number
    nome?: StringNullableWithAggregatesFilter<"tbl_sexo"> | string | null
  }

  export type tbl_taxonomiaWhereInput = {
    AND?: tbl_taxonomiaWhereInput | tbl_taxonomiaWhereInput[]
    OR?: tbl_taxonomiaWhereInput[]
    NOT?: tbl_taxonomiaWhereInput | tbl_taxonomiaWhereInput[]
    id?: IntFilter<"tbl_taxonomia"> | number
    especie?: StringFilter<"tbl_taxonomia"> | string
    raca?: StringFilter<"tbl_taxonomia"> | string
    tbl_pet?: Tbl_petListRelationFilter
  }

  export type tbl_taxonomiaOrderByWithRelationInput = {
    id?: SortOrder
    especie?: SortOrder
    raca?: SortOrder
    tbl_pet?: tbl_petOrderByRelationAggregateInput
  }

  export type tbl_taxonomiaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_taxonomiaWhereInput | tbl_taxonomiaWhereInput[]
    OR?: tbl_taxonomiaWhereInput[]
    NOT?: tbl_taxonomiaWhereInput | tbl_taxonomiaWhereInput[]
    especie?: StringFilter<"tbl_taxonomia"> | string
    raca?: StringFilter<"tbl_taxonomia"> | string
    tbl_pet?: Tbl_petListRelationFilter
  }, "id" | "id">

  export type tbl_taxonomiaOrderByWithAggregationInput = {
    id?: SortOrder
    especie?: SortOrder
    raca?: SortOrder
    _count?: tbl_taxonomiaCountOrderByAggregateInput
    _avg?: tbl_taxonomiaAvgOrderByAggregateInput
    _max?: tbl_taxonomiaMaxOrderByAggregateInput
    _min?: tbl_taxonomiaMinOrderByAggregateInput
    _sum?: tbl_taxonomiaSumOrderByAggregateInput
  }

  export type tbl_taxonomiaScalarWhereWithAggregatesInput = {
    AND?: tbl_taxonomiaScalarWhereWithAggregatesInput | tbl_taxonomiaScalarWhereWithAggregatesInput[]
    OR?: tbl_taxonomiaScalarWhereWithAggregatesInput[]
    NOT?: tbl_taxonomiaScalarWhereWithAggregatesInput | tbl_taxonomiaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_taxonomia"> | number
    especie?: StringWithAggregatesFilter<"tbl_taxonomia"> | string
    raca?: StringWithAggregatesFilter<"tbl_taxonomia"> | string
  }

  export type tbl_usuarioWhereInput = {
    AND?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    OR?: tbl_usuarioWhereInput[]
    NOT?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    id?: IntFilter<"tbl_usuario"> | number
    nome?: StringFilter<"tbl_usuario"> | string
    email?: StringFilter<"tbl_usuario"> | string
    senha?: StringFilter<"tbl_usuario"> | string
    telefone?: StringNullableFilter<"tbl_usuario"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_usuario"> | Date | string | null
    foto_perfil?: StringNullableFilter<"tbl_usuario"> | string | null
    id_sexo?: IntFilter<"tbl_usuario"> | number
    tbl_carrinho?: Tbl_carrinhoListRelationFilter
    tbl_compras?: Tbl_comprasListRelationFilter
    tbl_pet?: Tbl_petListRelationFilter
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
  }

  export type tbl_usuarioOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    tbl_carrinho?: tbl_carrinhoOrderByRelationAggregateInput
    tbl_compras?: tbl_comprasOrderByRelationAggregateInput
    tbl_pet?: tbl_petOrderByRelationAggregateInput
    tbl_sexo?: tbl_sexoOrderByWithRelationInput
  }

  export type tbl_usuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    OR?: tbl_usuarioWhereInput[]
    NOT?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    nome?: StringFilter<"tbl_usuario"> | string
    email?: StringFilter<"tbl_usuario"> | string
    senha?: StringFilter<"tbl_usuario"> | string
    telefone?: StringNullableFilter<"tbl_usuario"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_usuario"> | Date | string | null
    foto_perfil?: StringNullableFilter<"tbl_usuario"> | string | null
    id_sexo?: IntFilter<"tbl_usuario"> | number
    tbl_carrinho?: Tbl_carrinhoListRelationFilter
    tbl_compras?: Tbl_comprasListRelationFilter
    tbl_pet?: Tbl_petListRelationFilter
    tbl_sexo?: XOR<Tbl_sexoRelationFilter, tbl_sexoWhereInput>
  }, "id" | "id">

  export type tbl_usuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrderInput | SortOrder
    data_nascimento?: SortOrderInput | SortOrder
    foto_perfil?: SortOrderInput | SortOrder
    id_sexo?: SortOrder
    _count?: tbl_usuarioCountOrderByAggregateInput
    _avg?: tbl_usuarioAvgOrderByAggregateInput
    _max?: tbl_usuarioMaxOrderByAggregateInput
    _min?: tbl_usuarioMinOrderByAggregateInput
    _sum?: tbl_usuarioSumOrderByAggregateInput
  }

  export type tbl_usuarioScalarWhereWithAggregatesInput = {
    AND?: tbl_usuarioScalarWhereWithAggregatesInput | tbl_usuarioScalarWhereWithAggregatesInput[]
    OR?: tbl_usuarioScalarWhereWithAggregatesInput[]
    NOT?: tbl_usuarioScalarWhereWithAggregatesInput | tbl_usuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_usuario"> | number
    nome?: StringWithAggregatesFilter<"tbl_usuario"> | string
    email?: StringWithAggregatesFilter<"tbl_usuario"> | string
    senha?: StringWithAggregatesFilter<"tbl_usuario"> | string
    telefone?: StringNullableWithAggregatesFilter<"tbl_usuario"> | string | null
    data_nascimento?: DateTimeNullableWithAggregatesFilter<"tbl_usuario"> | Date | string | null
    foto_perfil?: StringNullableWithAggregatesFilter<"tbl_usuario"> | string | null
    id_sexo?: IntWithAggregatesFilter<"tbl_usuario"> | number
  }

  export type tbl_cargosCreateInput = {
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosCreateNestedManyWithoutTbl_cargosInput
  }

  export type tbl_cargosUncheckedCreateInput = {
    id?: number
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_cargosInput
  }

  export type tbl_cargosUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateManyWithoutTbl_cargosNestedInput
  }

  export type tbl_cargosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedUpdateManyWithoutTbl_cargosNestedInput
  }

  export type tbl_cargosCreateManyInput = {
    id?: number
    nome?: string | null
  }

  export type tbl_cargosUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_cargosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_carrinhoCreateInput = {
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_carrinhoInput
  }

  export type tbl_carrinhoUncheckedCreateInput = {
    id?: number
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
    id_cliente: number
  }

  export type tbl_carrinhoUpdateInput = {
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_carrinhoNestedInput
  }

  export type tbl_carrinhoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
    id_cliente?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_carrinhoCreateManyInput = {
    id?: number
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
    id_cliente: number
  }

  export type tbl_carrinhoUpdateManyMutationInput = {
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_carrinhoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
    id_cliente?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_categorias_produtosCreateInput = {
    nome: string
    descricao?: string | null
    tbl_produtos?: tbl_produtosCreateNestedManyWithoutTbl_categorias_produtosInput
  }

  export type tbl_categorias_produtosUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    tbl_produtos?: tbl_produtosUncheckedCreateNestedManyWithoutTbl_categorias_produtosInput
  }

  export type tbl_categorias_produtosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_produtos?: tbl_produtosUpdateManyWithoutTbl_categorias_produtosNestedInput
  }

  export type tbl_categorias_produtosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_produtos?: tbl_produtosUncheckedUpdateManyWithoutTbl_categorias_produtosNestedInput
  }

  export type tbl_categorias_produtosCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
  }

  export type tbl_categorias_produtosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_categorias_produtosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_comprasCreateInput = {
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_comprasInput
  }

  export type tbl_comprasUncheckedCreateInput = {
    id?: number
    id_cliente: number
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
  }

  export type tbl_comprasUpdateInput = {
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_comprasNestedInput
  }

  export type tbl_comprasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_comprasCreateManyInput = {
    id?: number
    id_cliente: number
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
  }

  export type tbl_comprasUpdateManyMutationInput = {
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_comprasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_cliente?: IntFieldUpdateOperationsInput | number
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_funcionariosCreateInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    tbl_cargos: tbl_cargosCreateNestedOneWithoutTbl_funcionariosInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_funcionariosInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    id_cargo: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_cargos?: tbl_cargosUpdateOneRequiredWithoutTbl_funcionariosNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_funcionariosNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    id_cargo: number
  }

  export type tbl_funcionariosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbl_funcionariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_petCreateInput = {
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    tbl_taxonomia: tbl_taxonomiaCreateNestedOneWithoutTbl_petInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_petInput
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_petInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petUncheckedCreateInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_sexo: number
    id_raca: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_taxonomia?: tbl_taxonomiaUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petCreateManyInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_sexo: number
    id_raca: number
  }

  export type tbl_petUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbl_petUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_produtosCreateInput = {
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
    tbl_categorias_produtos: tbl_categorias_produtosCreateNestedOneWithoutTbl_produtosInput
  }

  export type tbl_produtosUncheckedCreateInput = {
    id?: number
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
    id_categoria: number
  }

  export type tbl_produtosUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
    tbl_categorias_produtos?: tbl_categorias_produtosUpdateOneRequiredWithoutTbl_produtosNestedInput
  }

  export type tbl_produtosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_produtosCreateManyInput = {
    id?: number
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
    id_categoria: number
  }

  export type tbl_produtosUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type tbl_produtosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
    id_categoria?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_servicosCreateInput = {
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    tbl_funcionarios: tbl_funcionariosCreateNestedOneWithoutTbl_servicosInput
    tbl_pet: tbl_petCreateNestedOneWithoutTbl_servicosInput
  }

  export type tbl_servicosUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_funcionario: number
    id_pet: number
  }

  export type tbl_servicosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateOneRequiredWithoutTbl_servicosNestedInput
    tbl_pet?: tbl_petUpdateOneRequiredWithoutTbl_servicosNestedInput
  }

  export type tbl_servicosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_funcionario?: IntFieldUpdateOperationsInput | number
    id_pet?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_servicosCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_funcionario: number
    id_pet: number
  }

  export type tbl_servicosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tbl_servicosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_funcionario?: IntFieldUpdateOperationsInput | number
    id_pet?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_sexoCreateInput = {
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosCreateNestedManyWithoutTbl_sexoInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateInput = {
    id?: number
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateManyWithoutTbl_sexoNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoCreateManyInput = {
    id?: number
    nome?: string | null
  }

  export type tbl_sexoUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_sexoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_taxonomiaCreateInput = {
    especie: string
    raca: string
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_taxonomiaInput
  }

  export type tbl_taxonomiaUncheckedCreateInput = {
    id?: number
    especie: string
    raca: string
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_taxonomiaInput
  }

  export type tbl_taxonomiaUpdateInput = {
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
    tbl_pet?: tbl_petUpdateManyWithoutTbl_taxonomiaNestedInput
  }

  export type tbl_taxonomiaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_taxonomiaNestedInput
  }

  export type tbl_taxonomiaCreateManyInput = {
    id?: number
    especie: string
    raca: string
  }

  export type tbl_taxonomiaUpdateManyMutationInput = {
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_taxonomiaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_usuarioCreateInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_carrinho?: tbl_carrinhoCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_usuarioInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    id_sexo: number
    tbl_carrinho?: tbl_carrinhoUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_carrinho?: tbl_carrinhoUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_usuarioNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_carrinho?: tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioCreateManyInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    id_sexo: number
  }

  export type tbl_usuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_usuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Tbl_funcionariosListRelationFilter = {
    every?: tbl_funcionariosWhereInput
    some?: tbl_funcionariosWhereInput
    none?: tbl_funcionariosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_funcionariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_cargosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cargosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_cargosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cargosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_cargosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Tbl_usuarioRelationFilter = {
    is?: tbl_usuarioWhereInput
    isNot?: tbl_usuarioWhereInput
  }

  export type tbl_carrinhoCountOrderByAggregateInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrder
    id_cliente?: SortOrder
  }

  export type tbl_carrinhoAvgOrderByAggregateInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrder
    id_cliente?: SortOrder
  }

  export type tbl_carrinhoMaxOrderByAggregateInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrder
    id_cliente?: SortOrder
  }

  export type tbl_carrinhoMinOrderByAggregateInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrder
    id_cliente?: SortOrder
  }

  export type tbl_carrinhoSumOrderByAggregateInput = {
    id?: SortOrder
    quantidade_produtos?: SortOrder
    valor_total?: SortOrder
    id_produtos?: SortOrder
    id_cliente?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Tbl_produtosListRelationFilter = {
    every?: tbl_produtosWhereInput
    some?: tbl_produtosWhereInput
    none?: tbl_produtosWhereInput
  }

  export type tbl_produtosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_categorias_produtosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_categorias_produtosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_categorias_produtosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_categorias_produtosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
  }

  export type tbl_categorias_produtosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type tbl_comprasCountOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    data_compra?: SortOrder
    valor_total?: SortOrder
    status_compra?: SortOrder
    endereco_entrega?: SortOrder
    metodo_pagamento?: SortOrder
  }

  export type tbl_comprasAvgOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    valor_total?: SortOrder
  }

  export type tbl_comprasMaxOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    data_compra?: SortOrder
    valor_total?: SortOrder
    status_compra?: SortOrder
    endereco_entrega?: SortOrder
    metodo_pagamento?: SortOrder
  }

  export type tbl_comprasMinOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    data_compra?: SortOrder
    valor_total?: SortOrder
    status_compra?: SortOrder
    endereco_entrega?: SortOrder
    metodo_pagamento?: SortOrder
  }

  export type tbl_comprasSumOrderByAggregateInput = {
    id?: SortOrder
    id_cliente?: SortOrder
    valor_total?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Tbl_cargosRelationFilter = {
    is?: tbl_cargosWhereInput
    isNot?: tbl_cargosWhereInput
  }

  export type Tbl_sexoRelationFilter = {
    is?: tbl_sexoWhereInput
    isNot?: tbl_sexoWhereInput
  }

  export type Tbl_servicosListRelationFilter = {
    every?: tbl_servicosWhereInput
    some?: tbl_servicosWhereInput
    none?: tbl_servicosWhereInput
  }

  export type tbl_servicosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_funcionariosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
    data_nascimento?: SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
  }

  export type tbl_funcionariosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
  }

  export type tbl_funcionariosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
    data_nascimento?: SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
  }

  export type tbl_funcionariosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    foto_perfil?: SortOrder
    data_nascimento?: SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
  }

  export type tbl_funcionariosSumOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
    id_cargo?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Tbl_taxonomiaRelationFilter = {
    is?: tbl_taxonomiaWhereInput
    isNot?: tbl_taxonomiaWhereInput
  }

  export type tbl_petCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto?: SortOrder
    data_nascimento?: SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
  }

  export type tbl_petAvgOrderByAggregateInput = {
    id?: SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
  }

  export type tbl_petMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto?: SortOrder
    data_nascimento?: SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
  }

  export type tbl_petMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    foto?: SortOrder
    data_nascimento?: SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
  }

  export type tbl_petSumOrderByAggregateInput = {
    id?: SortOrder
    id_dono?: SortOrder
    id_sexo?: SortOrder
    id_raca?: SortOrder
  }

  export type Tbl_categorias_produtosRelationFilter = {
    is?: tbl_categorias_produtosWhereInput
    isNot?: tbl_categorias_produtosWhereInput
  }

  export type tbl_produtosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    foto?: SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
  }

  export type tbl_produtosAvgOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
  }

  export type tbl_produtosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    foto?: SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
  }

  export type tbl_produtosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    foto?: SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
  }

  export type tbl_produtosSumOrderByAggregateInput = {
    id?: SortOrder
    quantidade?: SortOrder
    valor_unitario?: SortOrder
    id_categoria?: SortOrder
  }

  export type Tbl_funcionariosRelationFilter = {
    is?: tbl_funcionariosWhereInput
    isNot?: tbl_funcionariosWhereInput
  }

  export type Tbl_petRelationFilter = {
    is?: tbl_petWhereInput
    isNot?: tbl_petWhereInput
  }

  export type tbl_servicosCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    data_realizacao?: SortOrder
    hora?: SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
  }

  export type tbl_servicosAvgOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
  }

  export type tbl_servicosMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    data_realizacao?: SortOrder
    hora?: SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
  }

  export type tbl_servicosMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    data_realizacao?: SortOrder
    hora?: SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
  }

  export type tbl_servicosSumOrderByAggregateInput = {
    id?: SortOrder
    id_funcionario?: SortOrder
    id_pet?: SortOrder
  }

  export type Tbl_petListRelationFilter = {
    every?: tbl_petWhereInput
    some?: tbl_petWhereInput
    none?: tbl_petWhereInput
  }

  export type Tbl_usuarioListRelationFilter = {
    every?: tbl_usuarioWhereInput
    some?: tbl_usuarioWhereInput
    none?: tbl_usuarioWhereInput
  }

  export type tbl_petOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_usuarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_sexoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_sexoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_sexoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_sexoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
  }

  export type tbl_sexoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_taxonomiaCountOrderByAggregateInput = {
    id?: SortOrder
    especie?: SortOrder
    raca?: SortOrder
  }

  export type tbl_taxonomiaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_taxonomiaMaxOrderByAggregateInput = {
    id?: SortOrder
    especie?: SortOrder
    raca?: SortOrder
  }

  export type tbl_taxonomiaMinOrderByAggregateInput = {
    id?: SortOrder
    especie?: SortOrder
    raca?: SortOrder
  }

  export type tbl_taxonomiaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Tbl_carrinhoListRelationFilter = {
    every?: tbl_carrinhoWhereInput
    some?: tbl_carrinhoWhereInput
    none?: tbl_carrinhoWhereInput
  }

  export type Tbl_comprasListRelationFilter = {
    every?: tbl_comprasWhereInput
    some?: tbl_comprasWhereInput
    none?: tbl_comprasWhereInput
  }

  export type tbl_carrinhoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_comprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_usuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    foto_perfil?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_usuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_usuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    foto_perfil?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_usuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    telefone?: SortOrder
    data_nascimento?: SortOrder
    foto_perfil?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_usuarioSumOrderByAggregateInput = {
    id?: SortOrder
    id_sexo?: SortOrder
  }

  export type tbl_funcionariosCreateNestedManyWithoutTbl_cargosInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput> | tbl_funcionariosCreateWithoutTbl_cargosInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput | tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput[]
    createMany?: tbl_funcionariosCreateManyTbl_cargosInputEnvelope
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
  }

  export type tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_cargosInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput> | tbl_funcionariosCreateWithoutTbl_cargosInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput | tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput[]
    createMany?: tbl_funcionariosCreateManyTbl_cargosInputEnvelope
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type tbl_funcionariosUpdateManyWithoutTbl_cargosNestedInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput> | tbl_funcionariosCreateWithoutTbl_cargosInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput | tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput[]
    upsert?: tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_cargosInput | tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_cargosInput[]
    createMany?: tbl_funcionariosCreateManyTbl_cargosInputEnvelope
    set?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    disconnect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    delete?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    update?: tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_cargosInput | tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_cargosInput[]
    updateMany?: tbl_funcionariosUpdateManyWithWhereWithoutTbl_cargosInput | tbl_funcionariosUpdateManyWithWhereWithoutTbl_cargosInput[]
    deleteMany?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_funcionariosUncheckedUpdateManyWithoutTbl_cargosNestedInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput> | tbl_funcionariosCreateWithoutTbl_cargosInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput | tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput[]
    upsert?: tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_cargosInput | tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_cargosInput[]
    createMany?: tbl_funcionariosCreateManyTbl_cargosInputEnvelope
    set?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    disconnect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    delete?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    update?: tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_cargosInput | tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_cargosInput[]
    updateMany?: tbl_funcionariosUpdateManyWithWhereWithoutTbl_cargosInput | tbl_funcionariosUpdateManyWithWhereWithoutTbl_cargosInput[]
    deleteMany?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
  }

  export type tbl_usuarioCreateNestedOneWithoutTbl_carrinhoInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedCreateWithoutTbl_carrinhoInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_carrinhoInput
    connect?: tbl_usuarioWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type tbl_usuarioUpdateOneRequiredWithoutTbl_carrinhoNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedCreateWithoutTbl_carrinhoInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_carrinhoInput
    upsert?: tbl_usuarioUpsertWithoutTbl_carrinhoInput
    connect?: tbl_usuarioWhereUniqueInput
    update?: XOR<XOR<tbl_usuarioUpdateToOneWithWhereWithoutTbl_carrinhoInput, tbl_usuarioUpdateWithoutTbl_carrinhoInput>, tbl_usuarioUncheckedUpdateWithoutTbl_carrinhoInput>
  }

  export type tbl_produtosCreateNestedManyWithoutTbl_categorias_produtosInput = {
    create?: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput> | tbl_produtosCreateWithoutTbl_categorias_produtosInput[] | tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput[]
    connectOrCreate?: tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput | tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput[]
    createMany?: tbl_produtosCreateManyTbl_categorias_produtosInputEnvelope
    connect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
  }

  export type tbl_produtosUncheckedCreateNestedManyWithoutTbl_categorias_produtosInput = {
    create?: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput> | tbl_produtosCreateWithoutTbl_categorias_produtosInput[] | tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput[]
    connectOrCreate?: tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput | tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput[]
    createMany?: tbl_produtosCreateManyTbl_categorias_produtosInputEnvelope
    connect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type tbl_produtosUpdateManyWithoutTbl_categorias_produtosNestedInput = {
    create?: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput> | tbl_produtosCreateWithoutTbl_categorias_produtosInput[] | tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput[]
    connectOrCreate?: tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput | tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput[]
    upsert?: tbl_produtosUpsertWithWhereUniqueWithoutTbl_categorias_produtosInput | tbl_produtosUpsertWithWhereUniqueWithoutTbl_categorias_produtosInput[]
    createMany?: tbl_produtosCreateManyTbl_categorias_produtosInputEnvelope
    set?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    disconnect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    delete?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    connect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    update?: tbl_produtosUpdateWithWhereUniqueWithoutTbl_categorias_produtosInput | tbl_produtosUpdateWithWhereUniqueWithoutTbl_categorias_produtosInput[]
    updateMany?: tbl_produtosUpdateManyWithWhereWithoutTbl_categorias_produtosInput | tbl_produtosUpdateManyWithWhereWithoutTbl_categorias_produtosInput[]
    deleteMany?: tbl_produtosScalarWhereInput | tbl_produtosScalarWhereInput[]
  }

  export type tbl_produtosUncheckedUpdateManyWithoutTbl_categorias_produtosNestedInput = {
    create?: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput> | tbl_produtosCreateWithoutTbl_categorias_produtosInput[] | tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput[]
    connectOrCreate?: tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput | tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput[]
    upsert?: tbl_produtosUpsertWithWhereUniqueWithoutTbl_categorias_produtosInput | tbl_produtosUpsertWithWhereUniqueWithoutTbl_categorias_produtosInput[]
    createMany?: tbl_produtosCreateManyTbl_categorias_produtosInputEnvelope
    set?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    disconnect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    delete?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    connect?: tbl_produtosWhereUniqueInput | tbl_produtosWhereUniqueInput[]
    update?: tbl_produtosUpdateWithWhereUniqueWithoutTbl_categorias_produtosInput | tbl_produtosUpdateWithWhereUniqueWithoutTbl_categorias_produtosInput[]
    updateMany?: tbl_produtosUpdateManyWithWhereWithoutTbl_categorias_produtosInput | tbl_produtosUpdateManyWithWhereWithoutTbl_categorias_produtosInput[]
    deleteMany?: tbl_produtosScalarWhereInput | tbl_produtosScalarWhereInput[]
  }

  export type tbl_usuarioCreateNestedOneWithoutTbl_comprasInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_comprasInput, tbl_usuarioUncheckedCreateWithoutTbl_comprasInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_comprasInput
    connect?: tbl_usuarioWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type tbl_usuarioUpdateOneRequiredWithoutTbl_comprasNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_comprasInput, tbl_usuarioUncheckedCreateWithoutTbl_comprasInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_comprasInput
    upsert?: tbl_usuarioUpsertWithoutTbl_comprasInput
    connect?: tbl_usuarioWhereUniqueInput
    update?: XOR<XOR<tbl_usuarioUpdateToOneWithWhereWithoutTbl_comprasInput, tbl_usuarioUpdateWithoutTbl_comprasInput>, tbl_usuarioUncheckedUpdateWithoutTbl_comprasInput>
  }

  export type tbl_cargosCreateNestedOneWithoutTbl_funcionariosInput = {
    create?: XOR<tbl_cargosCreateWithoutTbl_funcionariosInput, tbl_cargosUncheckedCreateWithoutTbl_funcionariosInput>
    connectOrCreate?: tbl_cargosCreateOrConnectWithoutTbl_funcionariosInput
    connect?: tbl_cargosWhereUniqueInput
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_funcionariosInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_funcionariosInput, tbl_sexoUncheckedCreateWithoutTbl_funcionariosInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_funcionariosInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_servicosCreateNestedManyWithoutTbl_funcionariosInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput> | tbl_servicosCreateWithoutTbl_funcionariosInput[] | tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput | tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput[]
    createMany?: tbl_servicosCreateManyTbl_funcionariosInputEnvelope
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
  }

  export type tbl_servicosUncheckedCreateNestedManyWithoutTbl_funcionariosInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput> | tbl_servicosCreateWithoutTbl_funcionariosInput[] | tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput | tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput[]
    createMany?: tbl_servicosCreateManyTbl_funcionariosInputEnvelope
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type tbl_cargosUpdateOneRequiredWithoutTbl_funcionariosNestedInput = {
    create?: XOR<tbl_cargosCreateWithoutTbl_funcionariosInput, tbl_cargosUncheckedCreateWithoutTbl_funcionariosInput>
    connectOrCreate?: tbl_cargosCreateOrConnectWithoutTbl_funcionariosInput
    upsert?: tbl_cargosUpsertWithoutTbl_funcionariosInput
    connect?: tbl_cargosWhereUniqueInput
    update?: XOR<XOR<tbl_cargosUpdateToOneWithWhereWithoutTbl_funcionariosInput, tbl_cargosUpdateWithoutTbl_funcionariosInput>, tbl_cargosUncheckedUpdateWithoutTbl_funcionariosInput>
  }

  export type tbl_sexoUpdateOneRequiredWithoutTbl_funcionariosNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_funcionariosInput, tbl_sexoUncheckedCreateWithoutTbl_funcionariosInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_funcionariosInput
    upsert?: tbl_sexoUpsertWithoutTbl_funcionariosInput
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_funcionariosInput, tbl_sexoUpdateWithoutTbl_funcionariosInput>, tbl_sexoUncheckedUpdateWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosUpdateManyWithoutTbl_funcionariosNestedInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput> | tbl_servicosCreateWithoutTbl_funcionariosInput[] | tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput | tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput[]
    upsert?: tbl_servicosUpsertWithWhereUniqueWithoutTbl_funcionariosInput | tbl_servicosUpsertWithWhereUniqueWithoutTbl_funcionariosInput[]
    createMany?: tbl_servicosCreateManyTbl_funcionariosInputEnvelope
    set?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    disconnect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    delete?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    update?: tbl_servicosUpdateWithWhereUniqueWithoutTbl_funcionariosInput | tbl_servicosUpdateWithWhereUniqueWithoutTbl_funcionariosInput[]
    updateMany?: tbl_servicosUpdateManyWithWhereWithoutTbl_funcionariosInput | tbl_servicosUpdateManyWithWhereWithoutTbl_funcionariosInput[]
    deleteMany?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
  }

  export type tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosNestedInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput> | tbl_servicosCreateWithoutTbl_funcionariosInput[] | tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput | tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput[]
    upsert?: tbl_servicosUpsertWithWhereUniqueWithoutTbl_funcionariosInput | tbl_servicosUpsertWithWhereUniqueWithoutTbl_funcionariosInput[]
    createMany?: tbl_servicosCreateManyTbl_funcionariosInputEnvelope
    set?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    disconnect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    delete?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    update?: tbl_servicosUpdateWithWhereUniqueWithoutTbl_funcionariosInput | tbl_servicosUpdateWithWhereUniqueWithoutTbl_funcionariosInput[]
    updateMany?: tbl_servicosUpdateManyWithWhereWithoutTbl_funcionariosInput | tbl_servicosUpdateManyWithWhereWithoutTbl_funcionariosInput[]
    deleteMany?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
  }

  export type tbl_taxonomiaCreateNestedOneWithoutTbl_petInput = {
    create?: XOR<tbl_taxonomiaCreateWithoutTbl_petInput, tbl_taxonomiaUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_taxonomiaCreateOrConnectWithoutTbl_petInput
    connect?: tbl_taxonomiaWhereUniqueInput
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_petInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_petInput, tbl_sexoUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_petInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_usuarioCreateNestedOneWithoutTbl_petInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_petInput, tbl_usuarioUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_petInput
    connect?: tbl_usuarioWhereUniqueInput
  }

  export type tbl_servicosCreateNestedManyWithoutTbl_petInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput> | tbl_servicosCreateWithoutTbl_petInput[] | tbl_servicosUncheckedCreateWithoutTbl_petInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_petInput | tbl_servicosCreateOrConnectWithoutTbl_petInput[]
    createMany?: tbl_servicosCreateManyTbl_petInputEnvelope
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
  }

  export type tbl_servicosUncheckedCreateNestedManyWithoutTbl_petInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput> | tbl_servicosCreateWithoutTbl_petInput[] | tbl_servicosUncheckedCreateWithoutTbl_petInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_petInput | tbl_servicosCreateOrConnectWithoutTbl_petInput[]
    createMany?: tbl_servicosCreateManyTbl_petInputEnvelope
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
  }

  export type tbl_taxonomiaUpdateOneRequiredWithoutTbl_petNestedInput = {
    create?: XOR<tbl_taxonomiaCreateWithoutTbl_petInput, tbl_taxonomiaUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_taxonomiaCreateOrConnectWithoutTbl_petInput
    upsert?: tbl_taxonomiaUpsertWithoutTbl_petInput
    connect?: tbl_taxonomiaWhereUniqueInput
    update?: XOR<XOR<tbl_taxonomiaUpdateToOneWithWhereWithoutTbl_petInput, tbl_taxonomiaUpdateWithoutTbl_petInput>, tbl_taxonomiaUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_sexoUpdateOneRequiredWithoutTbl_petNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_petInput, tbl_sexoUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_petInput
    upsert?: tbl_sexoUpsertWithoutTbl_petInput
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_petInput, tbl_sexoUpdateWithoutTbl_petInput>, tbl_sexoUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_usuarioUpdateOneRequiredWithoutTbl_petNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_petInput, tbl_usuarioUncheckedCreateWithoutTbl_petInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_petInput
    upsert?: tbl_usuarioUpsertWithoutTbl_petInput
    connect?: tbl_usuarioWhereUniqueInput
    update?: XOR<XOR<tbl_usuarioUpdateToOneWithWhereWithoutTbl_petInput, tbl_usuarioUpdateWithoutTbl_petInput>, tbl_usuarioUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_servicosUpdateManyWithoutTbl_petNestedInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput> | tbl_servicosCreateWithoutTbl_petInput[] | tbl_servicosUncheckedCreateWithoutTbl_petInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_petInput | tbl_servicosCreateOrConnectWithoutTbl_petInput[]
    upsert?: tbl_servicosUpsertWithWhereUniqueWithoutTbl_petInput | tbl_servicosUpsertWithWhereUniqueWithoutTbl_petInput[]
    createMany?: tbl_servicosCreateManyTbl_petInputEnvelope
    set?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    disconnect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    delete?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    update?: tbl_servicosUpdateWithWhereUniqueWithoutTbl_petInput | tbl_servicosUpdateWithWhereUniqueWithoutTbl_petInput[]
    updateMany?: tbl_servicosUpdateManyWithWhereWithoutTbl_petInput | tbl_servicosUpdateManyWithWhereWithoutTbl_petInput[]
    deleteMany?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
  }

  export type tbl_servicosUncheckedUpdateManyWithoutTbl_petNestedInput = {
    create?: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput> | tbl_servicosCreateWithoutTbl_petInput[] | tbl_servicosUncheckedCreateWithoutTbl_petInput[]
    connectOrCreate?: tbl_servicosCreateOrConnectWithoutTbl_petInput | tbl_servicosCreateOrConnectWithoutTbl_petInput[]
    upsert?: tbl_servicosUpsertWithWhereUniqueWithoutTbl_petInput | tbl_servicosUpsertWithWhereUniqueWithoutTbl_petInput[]
    createMany?: tbl_servicosCreateManyTbl_petInputEnvelope
    set?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    disconnect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    delete?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    connect?: tbl_servicosWhereUniqueInput | tbl_servicosWhereUniqueInput[]
    update?: tbl_servicosUpdateWithWhereUniqueWithoutTbl_petInput | tbl_servicosUpdateWithWhereUniqueWithoutTbl_petInput[]
    updateMany?: tbl_servicosUpdateManyWithWhereWithoutTbl_petInput | tbl_servicosUpdateManyWithWhereWithoutTbl_petInput[]
    deleteMany?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
  }

  export type tbl_categorias_produtosCreateNestedOneWithoutTbl_produtosInput = {
    create?: XOR<tbl_categorias_produtosCreateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedCreateWithoutTbl_produtosInput>
    connectOrCreate?: tbl_categorias_produtosCreateOrConnectWithoutTbl_produtosInput
    connect?: tbl_categorias_produtosWhereUniqueInput
  }

  export type tbl_categorias_produtosUpdateOneRequiredWithoutTbl_produtosNestedInput = {
    create?: XOR<tbl_categorias_produtosCreateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedCreateWithoutTbl_produtosInput>
    connectOrCreate?: tbl_categorias_produtosCreateOrConnectWithoutTbl_produtosInput
    upsert?: tbl_categorias_produtosUpsertWithoutTbl_produtosInput
    connect?: tbl_categorias_produtosWhereUniqueInput
    update?: XOR<XOR<tbl_categorias_produtosUpdateToOneWithWhereWithoutTbl_produtosInput, tbl_categorias_produtosUpdateWithoutTbl_produtosInput>, tbl_categorias_produtosUncheckedUpdateWithoutTbl_produtosInput>
  }

  export type tbl_funcionariosCreateNestedOneWithoutTbl_servicosInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_servicosInput, tbl_funcionariosUncheckedCreateWithoutTbl_servicosInput>
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_servicosInput
    connect?: tbl_funcionariosWhereUniqueInput
  }

  export type tbl_petCreateNestedOneWithoutTbl_servicosInput = {
    create?: XOR<tbl_petCreateWithoutTbl_servicosInput, tbl_petUncheckedCreateWithoutTbl_servicosInput>
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_servicosInput
    connect?: tbl_petWhereUniqueInput
  }

  export type tbl_funcionariosUpdateOneRequiredWithoutTbl_servicosNestedInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_servicosInput, tbl_funcionariosUncheckedCreateWithoutTbl_servicosInput>
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_servicosInput
    upsert?: tbl_funcionariosUpsertWithoutTbl_servicosInput
    connect?: tbl_funcionariosWhereUniqueInput
    update?: XOR<XOR<tbl_funcionariosUpdateToOneWithWhereWithoutTbl_servicosInput, tbl_funcionariosUpdateWithoutTbl_servicosInput>, tbl_funcionariosUncheckedUpdateWithoutTbl_servicosInput>
  }

  export type tbl_petUpdateOneRequiredWithoutTbl_servicosNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_servicosInput, tbl_petUncheckedCreateWithoutTbl_servicosInput>
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_servicosInput
    upsert?: tbl_petUpsertWithoutTbl_servicosInput
    connect?: tbl_petWhereUniqueInput
    update?: XOR<XOR<tbl_petUpdateToOneWithWhereWithoutTbl_servicosInput, tbl_petUpdateWithoutTbl_servicosInput>, tbl_petUncheckedUpdateWithoutTbl_servicosInput>
  }

  export type tbl_funcionariosCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput> | tbl_funcionariosCreateWithoutTbl_sexoInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput | tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_funcionariosCreateManyTbl_sexoInputEnvelope
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
  }

  export type tbl_petCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput> | tbl_petCreateWithoutTbl_sexoInput[] | tbl_petUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_sexoInput | tbl_petCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_petCreateManyTbl_sexoInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_usuarioCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput> | tbl_usuarioCreateWithoutTbl_sexoInput[] | tbl_usuarioUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_sexoInput | tbl_usuarioCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_usuarioCreateManyTbl_sexoInputEnvelope
    connect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
  }

  export type tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput> | tbl_funcionariosCreateWithoutTbl_sexoInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput | tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_funcionariosCreateManyTbl_sexoInputEnvelope
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
  }

  export type tbl_petUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput> | tbl_petCreateWithoutTbl_sexoInput[] | tbl_petUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_sexoInput | tbl_petCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_petCreateManyTbl_sexoInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_usuarioUncheckedCreateNestedManyWithoutTbl_sexoInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput> | tbl_usuarioCreateWithoutTbl_sexoInput[] | tbl_usuarioUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_sexoInput | tbl_usuarioCreateOrConnectWithoutTbl_sexoInput[]
    createMany?: tbl_usuarioCreateManyTbl_sexoInputEnvelope
    connect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
  }

  export type tbl_funcionariosUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput> | tbl_funcionariosCreateWithoutTbl_sexoInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput | tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_funcionariosCreateManyTbl_sexoInputEnvelope
    set?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    disconnect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    delete?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    update?: tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_funcionariosUpdateManyWithWhereWithoutTbl_sexoInput | tbl_funcionariosUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
  }

  export type tbl_petUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput> | tbl_petCreateWithoutTbl_sexoInput[] | tbl_petUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_sexoInput | tbl_petCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_petUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_petCreateManyTbl_sexoInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_petUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_sexoInput | tbl_petUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type tbl_usuarioUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput> | tbl_usuarioCreateWithoutTbl_sexoInput[] | tbl_usuarioUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_sexoInput | tbl_usuarioCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_usuarioUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_usuarioUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_usuarioCreateManyTbl_sexoInputEnvelope
    set?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    disconnect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    delete?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    connect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    update?: tbl_usuarioUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_usuarioUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_usuarioUpdateManyWithWhereWithoutTbl_sexoInput | tbl_usuarioUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_usuarioScalarWhereInput | tbl_usuarioScalarWhereInput[]
  }

  export type tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput> | tbl_funcionariosCreateWithoutTbl_sexoInput[] | tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput | tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_funcionariosCreateManyTbl_sexoInputEnvelope
    set?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    disconnect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    delete?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    connect?: tbl_funcionariosWhereUniqueInput | tbl_funcionariosWhereUniqueInput[]
    update?: tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_funcionariosUpdateManyWithWhereWithoutTbl_sexoInput | tbl_funcionariosUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput> | tbl_petCreateWithoutTbl_sexoInput[] | tbl_petUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_sexoInput | tbl_petCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_petUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_petCreateManyTbl_sexoInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_petUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_sexoInput | tbl_petUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput> | tbl_usuarioCreateWithoutTbl_sexoInput[] | tbl_usuarioUncheckedCreateWithoutTbl_sexoInput[]
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_sexoInput | tbl_usuarioCreateOrConnectWithoutTbl_sexoInput[]
    upsert?: tbl_usuarioUpsertWithWhereUniqueWithoutTbl_sexoInput | tbl_usuarioUpsertWithWhereUniqueWithoutTbl_sexoInput[]
    createMany?: tbl_usuarioCreateManyTbl_sexoInputEnvelope
    set?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    disconnect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    delete?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    connect?: tbl_usuarioWhereUniqueInput | tbl_usuarioWhereUniqueInput[]
    update?: tbl_usuarioUpdateWithWhereUniqueWithoutTbl_sexoInput | tbl_usuarioUpdateWithWhereUniqueWithoutTbl_sexoInput[]
    updateMany?: tbl_usuarioUpdateManyWithWhereWithoutTbl_sexoInput | tbl_usuarioUpdateManyWithWhereWithoutTbl_sexoInput[]
    deleteMany?: tbl_usuarioScalarWhereInput | tbl_usuarioScalarWhereInput[]
  }

  export type tbl_petCreateNestedManyWithoutTbl_taxonomiaInput = {
    create?: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput> | tbl_petCreateWithoutTbl_taxonomiaInput[] | tbl_petUncheckedCreateWithoutTbl_taxonomiaInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_taxonomiaInput | tbl_petCreateOrConnectWithoutTbl_taxonomiaInput[]
    createMany?: tbl_petCreateManyTbl_taxonomiaInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_petUncheckedCreateNestedManyWithoutTbl_taxonomiaInput = {
    create?: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput> | tbl_petCreateWithoutTbl_taxonomiaInput[] | tbl_petUncheckedCreateWithoutTbl_taxonomiaInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_taxonomiaInput | tbl_petCreateOrConnectWithoutTbl_taxonomiaInput[]
    createMany?: tbl_petCreateManyTbl_taxonomiaInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_petUpdateManyWithoutTbl_taxonomiaNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput> | tbl_petCreateWithoutTbl_taxonomiaInput[] | tbl_petUncheckedCreateWithoutTbl_taxonomiaInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_taxonomiaInput | tbl_petCreateOrConnectWithoutTbl_taxonomiaInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_taxonomiaInput | tbl_petUpsertWithWhereUniqueWithoutTbl_taxonomiaInput[]
    createMany?: tbl_petCreateManyTbl_taxonomiaInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_taxonomiaInput | tbl_petUpdateWithWhereUniqueWithoutTbl_taxonomiaInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_taxonomiaInput | tbl_petUpdateManyWithWhereWithoutTbl_taxonomiaInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_taxonomiaNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput> | tbl_petCreateWithoutTbl_taxonomiaInput[] | tbl_petUncheckedCreateWithoutTbl_taxonomiaInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_taxonomiaInput | tbl_petCreateOrConnectWithoutTbl_taxonomiaInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_taxonomiaInput | tbl_petUpsertWithWhereUniqueWithoutTbl_taxonomiaInput[]
    createMany?: tbl_petCreateManyTbl_taxonomiaInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_taxonomiaInput | tbl_petUpdateWithWhereUniqueWithoutTbl_taxonomiaInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_taxonomiaInput | tbl_petUpdateManyWithWhereWithoutTbl_taxonomiaInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type tbl_carrinhoCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput> | tbl_carrinhoCreateWithoutTbl_usuarioInput[] | tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput | tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_carrinhoCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
  }

  export type tbl_comprasCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput> | tbl_comprasCreateWithoutTbl_usuarioInput[] | tbl_comprasUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_comprasCreateOrConnectWithoutTbl_usuarioInput | tbl_comprasCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_comprasCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
  }

  export type tbl_petCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput> | tbl_petCreateWithoutTbl_usuarioInput[] | tbl_petUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_usuarioInput | tbl_petCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_petCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_sexoCreateNestedOneWithoutTbl_usuarioInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_usuarioInput, tbl_sexoUncheckedCreateWithoutTbl_usuarioInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_usuarioInput
    connect?: tbl_sexoWhereUniqueInput
  }

  export type tbl_carrinhoUncheckedCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput> | tbl_carrinhoCreateWithoutTbl_usuarioInput[] | tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput | tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_carrinhoCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
  }

  export type tbl_comprasUncheckedCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput> | tbl_comprasCreateWithoutTbl_usuarioInput[] | tbl_comprasUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_comprasCreateOrConnectWithoutTbl_usuarioInput | tbl_comprasCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_comprasCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
  }

  export type tbl_petUncheckedCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput> | tbl_petCreateWithoutTbl_usuarioInput[] | tbl_petUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_usuarioInput | tbl_petCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_petCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
  }

  export type tbl_carrinhoUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput> | tbl_carrinhoCreateWithoutTbl_usuarioInput[] | tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput | tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_carrinhoUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_carrinhoUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_carrinhoCreateManyTbl_usuarioInputEnvelope
    set?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    disconnect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    delete?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    connect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    update?: tbl_carrinhoUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_carrinhoUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_carrinhoUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_carrinhoUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_carrinhoScalarWhereInput | tbl_carrinhoScalarWhereInput[]
  }

  export type tbl_comprasUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput> | tbl_comprasCreateWithoutTbl_usuarioInput[] | tbl_comprasUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_comprasCreateOrConnectWithoutTbl_usuarioInput | tbl_comprasCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_comprasUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_comprasUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_comprasCreateManyTbl_usuarioInputEnvelope
    set?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    disconnect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    delete?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    connect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    update?: tbl_comprasUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_comprasUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_comprasUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_comprasUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_comprasScalarWhereInput | tbl_comprasScalarWhereInput[]
  }

  export type tbl_petUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput> | tbl_petCreateWithoutTbl_usuarioInput[] | tbl_petUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_usuarioInput | tbl_petCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_petUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_petCreateManyTbl_usuarioInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_petUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_petUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type tbl_sexoUpdateOneRequiredWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_sexoCreateWithoutTbl_usuarioInput, tbl_sexoUncheckedCreateWithoutTbl_usuarioInput>
    connectOrCreate?: tbl_sexoCreateOrConnectWithoutTbl_usuarioInput
    upsert?: tbl_sexoUpsertWithoutTbl_usuarioInput
    connect?: tbl_sexoWhereUniqueInput
    update?: XOR<XOR<tbl_sexoUpdateToOneWithWhereWithoutTbl_usuarioInput, tbl_sexoUpdateWithoutTbl_usuarioInput>, tbl_sexoUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput> | tbl_carrinhoCreateWithoutTbl_usuarioInput[] | tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput | tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_carrinhoUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_carrinhoUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_carrinhoCreateManyTbl_usuarioInputEnvelope
    set?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    disconnect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    delete?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    connect?: tbl_carrinhoWhereUniqueInput | tbl_carrinhoWhereUniqueInput[]
    update?: tbl_carrinhoUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_carrinhoUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_carrinhoUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_carrinhoUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_carrinhoScalarWhereInput | tbl_carrinhoScalarWhereInput[]
  }

  export type tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput> | tbl_comprasCreateWithoutTbl_usuarioInput[] | tbl_comprasUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_comprasCreateOrConnectWithoutTbl_usuarioInput | tbl_comprasCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_comprasUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_comprasUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_comprasCreateManyTbl_usuarioInputEnvelope
    set?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    disconnect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    delete?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    connect?: tbl_comprasWhereUniqueInput | tbl_comprasWhereUniqueInput[]
    update?: tbl_comprasUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_comprasUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_comprasUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_comprasUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_comprasScalarWhereInput | tbl_comprasScalarWhereInput[]
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput> | tbl_petCreateWithoutTbl_usuarioInput[] | tbl_petUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_petCreateOrConnectWithoutTbl_usuarioInput | tbl_petCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_petUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_petUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_petCreateManyTbl_usuarioInputEnvelope
    set?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    disconnect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    delete?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    connect?: tbl_petWhereUniqueInput | tbl_petWhereUniqueInput[]
    update?: tbl_petUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_petUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_petUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_petUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type tbl_funcionariosCreateWithoutTbl_cargosInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_funcionariosInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosCreateOrConnectWithoutTbl_cargosInput = {
    where: tbl_funcionariosWhereUniqueInput
    create: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput>
  }

  export type tbl_funcionariosCreateManyTbl_cargosInputEnvelope = {
    data: tbl_funcionariosCreateManyTbl_cargosInput | tbl_funcionariosCreateManyTbl_cargosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_cargosInput = {
    where: tbl_funcionariosWhereUniqueInput
    update: XOR<tbl_funcionariosUpdateWithoutTbl_cargosInput, tbl_funcionariosUncheckedUpdateWithoutTbl_cargosInput>
    create: XOR<tbl_funcionariosCreateWithoutTbl_cargosInput, tbl_funcionariosUncheckedCreateWithoutTbl_cargosInput>
  }

  export type tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_cargosInput = {
    where: tbl_funcionariosWhereUniqueInput
    data: XOR<tbl_funcionariosUpdateWithoutTbl_cargosInput, tbl_funcionariosUncheckedUpdateWithoutTbl_cargosInput>
  }

  export type tbl_funcionariosUpdateManyWithWhereWithoutTbl_cargosInput = {
    where: tbl_funcionariosScalarWhereInput
    data: XOR<tbl_funcionariosUpdateManyMutationInput, tbl_funcionariosUncheckedUpdateManyWithoutTbl_cargosInput>
  }

  export type tbl_funcionariosScalarWhereInput = {
    AND?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
    OR?: tbl_funcionariosScalarWhereInput[]
    NOT?: tbl_funcionariosScalarWhereInput | tbl_funcionariosScalarWhereInput[]
    id?: IntFilter<"tbl_funcionarios"> | number
    nome?: StringFilter<"tbl_funcionarios"> | string
    email?: StringFilter<"tbl_funcionarios"> | string
    senha?: StringFilter<"tbl_funcionarios"> | string
    telefone?: StringNullableFilter<"tbl_funcionarios"> | string | null
    foto_perfil?: StringNullableFilter<"tbl_funcionarios"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_funcionarios"> | Date | string | null
    id_sexo?: IntFilter<"tbl_funcionarios"> | number
    id_cargo?: IntFilter<"tbl_funcionarios"> | number
  }

  export type tbl_usuarioCreateWithoutTbl_carrinhoInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_compras?: tbl_comprasCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_usuarioInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateWithoutTbl_carrinhoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    id_sexo: number
    tbl_compras?: tbl_comprasUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioCreateOrConnectWithoutTbl_carrinhoInput = {
    where: tbl_usuarioWhereUniqueInput
    create: XOR<tbl_usuarioCreateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedCreateWithoutTbl_carrinhoInput>
  }

  export type tbl_usuarioUpsertWithoutTbl_carrinhoInput = {
    update: XOR<tbl_usuarioUpdateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedUpdateWithoutTbl_carrinhoInput>
    create: XOR<tbl_usuarioCreateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedCreateWithoutTbl_carrinhoInput>
    where?: tbl_usuarioWhereInput
  }

  export type tbl_usuarioUpdateToOneWithWhereWithoutTbl_carrinhoInput = {
    where?: tbl_usuarioWhereInput
    data: XOR<tbl_usuarioUpdateWithoutTbl_carrinhoInput, tbl_usuarioUncheckedUpdateWithoutTbl_carrinhoInput>
  }

  export type tbl_usuarioUpdateWithoutTbl_carrinhoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_compras?: tbl_comprasUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_usuarioNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateWithoutTbl_carrinhoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_compras?: tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_produtosCreateWithoutTbl_categorias_produtosInput = {
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
  }

  export type tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput = {
    id?: number
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
  }

  export type tbl_produtosCreateOrConnectWithoutTbl_categorias_produtosInput = {
    where: tbl_produtosWhereUniqueInput
    create: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput>
  }

  export type tbl_produtosCreateManyTbl_categorias_produtosInputEnvelope = {
    data: tbl_produtosCreateManyTbl_categorias_produtosInput | tbl_produtosCreateManyTbl_categorias_produtosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_produtosUpsertWithWhereUniqueWithoutTbl_categorias_produtosInput = {
    where: tbl_produtosWhereUniqueInput
    update: XOR<tbl_produtosUpdateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedUpdateWithoutTbl_categorias_produtosInput>
    create: XOR<tbl_produtosCreateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedCreateWithoutTbl_categorias_produtosInput>
  }

  export type tbl_produtosUpdateWithWhereUniqueWithoutTbl_categorias_produtosInput = {
    where: tbl_produtosWhereUniqueInput
    data: XOR<tbl_produtosUpdateWithoutTbl_categorias_produtosInput, tbl_produtosUncheckedUpdateWithoutTbl_categorias_produtosInput>
  }

  export type tbl_produtosUpdateManyWithWhereWithoutTbl_categorias_produtosInput = {
    where: tbl_produtosScalarWhereInput
    data: XOR<tbl_produtosUpdateManyMutationInput, tbl_produtosUncheckedUpdateManyWithoutTbl_categorias_produtosInput>
  }

  export type tbl_produtosScalarWhereInput = {
    AND?: tbl_produtosScalarWhereInput | tbl_produtosScalarWhereInput[]
    OR?: tbl_produtosScalarWhereInput[]
    NOT?: tbl_produtosScalarWhereInput | tbl_produtosScalarWhereInput[]
    id?: IntFilter<"tbl_produtos"> | number
    nome?: StringNullableFilter<"tbl_produtos"> | string | null
    descricao?: StringNullableFilter<"tbl_produtos"> | string | null
    foto?: StringNullableFilter<"tbl_produtos"> | string | null
    quantidade?: IntFilter<"tbl_produtos"> | number
    valor_unitario?: FloatFilter<"tbl_produtos"> | number
    id_categoria?: IntFilter<"tbl_produtos"> | number
  }

  export type tbl_usuarioCreateWithoutTbl_comprasInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_carrinho?: tbl_carrinhoCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_usuarioInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateWithoutTbl_comprasInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    id_sexo: number
    tbl_carrinho?: tbl_carrinhoUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioCreateOrConnectWithoutTbl_comprasInput = {
    where: tbl_usuarioWhereUniqueInput
    create: XOR<tbl_usuarioCreateWithoutTbl_comprasInput, tbl_usuarioUncheckedCreateWithoutTbl_comprasInput>
  }

  export type tbl_usuarioUpsertWithoutTbl_comprasInput = {
    update: XOR<tbl_usuarioUpdateWithoutTbl_comprasInput, tbl_usuarioUncheckedUpdateWithoutTbl_comprasInput>
    create: XOR<tbl_usuarioCreateWithoutTbl_comprasInput, tbl_usuarioUncheckedCreateWithoutTbl_comprasInput>
    where?: tbl_usuarioWhereInput
  }

  export type tbl_usuarioUpdateToOneWithWhereWithoutTbl_comprasInput = {
    where?: tbl_usuarioWhereInput
    data: XOR<tbl_usuarioUpdateWithoutTbl_comprasInput, tbl_usuarioUncheckedUpdateWithoutTbl_comprasInput>
  }

  export type tbl_usuarioUpdateWithoutTbl_comprasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_carrinho?: tbl_carrinhoUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_usuarioNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateWithoutTbl_comprasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_carrinho?: tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_cargosCreateWithoutTbl_funcionariosInput = {
    nome?: string | null
  }

  export type tbl_cargosUncheckedCreateWithoutTbl_funcionariosInput = {
    id?: number
    nome?: string | null
  }

  export type tbl_cargosCreateOrConnectWithoutTbl_funcionariosInput = {
    where: tbl_cargosWhereUniqueInput
    create: XOR<tbl_cargosCreateWithoutTbl_funcionariosInput, tbl_cargosUncheckedCreateWithoutTbl_funcionariosInput>
  }

  export type tbl_sexoCreateWithoutTbl_funcionariosInput = {
    nome?: string | null
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_funcionariosInput = {
    id?: number
    nome?: string | null
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_funcionariosInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_funcionariosInput, tbl_sexoUncheckedCreateWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosCreateWithoutTbl_funcionariosInput = {
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    tbl_pet: tbl_petCreateNestedOneWithoutTbl_servicosInput
  }

  export type tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_pet: number
  }

  export type tbl_servicosCreateOrConnectWithoutTbl_funcionariosInput = {
    where: tbl_servicosWhereUniqueInput
    create: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosCreateManyTbl_funcionariosInputEnvelope = {
    data: tbl_servicosCreateManyTbl_funcionariosInput | tbl_servicosCreateManyTbl_funcionariosInput[]
    skipDuplicates?: boolean
  }

  export type tbl_cargosUpsertWithoutTbl_funcionariosInput = {
    update: XOR<tbl_cargosUpdateWithoutTbl_funcionariosInput, tbl_cargosUncheckedUpdateWithoutTbl_funcionariosInput>
    create: XOR<tbl_cargosCreateWithoutTbl_funcionariosInput, tbl_cargosUncheckedCreateWithoutTbl_funcionariosInput>
    where?: tbl_cargosWhereInput
  }

  export type tbl_cargosUpdateToOneWithWhereWithoutTbl_funcionariosInput = {
    where?: tbl_cargosWhereInput
    data: XOR<tbl_cargosUpdateWithoutTbl_funcionariosInput, tbl_cargosUncheckedUpdateWithoutTbl_funcionariosInput>
  }

  export type tbl_cargosUpdateWithoutTbl_funcionariosInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_cargosUncheckedUpdateWithoutTbl_funcionariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_sexoUpsertWithoutTbl_funcionariosInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_funcionariosInput, tbl_sexoUncheckedUpdateWithoutTbl_funcionariosInput>
    create: XOR<tbl_sexoCreateWithoutTbl_funcionariosInput, tbl_sexoUncheckedCreateWithoutTbl_funcionariosInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_funcionariosInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_funcionariosInput, tbl_sexoUncheckedUpdateWithoutTbl_funcionariosInput>
  }

  export type tbl_sexoUpdateWithoutTbl_funcionariosInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_pet?: tbl_petUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_funcionariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_servicosUpsertWithWhereUniqueWithoutTbl_funcionariosInput = {
    where: tbl_servicosWhereUniqueInput
    update: XOR<tbl_servicosUpdateWithoutTbl_funcionariosInput, tbl_servicosUncheckedUpdateWithoutTbl_funcionariosInput>
    create: XOR<tbl_servicosCreateWithoutTbl_funcionariosInput, tbl_servicosUncheckedCreateWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosUpdateWithWhereUniqueWithoutTbl_funcionariosInput = {
    where: tbl_servicosWhereUniqueInput
    data: XOR<tbl_servicosUpdateWithoutTbl_funcionariosInput, tbl_servicosUncheckedUpdateWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosUpdateManyWithWhereWithoutTbl_funcionariosInput = {
    where: tbl_servicosScalarWhereInput
    data: XOR<tbl_servicosUpdateManyMutationInput, tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosInput>
  }

  export type tbl_servicosScalarWhereInput = {
    AND?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
    OR?: tbl_servicosScalarWhereInput[]
    NOT?: tbl_servicosScalarWhereInput | tbl_servicosScalarWhereInput[]
    id?: IntFilter<"tbl_servicos"> | number
    nome?: StringFilter<"tbl_servicos"> | string
    descricao?: StringNullableFilter<"tbl_servicos"> | string | null
    data_realizacao?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    hora?: DateTimeNullableFilter<"tbl_servicos"> | Date | string | null
    id_funcionario?: IntFilter<"tbl_servicos"> | number
    id_pet?: IntFilter<"tbl_servicos"> | number
  }

  export type tbl_taxonomiaCreateWithoutTbl_petInput = {
    especie: string
    raca: string
  }

  export type tbl_taxonomiaUncheckedCreateWithoutTbl_petInput = {
    id?: number
    especie: string
    raca: string
  }

  export type tbl_taxonomiaCreateOrConnectWithoutTbl_petInput = {
    where: tbl_taxonomiaWhereUniqueInput
    create: XOR<tbl_taxonomiaCreateWithoutTbl_petInput, tbl_taxonomiaUncheckedCreateWithoutTbl_petInput>
  }

  export type tbl_sexoCreateWithoutTbl_petInput = {
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_petInput = {
    id?: number
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_usuario?: tbl_usuarioUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_petInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_petInput, tbl_sexoUncheckedCreateWithoutTbl_petInput>
  }

  export type tbl_usuarioCreateWithoutTbl_petInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_carrinho?: tbl_carrinhoCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasCreateNestedManyWithoutTbl_usuarioInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateWithoutTbl_petInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    id_sexo: number
    tbl_carrinho?: tbl_carrinhoUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioCreateOrConnectWithoutTbl_petInput = {
    where: tbl_usuarioWhereUniqueInput
    create: XOR<tbl_usuarioCreateWithoutTbl_petInput, tbl_usuarioUncheckedCreateWithoutTbl_petInput>
  }

  export type tbl_servicosCreateWithoutTbl_petInput = {
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    tbl_funcionarios: tbl_funcionariosCreateNestedOneWithoutTbl_servicosInput
  }

  export type tbl_servicosUncheckedCreateWithoutTbl_petInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_funcionario: number
  }

  export type tbl_servicosCreateOrConnectWithoutTbl_petInput = {
    where: tbl_servicosWhereUniqueInput
    create: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput>
  }

  export type tbl_servicosCreateManyTbl_petInputEnvelope = {
    data: tbl_servicosCreateManyTbl_petInput | tbl_servicosCreateManyTbl_petInput[]
    skipDuplicates?: boolean
  }

  export type tbl_taxonomiaUpsertWithoutTbl_petInput = {
    update: XOR<tbl_taxonomiaUpdateWithoutTbl_petInput, tbl_taxonomiaUncheckedUpdateWithoutTbl_petInput>
    create: XOR<tbl_taxonomiaCreateWithoutTbl_petInput, tbl_taxonomiaUncheckedCreateWithoutTbl_petInput>
    where?: tbl_taxonomiaWhereInput
  }

  export type tbl_taxonomiaUpdateToOneWithWhereWithoutTbl_petInput = {
    where?: tbl_taxonomiaWhereInput
    data: XOR<tbl_taxonomiaUpdateWithoutTbl_petInput, tbl_taxonomiaUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_taxonomiaUpdateWithoutTbl_petInput = {
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_taxonomiaUncheckedUpdateWithoutTbl_petInput = {
    id?: IntFieldUpdateOperationsInput | number
    especie?: StringFieldUpdateOperationsInput | string
    raca?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_sexoUpsertWithoutTbl_petInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_petInput, tbl_sexoUncheckedUpdateWithoutTbl_petInput>
    create: XOR<tbl_sexoCreateWithoutTbl_petInput, tbl_sexoUncheckedCreateWithoutTbl_petInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_petInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_petInput, tbl_sexoUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_sexoUpdateWithoutTbl_petInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_petInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_usuario?: tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_usuarioUpsertWithoutTbl_petInput = {
    update: XOR<tbl_usuarioUpdateWithoutTbl_petInput, tbl_usuarioUncheckedUpdateWithoutTbl_petInput>
    create: XOR<tbl_usuarioCreateWithoutTbl_petInput, tbl_usuarioUncheckedCreateWithoutTbl_petInput>
    where?: tbl_usuarioWhereInput
  }

  export type tbl_usuarioUpdateToOneWithWhereWithoutTbl_petInput = {
    where?: tbl_usuarioWhereInput
    data: XOR<tbl_usuarioUpdateWithoutTbl_petInput, tbl_usuarioUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_usuarioUpdateWithoutTbl_petInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_carrinho?: tbl_carrinhoUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUpdateManyWithoutTbl_usuarioNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateWithoutTbl_petInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_carrinho?: tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_servicosUpsertWithWhereUniqueWithoutTbl_petInput = {
    where: tbl_servicosWhereUniqueInput
    update: XOR<tbl_servicosUpdateWithoutTbl_petInput, tbl_servicosUncheckedUpdateWithoutTbl_petInput>
    create: XOR<tbl_servicosCreateWithoutTbl_petInput, tbl_servicosUncheckedCreateWithoutTbl_petInput>
  }

  export type tbl_servicosUpdateWithWhereUniqueWithoutTbl_petInput = {
    where: tbl_servicosWhereUniqueInput
    data: XOR<tbl_servicosUpdateWithoutTbl_petInput, tbl_servicosUncheckedUpdateWithoutTbl_petInput>
  }

  export type tbl_servicosUpdateManyWithWhereWithoutTbl_petInput = {
    where: tbl_servicosScalarWhereInput
    data: XOR<tbl_servicosUpdateManyMutationInput, tbl_servicosUncheckedUpdateManyWithoutTbl_petInput>
  }

  export type tbl_categorias_produtosCreateWithoutTbl_produtosInput = {
    nome: string
    descricao?: string | null
  }

  export type tbl_categorias_produtosUncheckedCreateWithoutTbl_produtosInput = {
    id?: number
    nome: string
    descricao?: string | null
  }

  export type tbl_categorias_produtosCreateOrConnectWithoutTbl_produtosInput = {
    where: tbl_categorias_produtosWhereUniqueInput
    create: XOR<tbl_categorias_produtosCreateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedCreateWithoutTbl_produtosInput>
  }

  export type tbl_categorias_produtosUpsertWithoutTbl_produtosInput = {
    update: XOR<tbl_categorias_produtosUpdateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedUpdateWithoutTbl_produtosInput>
    create: XOR<tbl_categorias_produtosCreateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedCreateWithoutTbl_produtosInput>
    where?: tbl_categorias_produtosWhereInput
  }

  export type tbl_categorias_produtosUpdateToOneWithWhereWithoutTbl_produtosInput = {
    where?: tbl_categorias_produtosWhereInput
    data: XOR<tbl_categorias_produtosUpdateWithoutTbl_produtosInput, tbl_categorias_produtosUncheckedUpdateWithoutTbl_produtosInput>
  }

  export type tbl_categorias_produtosUpdateWithoutTbl_produtosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_categorias_produtosUncheckedUpdateWithoutTbl_produtosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_funcionariosCreateWithoutTbl_servicosInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    tbl_cargos: tbl_cargosCreateNestedOneWithoutTbl_funcionariosInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosUncheckedCreateWithoutTbl_servicosInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    id_cargo: number
  }

  export type tbl_funcionariosCreateOrConnectWithoutTbl_servicosInput = {
    where: tbl_funcionariosWhereUniqueInput
    create: XOR<tbl_funcionariosCreateWithoutTbl_servicosInput, tbl_funcionariosUncheckedCreateWithoutTbl_servicosInput>
  }

  export type tbl_petCreateWithoutTbl_servicosInput = {
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    tbl_taxonomia: tbl_taxonomiaCreateNestedOneWithoutTbl_petInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_petInput
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_petInput
  }

  export type tbl_petUncheckedCreateWithoutTbl_servicosInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_sexo: number
    id_raca: number
  }

  export type tbl_petCreateOrConnectWithoutTbl_servicosInput = {
    where: tbl_petWhereUniqueInput
    create: XOR<tbl_petCreateWithoutTbl_servicosInput, tbl_petUncheckedCreateWithoutTbl_servicosInput>
  }

  export type tbl_funcionariosUpsertWithoutTbl_servicosInput = {
    update: XOR<tbl_funcionariosUpdateWithoutTbl_servicosInput, tbl_funcionariosUncheckedUpdateWithoutTbl_servicosInput>
    create: XOR<tbl_funcionariosCreateWithoutTbl_servicosInput, tbl_funcionariosUncheckedCreateWithoutTbl_servicosInput>
    where?: tbl_funcionariosWhereInput
  }

  export type tbl_funcionariosUpdateToOneWithWhereWithoutTbl_servicosInput = {
    where?: tbl_funcionariosWhereInput
    data: XOR<tbl_funcionariosUpdateWithoutTbl_servicosInput, tbl_funcionariosUncheckedUpdateWithoutTbl_servicosInput>
  }

  export type tbl_funcionariosUpdateWithoutTbl_servicosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_cargos?: tbl_cargosUpdateOneRequiredWithoutTbl_funcionariosNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateWithoutTbl_servicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_petUpsertWithoutTbl_servicosInput = {
    update: XOR<tbl_petUpdateWithoutTbl_servicosInput, tbl_petUncheckedUpdateWithoutTbl_servicosInput>
    create: XOR<tbl_petCreateWithoutTbl_servicosInput, tbl_petUncheckedCreateWithoutTbl_servicosInput>
    where?: tbl_petWhereInput
  }

  export type tbl_petUpdateToOneWithWhereWithoutTbl_servicosInput = {
    where?: tbl_petWhereInput
    data: XOR<tbl_petUpdateWithoutTbl_servicosInput, tbl_petUncheckedUpdateWithoutTbl_servicosInput>
  }

  export type tbl_petUpdateWithoutTbl_servicosInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_taxonomia?: tbl_taxonomiaUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateWithoutTbl_servicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_funcionariosCreateWithoutTbl_sexoInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    tbl_cargos: tbl_cargosCreateNestedOneWithoutTbl_funcionariosInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_cargo: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_funcionariosInput
  }

  export type tbl_funcionariosCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_funcionariosWhereUniqueInput
    create: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_funcionariosCreateManyTbl_sexoInputEnvelope = {
    data: tbl_funcionariosCreateManyTbl_sexoInput | tbl_funcionariosCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_petCreateWithoutTbl_sexoInput = {
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    tbl_taxonomia: tbl_taxonomiaCreateNestedOneWithoutTbl_petInput
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_petInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petUncheckedCreateWithoutTbl_sexoInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_raca: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_petWhereUniqueInput
    create: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_petCreateManyTbl_sexoInputEnvelope = {
    data: tbl_petCreateManyTbl_sexoInput | tbl_petCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_usuarioCreateWithoutTbl_sexoInput = {
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_carrinho?: tbl_carrinhoCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateWithoutTbl_sexoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
    tbl_carrinho?: tbl_carrinhoUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_compras?: tbl_comprasUncheckedCreateNestedManyWithoutTbl_usuarioInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioCreateOrConnectWithoutTbl_sexoInput = {
    where: tbl_usuarioWhereUniqueInput
    create: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_usuarioCreateManyTbl_sexoInputEnvelope = {
    data: tbl_usuarioCreateManyTbl_sexoInput | tbl_usuarioCreateManyTbl_sexoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_funcionariosUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_funcionariosWhereUniqueInput
    update: XOR<tbl_funcionariosUpdateWithoutTbl_sexoInput, tbl_funcionariosUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_funcionariosCreateWithoutTbl_sexoInput, tbl_funcionariosUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_funcionariosUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_funcionariosWhereUniqueInput
    data: XOR<tbl_funcionariosUpdateWithoutTbl_sexoInput, tbl_funcionariosUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_funcionariosUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_funcionariosScalarWhereInput
    data: XOR<tbl_funcionariosUpdateManyMutationInput, tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_petUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_petWhereUniqueInput
    update: XOR<tbl_petUpdateWithoutTbl_sexoInput, tbl_petUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_petCreateWithoutTbl_sexoInput, tbl_petUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_petUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_petWhereUniqueInput
    data: XOR<tbl_petUpdateWithoutTbl_sexoInput, tbl_petUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_petUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_petScalarWhereInput
    data: XOR<tbl_petUpdateManyMutationInput, tbl_petUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_petScalarWhereInput = {
    AND?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
    OR?: tbl_petScalarWhereInput[]
    NOT?: tbl_petScalarWhereInput | tbl_petScalarWhereInput[]
    id?: IntFilter<"tbl_pet"> | number
    nome?: StringNullableFilter<"tbl_pet"> | string | null
    foto?: StringNullableFilter<"tbl_pet"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_pet"> | Date | string | null
    id_dono?: IntFilter<"tbl_pet"> | number
    id_sexo?: IntFilter<"tbl_pet"> | number
    id_raca?: IntFilter<"tbl_pet"> | number
  }

  export type tbl_usuarioUpsertWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_usuarioWhereUniqueInput
    update: XOR<tbl_usuarioUpdateWithoutTbl_sexoInput, tbl_usuarioUncheckedUpdateWithoutTbl_sexoInput>
    create: XOR<tbl_usuarioCreateWithoutTbl_sexoInput, tbl_usuarioUncheckedCreateWithoutTbl_sexoInput>
  }

  export type tbl_usuarioUpdateWithWhereUniqueWithoutTbl_sexoInput = {
    where: tbl_usuarioWhereUniqueInput
    data: XOR<tbl_usuarioUpdateWithoutTbl_sexoInput, tbl_usuarioUncheckedUpdateWithoutTbl_sexoInput>
  }

  export type tbl_usuarioUpdateManyWithWhereWithoutTbl_sexoInput = {
    where: tbl_usuarioScalarWhereInput
    data: XOR<tbl_usuarioUpdateManyMutationInput, tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoInput>
  }

  export type tbl_usuarioScalarWhereInput = {
    AND?: tbl_usuarioScalarWhereInput | tbl_usuarioScalarWhereInput[]
    OR?: tbl_usuarioScalarWhereInput[]
    NOT?: tbl_usuarioScalarWhereInput | tbl_usuarioScalarWhereInput[]
    id?: IntFilter<"tbl_usuario"> | number
    nome?: StringFilter<"tbl_usuario"> | string
    email?: StringFilter<"tbl_usuario"> | string
    senha?: StringFilter<"tbl_usuario"> | string
    telefone?: StringNullableFilter<"tbl_usuario"> | string | null
    data_nascimento?: DateTimeNullableFilter<"tbl_usuario"> | Date | string | null
    foto_perfil?: StringNullableFilter<"tbl_usuario"> | string | null
    id_sexo?: IntFilter<"tbl_usuario"> | number
  }

  export type tbl_petCreateWithoutTbl_taxonomiaInput = {
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_petInput
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_petInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petUncheckedCreateWithoutTbl_taxonomiaInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_sexo: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petCreateOrConnectWithoutTbl_taxonomiaInput = {
    where: tbl_petWhereUniqueInput
    create: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput>
  }

  export type tbl_petCreateManyTbl_taxonomiaInputEnvelope = {
    data: tbl_petCreateManyTbl_taxonomiaInput | tbl_petCreateManyTbl_taxonomiaInput[]
    skipDuplicates?: boolean
  }

  export type tbl_petUpsertWithWhereUniqueWithoutTbl_taxonomiaInput = {
    where: tbl_petWhereUniqueInput
    update: XOR<tbl_petUpdateWithoutTbl_taxonomiaInput, tbl_petUncheckedUpdateWithoutTbl_taxonomiaInput>
    create: XOR<tbl_petCreateWithoutTbl_taxonomiaInput, tbl_petUncheckedCreateWithoutTbl_taxonomiaInput>
  }

  export type tbl_petUpdateWithWhereUniqueWithoutTbl_taxonomiaInput = {
    where: tbl_petWhereUniqueInput
    data: XOR<tbl_petUpdateWithoutTbl_taxonomiaInput, tbl_petUncheckedUpdateWithoutTbl_taxonomiaInput>
  }

  export type tbl_petUpdateManyWithWhereWithoutTbl_taxonomiaInput = {
    where: tbl_petScalarWhereInput
    data: XOR<tbl_petUpdateManyMutationInput, tbl_petUncheckedUpdateManyWithoutTbl_taxonomiaInput>
  }

  export type tbl_carrinhoCreateWithoutTbl_usuarioInput = {
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
  }

  export type tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput = {
    id?: number
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
  }

  export type tbl_carrinhoCreateOrConnectWithoutTbl_usuarioInput = {
    where: tbl_carrinhoWhereUniqueInput
    create: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoCreateManyTbl_usuarioInputEnvelope = {
    data: tbl_carrinhoCreateManyTbl_usuarioInput | tbl_carrinhoCreateManyTbl_usuarioInput[]
    skipDuplicates?: boolean
  }

  export type tbl_comprasCreateWithoutTbl_usuarioInput = {
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
  }

  export type tbl_comprasUncheckedCreateWithoutTbl_usuarioInput = {
    id?: number
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
  }

  export type tbl_comprasCreateOrConnectWithoutTbl_usuarioInput = {
    where: tbl_comprasWhereUniqueInput
    create: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_comprasCreateManyTbl_usuarioInputEnvelope = {
    data: tbl_comprasCreateManyTbl_usuarioInput | tbl_comprasCreateManyTbl_usuarioInput[]
    skipDuplicates?: boolean
  }

  export type tbl_petCreateWithoutTbl_usuarioInput = {
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    tbl_taxonomia: tbl_taxonomiaCreateNestedOneWithoutTbl_petInput
    tbl_sexo: tbl_sexoCreateNestedOneWithoutTbl_petInput
    tbl_servicos?: tbl_servicosCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petUncheckedCreateWithoutTbl_usuarioInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    id_raca: number
    tbl_servicos?: tbl_servicosUncheckedCreateNestedManyWithoutTbl_petInput
  }

  export type tbl_petCreateOrConnectWithoutTbl_usuarioInput = {
    where: tbl_petWhereUniqueInput
    create: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_petCreateManyTbl_usuarioInputEnvelope = {
    data: tbl_petCreateManyTbl_usuarioInput | tbl_petCreateManyTbl_usuarioInput[]
    skipDuplicates?: boolean
  }

  export type tbl_sexoCreateWithoutTbl_usuarioInput = {
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosCreateNestedManyWithoutTbl_sexoInput
    tbl_pet?: tbl_petCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoUncheckedCreateWithoutTbl_usuarioInput = {
    id?: number
    nome?: string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedCreateNestedManyWithoutTbl_sexoInput
    tbl_pet?: tbl_petUncheckedCreateNestedManyWithoutTbl_sexoInput
  }

  export type tbl_sexoCreateOrConnectWithoutTbl_usuarioInput = {
    where: tbl_sexoWhereUniqueInput
    create: XOR<tbl_sexoCreateWithoutTbl_usuarioInput, tbl_sexoUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoUpsertWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_carrinhoWhereUniqueInput
    update: XOR<tbl_carrinhoUpdateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedUpdateWithoutTbl_usuarioInput>
    create: XOR<tbl_carrinhoCreateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoUpdateWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_carrinhoWhereUniqueInput
    data: XOR<tbl_carrinhoUpdateWithoutTbl_usuarioInput, tbl_carrinhoUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoUpdateManyWithWhereWithoutTbl_usuarioInput = {
    where: tbl_carrinhoScalarWhereInput
    data: XOR<tbl_carrinhoUpdateManyMutationInput, tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioInput>
  }

  export type tbl_carrinhoScalarWhereInput = {
    AND?: tbl_carrinhoScalarWhereInput | tbl_carrinhoScalarWhereInput[]
    OR?: tbl_carrinhoScalarWhereInput[]
    NOT?: tbl_carrinhoScalarWhereInput | tbl_carrinhoScalarWhereInput[]
    id?: IntFilter<"tbl_carrinho"> | number
    quantidade_produtos?: IntFilter<"tbl_carrinho"> | number
    valor_total?: FloatFilter<"tbl_carrinho"> | number
    id_produtos?: IntNullableFilter<"tbl_carrinho"> | number | null
    id_cliente?: IntFilter<"tbl_carrinho"> | number
  }

  export type tbl_comprasUpsertWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_comprasWhereUniqueInput
    update: XOR<tbl_comprasUpdateWithoutTbl_usuarioInput, tbl_comprasUncheckedUpdateWithoutTbl_usuarioInput>
    create: XOR<tbl_comprasCreateWithoutTbl_usuarioInput, tbl_comprasUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_comprasUpdateWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_comprasWhereUniqueInput
    data: XOR<tbl_comprasUpdateWithoutTbl_usuarioInput, tbl_comprasUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_comprasUpdateManyWithWhereWithoutTbl_usuarioInput = {
    where: tbl_comprasScalarWhereInput
    data: XOR<tbl_comprasUpdateManyMutationInput, tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioInput>
  }

  export type tbl_comprasScalarWhereInput = {
    AND?: tbl_comprasScalarWhereInput | tbl_comprasScalarWhereInput[]
    OR?: tbl_comprasScalarWhereInput[]
    NOT?: tbl_comprasScalarWhereInput | tbl_comprasScalarWhereInput[]
    id?: IntFilter<"tbl_compras"> | number
    id_cliente?: IntFilter<"tbl_compras"> | number
    data_compra?: DateTimeFilter<"tbl_compras"> | Date | string
    valor_total?: FloatFilter<"tbl_compras"> | number
    status_compra?: StringFilter<"tbl_compras"> | string
    endereco_entrega?: StringNullableFilter<"tbl_compras"> | string | null
    metodo_pagamento?: StringNullableFilter<"tbl_compras"> | string | null
  }

  export type tbl_petUpsertWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_petWhereUniqueInput
    update: XOR<tbl_petUpdateWithoutTbl_usuarioInput, tbl_petUncheckedUpdateWithoutTbl_usuarioInput>
    create: XOR<tbl_petCreateWithoutTbl_usuarioInput, tbl_petUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_petUpdateWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_petWhereUniqueInput
    data: XOR<tbl_petUpdateWithoutTbl_usuarioInput, tbl_petUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_petUpdateManyWithWhereWithoutTbl_usuarioInput = {
    where: tbl_petScalarWhereInput
    data: XOR<tbl_petUpdateManyMutationInput, tbl_petUncheckedUpdateManyWithoutTbl_usuarioInput>
  }

  export type tbl_sexoUpsertWithoutTbl_usuarioInput = {
    update: XOR<tbl_sexoUpdateWithoutTbl_usuarioInput, tbl_sexoUncheckedUpdateWithoutTbl_usuarioInput>
    create: XOR<tbl_sexoCreateWithoutTbl_usuarioInput, tbl_sexoUncheckedCreateWithoutTbl_usuarioInput>
    where?: tbl_sexoWhereInput
  }

  export type tbl_sexoUpdateToOneWithWhereWithoutTbl_usuarioInput = {
    where?: tbl_sexoWhereInput
    data: XOR<tbl_sexoUpdateWithoutTbl_usuarioInput, tbl_sexoUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_sexoUpdateWithoutTbl_usuarioInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateManyWithoutTbl_sexoNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_sexoUncheckedUpdateWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_funcionarios?: tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_sexoNestedInput
  }

  export type tbl_funcionariosCreateManyTbl_cargosInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
  }

  export type tbl_funcionariosUpdateWithoutTbl_cargosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_funcionariosNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateWithoutTbl_cargosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateManyWithoutTbl_cargosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_produtosCreateManyTbl_categorias_produtosInput = {
    id?: number
    nome?: string | null
    descricao?: string | null
    foto?: string | null
    quantidade?: number
    valor_unitario: number
  }

  export type tbl_produtosUpdateWithoutTbl_categorias_produtosInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type tbl_produtosUncheckedUpdateWithoutTbl_categorias_produtosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type tbl_produtosUncheckedUpdateManyWithoutTbl_categorias_produtosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade?: IntFieldUpdateOperationsInput | number
    valor_unitario?: FloatFieldUpdateOperationsInput | number
  }

  export type tbl_servicosCreateManyTbl_funcionariosInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_pet: number
  }

  export type tbl_servicosUpdateWithoutTbl_funcionariosInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_pet?: tbl_petUpdateOneRequiredWithoutTbl_servicosNestedInput
  }

  export type tbl_servicosUncheckedUpdateWithoutTbl_funcionariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_pet?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_pet?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_servicosCreateManyTbl_petInput = {
    id?: number
    nome: string
    descricao?: string | null
    data_realizacao?: Date | string | null
    hora?: Date | string | null
    id_funcionario: number
  }

  export type tbl_servicosUpdateWithoutTbl_petInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_funcionarios?: tbl_funcionariosUpdateOneRequiredWithoutTbl_servicosNestedInput
  }

  export type tbl_servicosUncheckedUpdateWithoutTbl_petInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_funcionario?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_servicosUncheckedUpdateManyWithoutTbl_petInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    data_realizacao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_funcionario?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_funcionariosCreateManyTbl_sexoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    foto_perfil?: string | null
    data_nascimento?: Date | string | null
    id_cargo: number
  }

  export type tbl_petCreateManyTbl_sexoInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_raca: number
  }

  export type tbl_usuarioCreateManyTbl_sexoInput = {
    id?: number
    nome: string
    email: string
    senha: string
    telefone?: string | null
    data_nascimento?: Date | string | null
    foto_perfil?: string | null
  }

  export type tbl_funcionariosUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_cargos?: tbl_cargosUpdateOneRequiredWithoutTbl_funcionariosNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cargo?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_funcionariosNestedInput
  }

  export type tbl_funcionariosUncheckedUpdateManyWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_cargo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_petUpdateWithoutTbl_sexoInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_taxonomia?: tbl_taxonomiaUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_usuarioUpdateWithoutTbl_sexoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_carrinho?: tbl_carrinhoUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
    tbl_carrinho?: tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_compras?: tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioNestedInput
    tbl_pet?: tbl_petUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateManyWithoutTbl_sexoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    foto_perfil?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_petCreateManyTbl_taxonomiaInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_dono: number
    id_sexo: number
  }

  export type tbl_petUpdateWithoutTbl_taxonomiaInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateWithoutTbl_taxonomiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_sexo?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_taxonomiaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_dono?: IntFieldUpdateOperationsInput | number
    id_sexo?: IntFieldUpdateOperationsInput | number
  }

  export type tbl_carrinhoCreateManyTbl_usuarioInput = {
    id?: number
    quantidade_produtos?: number
    valor_total?: number
    id_produtos?: number | null
  }

  export type tbl_comprasCreateManyTbl_usuarioInput = {
    id?: number
    data_compra: Date | string
    valor_total: number
    status_compra: string
    endereco_entrega?: string | null
    metodo_pagamento?: string | null
  }

  export type tbl_petCreateManyTbl_usuarioInput = {
    id?: number
    nome?: string | null
    foto?: string | null
    data_nascimento?: Date | string | null
    id_sexo: number
    id_raca: number
  }

  export type tbl_carrinhoUpdateWithoutTbl_usuarioInput = {
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_carrinhoUncheckedUpdateWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_carrinhoUncheckedUpdateManyWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantidade_produtos?: IntFieldUpdateOperationsInput | number
    valor_total?: FloatFieldUpdateOperationsInput | number
    id_produtos?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tbl_comprasUpdateWithoutTbl_usuarioInput = {
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_comprasUncheckedUpdateWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_comprasUncheckedUpdateManyWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    data_compra?: DateTimeFieldUpdateOperationsInput | Date | string
    valor_total?: FloatFieldUpdateOperationsInput | number
    status_compra?: StringFieldUpdateOperationsInput | string
    endereco_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    metodo_pagamento?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_petUpdateWithoutTbl_usuarioInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tbl_taxonomia?: tbl_taxonomiaUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_sexo?: tbl_sexoUpdateOneRequiredWithoutTbl_petNestedInput
    tbl_servicos?: tbl_servicosUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
    tbl_servicos?: tbl_servicosUncheckedUpdateManyWithoutTbl_petNestedInput
  }

  export type tbl_petUncheckedUpdateManyWithoutTbl_usuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    foto?: NullableStringFieldUpdateOperationsInput | string | null
    data_nascimento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_sexo?: IntFieldUpdateOperationsInput | number
    id_raca?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Tbl_cargosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_cargosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_cargosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_categorias_produtosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_categorias_produtosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_categorias_produtosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_funcionariosCountOutputTypeDefaultArgs instead
     */
    export type Tbl_funcionariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_funcionariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_petCountOutputTypeDefaultArgs instead
     */
    export type Tbl_petCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_petCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_sexoCountOutputTypeDefaultArgs instead
     */
    export type Tbl_sexoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_sexoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_taxonomiaCountOutputTypeDefaultArgs instead
     */
    export type Tbl_taxonomiaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_taxonomiaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_usuarioCountOutputTypeDefaultArgs instead
     */
    export type Tbl_usuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_cargosDefaultArgs instead
     */
    export type tbl_cargosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_cargosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_carrinhoDefaultArgs instead
     */
    export type tbl_carrinhoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_carrinhoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_categorias_produtosDefaultArgs instead
     */
    export type tbl_categorias_produtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_categorias_produtosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_comprasDefaultArgs instead
     */
    export type tbl_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_comprasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_funcionariosDefaultArgs instead
     */
    export type tbl_funcionariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_funcionariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_petDefaultArgs instead
     */
    export type tbl_petArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_petDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_produtosDefaultArgs instead
     */
    export type tbl_produtosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_produtosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_servicosDefaultArgs instead
     */
    export type tbl_servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_servicosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_sexoDefaultArgs instead
     */
    export type tbl_sexoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_sexoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_taxonomiaDefaultArgs instead
     */
    export type tbl_taxonomiaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_taxonomiaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_usuarioDefaultArgs instead
     */
    export type tbl_usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_usuarioDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}